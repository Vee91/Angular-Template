
define(['angular','app','moment','displayMenu','jqueryui','bootstrap','angular-datepicker','applyLevServices','applyLevDirectives','applyLevFactories','dragDropServices','angularIntro'], function(angular,app,moment) {
	(function(angular){
        angular.property = (function(obj) {
                return function(key) {
                        return obj == null ? void 0 : obj[key];
                };
        });
        angular.isZero = (function(obj) {
            
                    return obj == 0;
       
    });
})(angular); 

	
app.controller('ApplyLeaveCtrl', ['$scope','$location','$http','$q','$compile','$modal', '$log','$rootScope','$route','$window','commonAppLevService','applyLevService','quickLeaveService','WeekendService','ValidateDtService','leaveCalendarService','dragDropServices',function($scope,$location, $http,$q,$compile,$modal, $log,$rootScope,$route,$window,commonAppLevService,applyLevService,quickLeaveService,WeekendService,ValidateDtService,leaveCalendarService,dragDropServices)
	   {                                  	
	   
											$rootScope.isResetAll=false;
											$rootScope.processing=true;
											$rootScope.isquickApplyCalendar =false;
	                                    	$rootScope.isPlanLevCalendar =false;
											$scope.tabSelected="present";
											$scope.isAmend=false;
	                                        $scope.disableSubmit=false;
	                                        $scope.isYearlyNormal=true;
											$scope.isHovered=true;
											$scope.isInfoNormal=true;
											$scope.countryName='';
	                   						$scope.quickTypes1=[];
	                                    	$scope.leave={};
	                                    	$scope.amendObj={};
	                                    	$scope.amendObj.endDate=null;
	                                    	$scope.leave.leaveList1=[{"newLeave":{'id':0}}];  
	                                    	$scope.leave.planList=[{"planLeave":{'id':0}}]; 
	                                    	$scope.counter=0;
	                                    	commonAppLevService.rowIndex=0;
	                                    	$scope.oldLevTypeName="Select";
	                                    	$scope.leave.leaveList1[0].newLeave.Attribute1_Value="Select";
	                                    	$scope.defaultAddress='YES';
	                                    	$scope.isOneCalendar=true;
	                                    	$scope.leave.leaveList1[$scope.counter].sDateDurations=['Second Half','Full Day'];
	                                    	$scope.leave.leaveList1[$scope.counter].eDateDurations=['First Half','Full Day'];
	                                    	$scope.leave.leaveList1[$scope.counter].newLeave.leaveTypeName="Select";
	                                    	$scope.leave.leaveList1[$scope.counter].newLeave.startDuration="Full Day";
	                                    	$scope.leave.leaveList1[$scope.counter].newLeave.endDuration="Full Day"; 
	                                    	$scope.leave.leaveList1[$scope.counter].checkHalfDay=false;
	                                    	$scope.leave.leaveList1[$scope.counter].showHalfDay=false;
	                                    	$scope.leave.leaveList1[$scope.counter].showParent=false;
	                                    	$scope.leave.leaveList1[$scope.counter].showChild=false;
	                                    	$scope.leave.leaveList1[$scope.counter].newLeave.noOfDays=0.0;
	                                    	$scope.leave.leaveList1[$scope.counter].isManualAddress=false;
	                                    	var startDate='Full Day',endDate='Full Day';
	                                    	$scope.leave.leaveList1[$scope.counter].serverErrMsg='';
	                                    	$scope.leave.leaveList1[$scope.counter].newLeave.errorMsg='';
	                                    	$scope.leave.leaveList1[$scope.counter].errorMsg='';
	                                    	$scope.leave.leaveList1[$scope.counter].errorSDate='';
	                                    	$scope.leave.leaveList1[$scope.counter].errorEDate='';
	                                    	$scope.isFlexi=false;
	                                    	$scope.isMtrntyAccptd=false;
	                                    	$scope.planCounter=0;
	                                    	$scope.quickLevType='';
	                                    	$scope.quickDate='';
	                                    	$scope.quickReason='';
	                                    	$scope.dependencyMap={};
	                                    	$scope.dependencyflag=true;
	                                    	var maxMinCheck=false;
	                                    	 if($rootScope.isCopyToNew){
	    	                                 		$scope.leave.leaveList1 = commonAppLevService.copyToNewList;
	    	                                 		$scope.presentAdd=$scope.leave.leaveList1[0].newLeave.address;
   	    	                                        $scope.presentMobNo=$scope.leave.leaveList1[0].newLeave.cellNo;
	    	                                    //	$rootScope.isCopyToNew = false;
	    	                                 		//$scope.getAdditionalfields(commonAppLevService.copyToNewList[0].newLeave.leaveTypeName,0);
	    	                                 	};   
	                                    	
//Fetch data from server side -----------------------------------------------------------------------------------------------------------------	                                    	
	                                    	var amendLevDetails=$http.post('/leaverest/rest/amendLev/?cd=' + (new Date()).getTime());
	                                    	var myCalenderDetails = $http.post('/leaverest/rest/getEmployeeLevDetails/?cd=' + (new Date()).getTime());
	                                    	var levTypeDetails = $http.post('/leaverest/rest/getEmployeeLevTypeDetails/?cd=' + (new Date()).getTime());
	                                    	var fullResponse=$q.all([amendLevDetails , myCalenderDetails ,levTypeDetails]);
	                                    	fullResponse.then(function(resultList)
	    	                                    {
	    	                                    	$rootScope.processing=false;
	    	                                    	if(resultList[0]){
	    	                                    		var tempResp=resultList[0];
	    	                                    		var tempResp1=resultList[0].data;
	    	                                    		if(tempResp1=="" || tempResp1==undefined || tempResp1==null){
	    	                                    			$scope.isAmend=false;
	    	                                    		}else{
	    	                                    			$rootScope.processing=false;
	    	                                    			$scope.isAmend=true;
	    	                                    			$scope.levBalList =resultList[2].data.EmpLevBalanceList;
	    	                                    			if(!(0==$scope.levBalList.length))
	    	                                    				{
	        	    	                                     $scope.countryFlg=$scope.levBalList[0].countryCode;
	        	    	                                     $scope.countryName=$scope.levBalList[0].countryName;
	        	    	                                     var flgElem=$("#countryFlag");
	        	    	                                     flgElem.attr('data-ng-src',"appResources/img/flags/"+$scope.countryFlg+".jpg");
	        	    	                                     $compile(flgElem)($scope);
	    	                                    				}else{
	    		    	                                    		$scope.levBalErrMsg="Leave balance data does not exist.";
	    		    	                                    	};
	    	                                    			$rootScope.amendEndDate=tempResp.data.endDate;
	    	                                    			$scope.amendObj=tempResp.data.amendDetails;
	    	                                    		};
	    	                                    	};
	    	                                    	if(resultList[1]){
	    	                                    		var tmp = [];
		    	                                    	angular.forEach(resultList[1], function(response)
		    	                                    	{
		    	                                    	tmp.push(response);
		    	                                    	});
		    	                                    	$scope.leave.yearlist=tmp[0];
		    	                                    	commonAppLevService.yearlist=tmp[0];
		    	                                    	if(!(resultList[0].data==null || resultList[0].data.lwpCalendar==undefined))
		                            		    	      { 
			                             		    		 var lwpCalData=resultList[0].data.lwpCalendar;
			                             		    		 var lwpYearList=Object.keys(resultList[0].data.lwpCalendar);
			                             		    		angular.forEach(lwpYearList, function(value,key)
					    	                                    	{
			                             		    			$scope.leave.yearlist[value]=lwpCalData[value];
			                             		    			commonAppLevService.yearlist[value]=lwpCalData[value];
					    	                                    	});
			                             		    		 
			                             		    		
			    	                                    
		                            		    	      };
		    	                                    	
		    	                                    	
		    	                                    	
		    	                                    	
		    	                                    	
		    	                                    	var calYearsList=Object.keys(tmp[0]);
		                             		    		calYearsList.sort();
		                             		    		angular.forEach(calYearsList, function(value,key)
				    	                                    	{
		                             		    		$scope.minYear=moment([calYearsList[0]]).format("YYYY-MM-DD");
		                             		    		$scope.maxYear=moment([calYearsList[calYearsList.length-1]]).month(11).date(31).format("YYYY-MM-DD");
				    	                                    	});
	    	                                    	};
	    	                                    	if(resultList[2] && !$scope.isAmend){
	    	                                    		
	    	                                    		if(!(undefined==resultList[2].data[0]))
	    	                                    		if("422"==resultList[2].data[0].code){
	    	                                    			$scope.errorMsg=resultList[2].data[0].message;
	    	                                    			$location.path("/levCalErr");
	    	                                    		};
	    	                                    			 $scope.leaveTypes = resultList[2].data.listofLevTypeDetail;
	        	    	                                    // $scope.leave.leaveList1[$scope.counter].newLeave.leaveTypeName=$scope.leaveTypes[0]; // uncomment if we use ng-options for loop
	        	    	                                     $scope.addressList= resultList[2].data.addressList;        //address details
	        	    	                                     $scope.levBalList =resultList[2].data.EmpLevBalanceList; 
	        	    	                                     //balance details
	        	    	                                     if(!(0==$scope.levBalList.length))
	    	                                    				{
	        	    	                                     $scope.countryFlg=$scope.levBalList[0].countryCode;   
	        	    	                                     applyLevService.countryCode=$scope.countryFlg;
	        	    	                                     $scope.countryName=$scope.levBalList[0].countryName;
	        	    	                                     var flgElem=$("#countryFlag");
	        	    	                                     flgElem.attr('data-ng-src',"appResources/img/flags/"+$scope.countryFlg+".jpg");
	        	    	                                     $compile(flgElem)($scope);
	    	                                    	}else{
	    	                                    		$scope.levBalErrMsg="Leave balance data does not exist.";
	    	                                    	};
	        	    	                                     $scope.leave.leaveList1[$scope.counter].newLeave.contactAddress=angular.copy($scope.addressList[0].address);
	        	                                    		 $scope.leave.leaveList1[$scope.counter].newLeave.contactNumCell=angular.copy($scope.addressList[0].mobilePhone);
	        	                                    		 if($rootScope.isCopyToNew){
	        	                                    			 $rootScope.isCopyToNew = false;
	        	                                    		 }else{
	        	                                    			 $scope.presentAdd=angular.copy($scope.addressList[0].address);
		        	    	                                     $scope.presentMobNo=angular.copy($scope.addressList[0].mobilePhone);
	        	                                    		 }
	        	                                    		 $scope.permanentAdd= angular.copy($scope.addressList[1].address);
	        	    	                                     $scope.permanentMobNo= angular.copy($scope.addressList[1].mobilePhone); 
	        	                                    		 $scope.otherAdd=angular.copy($scope.addressList[2].address);
	        	    	                                     $scope.otherMobNo=angular.copy($scope.addressList[2].mobilePhone);
	        	    	                                     
	        	    	                                    
	    	                                    	};
	    	                                    	
	    	                                    },function(error) {
	    	                                    	if(error.config.url.includes("amendLev") && error.status=="404"){
	    	                                    		$rootScope.processing=false;
	    	                                    		 $location.path("/amendLevErr");
	    	                                    	}else if(error.config.url.includes("getEmployeeLevDetails") && error.status=="404"){
	    	                                    		$rootScope.processing=false;
	    	                                    		 $location.path("/levCalErr");
	    	                                    	}else if(error.config.url.includes("getEmployeeLevTypeDetails") && error.status=="404"){
	    	                                    		$rootScope.processing=false;
	    	                                    		 $location.path("/levTypeErr");
	    	                                    	}
	    	                                    }, function(update) {
	    	                                    	  alert('Got notification: ' + update);

	    	                                 });
                                   	
	                                   
// method to get additional fields ----------------------------------------------------------------------------------                            	
$scope.getAdditionalfields=function(selectedLeaveTypeName,index)
{
		 //code to remove dirty css of css applied because of on submit
		 var field=angular.element($("#leaveTypeName_"+index));
		 field.removeClass('dirty-field');
		 $scope.leave.leaveList1[index].draftErr='';
		 //$scope.leave.leaveList1[index].newLeave.reason='';
		 if($scope.isMtrntyAccptd || $scope.isLwpAccptd){
			 //do nothing
		 }else{
			 $scope.isMtrntyAccptd=false;
			 $scope.isLwpAccptd=false; 
		 }
		 if($scope.oldLevTypeName=="Flexi Holiday"){
			 $scope.leave.leaveList1[index].newLeave.startDate=undefined;
		     $scope.leave.leaveList1[index].newLeave.endDate=undefined;
			 $scope.leave.leaveList1[index].newLeave.reason=undefined;
			 $scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
			}
		$scope.oldLevTypeName=angular.copy($scope.leave.leaveList1[index].newLeave.leaveTypeName);
		 if(selectedLeaveTypeName=="Flexi Holiday"){
			 $scope.isFlexi=true;
			 if(!($scope.leave.leaveList1[index].newLeave.startDate==undefined) && !($scope.leave.leaveList1[index].newLeave.endDate==undefined)){
				 var tempSDate=moment($scope.leave.leaveList1[index].newLeave.startDate);
				 var tempEDate=moment($scope.leave.leaveList1[index].newLeave.endDate);
				 while (tempEDate._d.getTime() > tempSDate._d.getTime()) {
						
						var tempTimeStamp = tempEDate._d.getTime();
						$("#day"+ tempTimeStamp).removeClass("hoverDiv");
						tempEDate = tempEDate.add(-1,'d');
					};
			 };
		//	 $scope.leave.leaveList1[index].newLeave.startDate=undefined;
		//	 $scope.leave.leaveList1[index].newLeave.endDate=undefined;
		//	 $scope.leave.leaveList1[index].newLeave.reason=undefined;
		//	 commonAppLevService.selectedDates[index*2]=undefined;
		//	 commonAppLevService.selectedDates[(index*2)+1]=undefined;
		//	 $scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
			 //$compile($scope);
			}else{
				$scope.isFlexi=false;
			};
			if(selectedLeaveTypeName=="Select"){
				$scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
			}
			$scope.leave.leaveList1[index].newLeave.hisAvailed='N';
        	$scope.hisAvailed=$scope.leave.leaveList1[index].newLeave.hisAvailed;
		 
	        $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId=applyLevService.getlevIdFromName($scope.leaveTypes,selectedLeaveTypeName);
	        $http.post( '/leaverest/rest/leaveDropDownChanged/?cd=' + (new Date()).getTime(), $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId).then(function(response)
	         {
	        	$scope.leave.leaveList1[index].errorMsg = undefined;
	        	if(angular.isArray(response.data) && response.data[0].code==="422") {
	        		$scope.leave.leaveList1[index].errorMsg = response.data[0].fieldErrors[0].message;
	        	} else {
	        	//IF block to show error if maternity or SML is changed to other type and dates selected fall on weekend
	        	if(!($scope.leave.leaveList1[index].newLeave.startDate==undefined) || !($scope.leave.leaveList1[index].newLeave.endDate==undefined))
	        	{
				 var eDate=applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.endDate);
				 var sDate=applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.startDate);
				 var sdWeekday=!WeekendService.isSdWeekend(sDate);
				 var edWeekday=!WeekendService.isEdWeekend(eDate);
				 
                         var sdValid=  ValidateDtService.isSdValid($scope,sDate,index);
                         if(sdValid){
                         if($scope.leave.leaveList1[index].selectedSdate || $scope.leave.leaveList1[index].shalfCheck){
                        	//do nothing
                          }else{
	    				 $scope.leave.leaveList1[index].errorSDate='';
	    				 var field=angular.element($("#startDate_"+index));field.removeClass('dirty-field');
                          }
	    				
                         };
	    			     var edValid=  ValidateDtService.isEdValid($scope,eDate,index);
		    			 if(edValid){
		    				 if($scope.leave.leaveList1[index].selectedEdate || $scope.leave.leaveList1[index].halfCheck){
		                        	//do nothing
		                        }else{
		                        	  $scope.leave.leaveList1[index].errorEDate='';
		                        	  var field=angular.element($("#endDate_"+index));field.removeClass('dirty-field');
		                       }
		    				
		    				
		    			 };
		    			 var tempEdate=eDate.clone();
		    			 tempEdate=tempEdate.add(-1,'d');
		    			 var midStValid=ValidateDtService.isMidStValid($scope,tempEdate,sDate,index);
		    			 if(midStValid && sdValid){
		    				 if($scope.leave.leaveList1[index].selectedSdate || $scope.leave.leaveList1[index].shalfCheck){
		                        	//do nothing
		                          }else{
			    				 $scope.leave.leaveList1[index].errorSDate='';
			    				 var field=angular.element($("#startDate_"+index));field.removeClass('dirty-field');
		                          }
		    				
		    				 
		    			 };
		    			 
		    			 var tempSdate=sDate.clone();
		    			 tempSdate=tempSdate.add(1,'d');
		    			 var midEtValid=ValidateDtService.isMidEtValid($scope,tempSdate,eDate,index);
		    			 if(midEtValid && edValid){
		    				 if($scope.leave.leaveList1[index].selectedEdate || $scope.leave.leaveList1[index].halfCheck){
		                        	//do nothing
		                        }else{
		                        	  $scope.leave.leaveList1[index].errorEDate='';
		                        	  var field=angular.element($("#endDate_"+index));field.removeClass('dirty-field');
		                       }
		    				
		    			 };
				
	    			 
			
}; 
             
                ///////////////////////////////dependency check for lev types-------------------------------------------------------------------------
                
            var depList=response.data.dependencyList;
            if(undefined!=response)
                $scope.dependencyMap["key"+index]=depList;
                Array.prototype.contains = function(obj) {
            	    var i = this.length;
            	    while (i--) {
            	        if (this[i] == obj) {
            	            return true;
            	        }
            	    }
            	    return false;
            	};
             var dependencyList=$scope.dependencyMap["key"+index];
             
             var countryname;
             if(dependencyList.length!=0){
            	 var notNull=false;
            	 for(var i=0;i<$scope.leave.leaveList1.length;i++){
               	  if(undefined!=dependencyList)
               	    if(dependencyList.contains($scope.leave.leaveList1[i].newLeave.countryLeaveTypeId) && !(i==index)){
               	    	for(var k=0;k< $scope.leaveTypes.length;k++){
               	    		if($scope.leaveTypes[k].countryLeaveTypeId==$scope.leave.leaveList1[i].newLeave.countryLeaveTypeId){
               	    			countryname=$scope.leaveTypes[k].countryLeaveTypeName;
               	    			break;
               	    		}
               	    	}
               	     $scope.leave.leaveList1[index].dependencyError="You cannot choose this leave type with "+countryname+".Please choose some other leave type." ;
               	     var field=angular.element($("#leaveTypeName_"+index));
               	     field.addClass('dirty-field');
               	     notNull=false;
               	     break;     
	               }else{
	                   $scope.leave.leaveList1[index].dependencyError=""; 
	                   notNull=true;
	                  }
                } 
            	 if(notNull){
            		 for(var j=0;j<$scope.leave.leaveList1.length;j++){
            			 var dependencyList=$scope.dependencyMap["key"+j];
            			 if(dependencyList.length!=0){
            				 for(var k=0;k<$scope.leave.leaveList1.length;k++){
            					 if(dependencyList.contains($scope.leave.leaveList1[k].newLeave.countryLeaveTypeId) && (j!=k)){ 
            						 for(var m=0;m< $scope.leaveTypes.length;m++){
            	                	     if($scope.leaveTypes[m].countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId){
            	                	    			countryname=$scope.leaveTypes[m].countryLeaveTypeName;
            	                	    			var countryName=countryname;
            	                	    			break;
            	                	     }
            	                	    } 
            						 $scope.leave.leaveList1[k].dependencyError="You cannot choose this leave type with "+countryName+".Please choose some other leave type." ;
                    				 var field=angular.element($("#leaveTypeName_"+i));
                    				 field.addClass('dirty-field');
                    				 notNull=false;
            					 }
            				 }
            			 }
            		 }
            	 }
             }else{
               for(var i=0;i<$scope.leave.leaveList1.length;i++){
            	 var dependencyList=$scope.dependencyMap["key"+i];
            	 if(dependencyList.length!=0){
            		 $scope.innerCheck=false;
            		 for(var j=0;j<$scope.leave.leaveList1.length;j++){
            		 if(dependencyList.contains($scope.leave.leaveList1[j].newLeave.countryLeaveTypeId) && (i!=j)){
            			 for(var k=0;k< $scope.leaveTypes.length;k++){
                	     if($scope.leaveTypes[k].countryLeaveTypeId==$scope.leave.leaveList1[i].newLeave.countryLeaveTypeId){
                	    			countryname=$scope.leaveTypes[k].countryLeaveTypeName;
                	    			var countryName=countryname;
                	    			break;
                	     }
                	    }
            			 if(i==$scope.leave.leaveList1.length-1){
            				 for(var k=0;k< $scope.leaveTypes.length;k++){
                 	    		if($scope.leaveTypes[k].countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId){
                 	    			countryname=$scope.leaveTypes[k].countryLeaveTypeName;
                 	    			break;
                 	    		}
                 	    	  }
            			   if(index>i){
            				$scope.leave.leaveList1[i].dependencyError="You cannot choose this leave type with "+countryname+".Please choose some other leave type." ;
            				 var field=angular.element($("#leaveTypeName_"+i));
            				 field.addClass('dirty-field');
            			   }else{
            			       if(i==$scope.leave.leaveList1.length-1 && j==index){
            			         $scope.leave.leaveList1[j].dependencyError="You cannot choose this leave type with "+countryName+".Please choose some other leave type." ;
            			         var field=angular.element($("#leaveTypeName_"+j));
            			         field.addClass('dirty-field');
            			         $scope.leave.leaveList1[i].dependencyError="";
            			    	}else{
            					$scope.leave.leaveList1[i].dependencyError="You cannot choose this leave type with "+countryname+".Please choose some other leave type." ;
            					 var field=angular.element($("#leaveTypeName_"+i));
            					 field.addClass('dirty-field');
            			    	}
            			  }
            			   break;
            			  }else{
            				  if($scope.dependencyMap["key"+j].length==0 && j==0){
            					  if(dependencyList.contains($scope.leave.leaveList1[j].newLeave.countryLeaveTypeId) && (j<i)){
            						  for(var k=0;k< $scope.leaveTypes.length;k++){
                           	    		if($scope.leaveTypes[k].countryLeaveTypeId==$scope.leave.leaveList1[i-1].newLeave.countryLeaveTypeId){
                           	    			countryname=$scope.leaveTypes[k].countryLeaveTypeName;
                           	    			break;
                           	    		}
                           	    	  }
            						 $scope.leave.leaveList1[i].dependencyError="You cannot choose this leave type with "+countryname+".Please choose some other leave type." ;
            						 var field=angular.element($("#leaveTypeName_"+i));
            						 field.addClass('dirty-field');
            						 $scope.innerCheck=true;
            					}else{
            						  $scope.leave.leaveList1[j].dependencyError="";
            					  }
            				 }else{
            					  if(j==1){
            						  if(!$scope.innerCheck)
            						  if(dependencyList.contains($scope.leave.leaveList1[j].newLeave.countryLeaveTypeId)){
            							  $scope.leave.leaveList1[j].dependencyError="You cannot choose this leave type with "+countryname+".Please choose some other leave type." ;  
            							  var field=angular.element($("#leaveTypeName_"+j));
            							  field.addClass('dirty-field');
            						  }  
            					  }
            					  if(j==2){
            						  if(j>i){
            							  $scope.leave.leaveList1[j].dependencyError="You cannot choose this leave type with "+countryname+".Please choose some other leave type." ;
            							  var field=angular.element($("#leaveTypeName_"+j));
            							  field.addClass('dirty-field');
            							  $scope.leave.leaveList1[i].dependencyError="";
            						  }
            					  }else if(j==3){
            						  if(dependencyList.contains($scope.leave.leaveList1[j].newLeave.countryLeaveTypeId)){
            							  for(var m=0;m<j;m++){
            								  $scope.leave.leaveList1[m].dependencyError="";
            							 }
            						}
            					  }
            					  if(dependencyList.contains($scope.leave.leaveList1[$scope.leave.leaveList1.length-1].newLeave.countryLeaveTypeId)){
            						  $scope.leave.leaveList1[i].dependencyError="";
                   				   $scope.leave.leaveList1[j].dependencyError="You cannot choose this leave type with "+countryname+".Please choose some other leave type." ;
                   				 var field=angular.element($("#leaveTypeName_"+j));
                   				field.addClass('dirty-field');
            					  }
            					   
            		           }
            				     
            			    }
            		 }else{
                    	if(index!=$scope.leave.leaveList1.length-1){
                    		if($scope.innerCheck){
                    			if(index<i){
                    		        $scope.leave.leaveList1[j-1].dependencyError="You cannot choose this leave type with "+ countryName+".Please choose some other leave type." ;
                    		        var field=angular.element($("#leaveTypeName_"+(j-1)));
                    		        field.addClass('dirty-field');
                    		        $scope.leave.leaveList1[j].dependencyError="";
                        			$scope.innerCheck=false;
                    			}
                    		
                              }else{
                    			$scope.leave.leaveList1[j].dependencyError="";
                    		}
                    	 }else{
                    		 $scope.leave.leaveList1[index].dependencyError="";
                    		 if($scope.innerCheck){
                    			 // do nohting
                    		 }else{
                    			 $scope.leave.leaveList1[i].dependencyError=""; 
                    		}
                    	}
                    	
            		 }
            		
            	  }
            	 }else{
                    if(index==0 || $scope.dependencyMap["key"+0].length==0){
                   if(i==0){
                	   $scope.leave.leaveList1[i].dependencyError="";
                 }else{
                        if($scope.dependencyMap["key"+(i-1)].contains($scope.leave.leaveList1[i].newLeave.countryLeaveTypeId)){
                   		// do nothing
                   	    }else{
                   	    	if(i==3){
                   	    		if($scope.dependencyMap["key"+(i-2)].contains($scope.leave.leaveList1[i].newLeave.countryLeaveTypeId) && i==3){
                       	    		//do nothing
                       	    	}else{
                       	    	 $scope.leave.leaveList1[i].dependencyError="";
                        		}
                   	    	}else{
                   	    		$scope.leave.leaveList1[i].dependencyError="";
                    		 }
                  	} 
                   }
                }else{
            			if(i==1)
            			if(!($scope.dependencyMap["key"+(i-1)].contains($scope.leave.leaveList1[i].newLeave.countryLeaveTypeId))){
                				$scope.leave.leaveList1[i].dependencyError="";
                		}
            		}
                }
            	 }
             }
      /////////////////////////////////////////lwp check/////////////////////////////////////////////////////////////////////////////////
             var count=0;
             var country;
             for(var i=0;i<$scope.leave.leaveList1.length;i++){
                 for(var k=0;k< $scope.leaveTypes.length;k++){
         	    		if($scope.leaveTypes[k].countryLeaveTypeId==$scope.leave.leaveList1[i].newLeave.countryLeaveTypeId){
         	    			if($scope.leaveTypes[k].countryLeaveTypeName.match(/LWP/i) || $scope.leaveTypes[k].countryLeaveTypeName.match(/Leave Without Pay/i)){
         	    			country = $scope.leaveTypes[k].countryLeaveTypeName;
         	    			}
         	    		}
         	    	}
             }
         	 var countryname1;
             for(var i=0;i<$scope.leave.leaveList1.length;i++){
               for(var k=0;k< $scope.leaveTypes.length;k++){
       	    		if($scope.leaveTypes[k].countryLeaveTypeId==$scope.leave.leaveList1[i].newLeave.countryLeaveTypeId){
       	    			countryname1=$scope.leaveTypes[k].countryLeaveTypeName;
       	    			break;
       	    		}
            	}
            	if(countryname1==country){
            		count=count+1;
            	}
            	if(count>1){
            		$scope.leave.leaveList1[i].dependencyError="You cannot choose Leave Without Pay  with already selected Leave Without Pay" ;
            	}
             }
      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////       
       if($scope.leave.leaveList1.length==1){
    	  if($scope.leave.leaveList1[0].dependencyError==""){
    	    $scope.dependencyflag=true;   
    	  }else{
    		  $scope.dependencyflag=false;   
    	  }
        }else if($scope.leave.leaveList1.length==2){
      	  if($scope.leave.leaveList1[0].dependencyError=="" && $scope.leave.leaveList1[1].dependencyError=="" ){
      	     $scope.dependencyflag=true;   
      	  }else{
      		  $scope.dependencyflag=false;   
      	  }
        }else if($scope.leave.leaveList1.length==3){
        	  if($scope.leave.leaveList1[0].dependencyError=="" && $scope.leave.leaveList1[1].dependencyError=="" && $scope.leave.leaveList1[2].dependencyError==""){
           	     $scope.dependencyflag=true;   
           	  }else{
           		  $scope.dependencyflag=false;   
           	  }
         }else if($scope.leave.leaveList1.length==4){
       	  if($scope.leave.leaveList1[0].dependencyError=="" && $scope.leave.leaveList1[1].dependencyError=="" && $scope.leave.leaveList1[2].dependencyError=="" && $scope.leave.leaveList1[3].dependencyError==""){
        	     $scope.dependencyflag=true;   
        	  }else{
        		  $scope.dependencyflag=false;   
        	  }
      }
           
                
                
                
                
                
            //---------------------------------------------------------------------------------------------------------------------- 
                                                       $scope.leave.leaveList1[index].additionalFieldsList=[];
	                             		    	       $scope.leave.leaveList1[index].showParent=false;
	                             		    	       $scope.leave.leaveList1[index].showChild=false;
	                             		    	       resetAttrDsclmr(index);  //sets attribute name and value to null and also resets disclaimers
	                             				
	                             		    	   if(!(document.querySelector(".addfieldClass"+index)==null))
	                             		    	   {
	                             		    	       $(".addfieldClass"+index).remove();
	                             		    	    };
	                             		    	   if(!(document.querySelector(".childfieldClass"+index)==null))
	                             		    	   {
	                             			    	  $(".childfieldClass"+index).remove();
	                             			    	};
	                             		    	   if(!(response.data==undefined))
	                             		    	   {
	                             		    	      if(!(response.data.ParentField==undefined))
	                             		    	      {   
	                             		    	    	 $scope.leave.leaveList1[index].showParent=true;
	                             		    	         $scope.leave.leaveList1[index].additionalFieldData=response.data;
	                             		    	         $scope.leave.leaveList1[index].additionalFieldsList = response.data.ParentField;
	                             		    	         var isParent=true;
	                             		    	         var addFldLength=$scope.leave.leaveList1[index].additionalFieldsList.length;
	                             		    	         $scope.equalDate=false;
	                             		    	        $scope.leave.leaveList1[index].defaultDsclmrVal8=false;
	                             		    	         ////////////////////////////////////////////////////////////////////////
	                             		    	         ///////////////////FOR flexi leave subdropdown///////////////////////////////////////
	                             		    	         if(!(null==$scope.leave.leaveList1[index].additionalFieldsList[0].dateList)){
	                             		    	            for(var i=0;i<$scope.leave.leaveList1[index].additionalFieldsList[0].dateList.length;i++){
	  	                             		    			  if($scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i]==$scope.leave.leaveList1[index].newLeave.startDate){
	  	                             		    				$scope.leave.leaveList1[index].newLeave.startDate=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
	  	                             		    				$scope.leave.leaveList1[index].newLeave.endDate=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
	  	                             		    				$scope.leave.leaveList1[index].newLeave.reason=$scope.leave.leaveList1[index].additionalFieldsList[0].lookupValueList[i];
	  	                             		    				$scope.chldname=$scope.leave.leaveList1[index].additionalFieldsList[0].lookupValueList[i];
	  	                             		    			    $scope.equalDate=true;
	  	                             		    			    $scope.getChildfields($scope.chldname,index);
	  	                             		    			    break;
	  	                             		    			};
	  	                             		    			
	  	                             		    		    };
	  	                             		    		    if(!($scope.equalDate)){
	  	                             		    			$scope.leave.leaveList1[index].newLeave.startDate=undefined;
	  	                             		  			     $scope.leave.leaveList1[index].newLeave.endDate=undefined;
	  	                             		  			     $scope.leave.leaveList1[index].newLeave.reason=undefined;
	  	                             		  			     commonAppLevService.selectedDates[index*2]=undefined;
	  	                             		  			     commonAppLevService.selectedDates[(index*2)+1]=undefined;
	  	                             		  			     $scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
	  	                             		    		    }
	                             		    	         }
	                             		    	
	                             		    	   /////////////////////////////////////////////////////////////////////////
	                             		    	         
	                             				    	for(var i=0;i<addFldLength;i++)
	                             				    	 {  
	                             				    		var fieldType=$scope.leave.leaveList1[index].additionalFieldsList[i].fieldType;
	                             				    		var lookupValues=$scope.leave.leaveList1[index].additionalFieldsList[i].lookupValueList;
	                             				    		
	                             				    		if(fieldType=="DROP_DOWN")
	                             				    		{
	                             				    			if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){
	                             				    		if($scope.equalDate){
	                             				    			$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.chldname;
	                             				    		}else{
	                             				    			$scope.leave.leaveList1[index].newLeave.Attribute1_Value="Select";
	                             				    		}
	                             				    		
	                             						    	$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             					    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             					    			$scope.leave.leaveList1[index].newLeave.Attribute2_Value="Select";
	                             					    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             					    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             					    			$scope.leave.leaveList1[index].newLeave.Attribute3_Value="Select";
	                             					    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             					    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
	                             					    			$scope.leave.leaveList1[index].newLeave.Attribute4_Value="Select";
	                             					    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             					    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
	                             					    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value="Select";
	                             					    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             				    		  var selectTag=applyLevService._buildDropDown($scope.leave.leaveList1[index].additionalFieldsList[i],lookupValues,isParent,$scope,index);
	                             				    		  $(selectTag).appendTo("#"+index+"field"+i);
	                             				    		}
	                             				    		else if(fieldType=="TEXT_BOX_CHAR")
	                             				    		{
	                             					    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             									 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             					    		var selectTag=applyLevService._buildTextField($scope.leave.leaveList1[index].additionalFieldsList[i],isParent,$scope,index);
	                             					    		$(selectTag).appendTo("#"+index+"field"+i);
	                             					    	}
	                             				    		else if(fieldType=="TEXT_BOX_DATE")
	                             				    		{
	                             		                       if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             		         				 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             		         				 if(applyLevService.countryLeaveTypeId=="235" )
	                             		         				 $scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.leave.leaveList1[index].additionalFieldsList[i].lookupValues;
	                             		         				 else if(applyLevService.countryLeaveTypeId=="250"){
	                             		         					    var projDate=moment($scope.leave.leaveList1[index].additionalFieldsList[i].lookupValues).daysInMonth();
	 	                             		         					var toShowDate=moment($scope.leave.leaveList1[index].additionalFieldsList[i].lookupValues).date(projDate);
	 	                             		         					$scope.leave.leaveList1[index].newLeave.Attribute1_Value=applyLevService.convertToString(toShowDate); 
	                             		         				 }}
	                             		         			    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             		         			    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             		         			    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             		         			    $scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             		         			    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
	                             		         			    $scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             		         			    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
	                             		         			    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             		                       var selectTag=applyLevService._buildTextDate($scope.leave.leaveList1[index].additionalFieldsList[i],$scope,isParent,index);
	                             		                        $(selectTag).appendTo("#"+index+"field"+i);
	                             					    	}
	                             				    		else if(fieldType=="RADIO_BUTTON")
	                             				    		{
	                             					    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             									 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             					    		var selectTag=applyLevService._buildRadioButton($scope.leave.leaveList1[index].additionalFieldsList[i],lookupValues,$scope,isParent,index);
	                             					    		$(selectTag).appendTo("#"+index+"field"+i);
																$scope.leave.leaveList1[index].newLeave.iEvolveFlag="No";
	                             					    	}
	                             				    		else if(fieldType=="CHECK_BOX")
	                             				    		{
	                             					    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             									 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             								    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
	                             								    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
	                             					    		var selectTag=applyLevService._buildCheckBox($scope.leave.leaveList1[index].additionalFieldsList[i],isParent,$scope,index);
	                             					    		$(selectTag).appendTo("#"+index+"field"+i);
	                             					    		if("452"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId){
	                             					    		$scope.leave.leaveList1[index].newLeave.FMLATaggedName=true;
	                             					    		$scope.getChildfields('Select to tag FMLA', index);
	                             					    		
	                             					    		};
	                             					    	}
	                             				    		else if(fieldType=="STATIC_TEXT"){
	                             					    		if("disclaimer1"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    			$scope.leave.leaveList1[index].showDsclmr1=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer1=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer2"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    			$scope.leave.leaveList1[index].showDsclmr2=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer2=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer3"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    				$scope.leave.leaveList1[index].showDsclmr3=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer3=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer4"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    					$scope.leave.leaveList1[index].showDsclmr4=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer4=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer5"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    						$scope.leave.leaveList1[index].showDsclmr5=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer5=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer6"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    							$scope.leave.leaveList1[index].showDsclmr6=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer6=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer7"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    			if("Leave Without Pay"==$scope.leave.leaveList1[index].newLeave.leaveTypeName){
																		$scope.leave.leaveList1[index].showDsclmr7=false;
																	}else{
																		$scope.leave.leaveList1[index].showDsclmr7=true;
																	}
	                             					    		$scope.leave.leaveList1[index].disclaimer7=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer8"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    									$scope.leave.leaveList1[index].showDsclmr8=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer8=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             					    		}else if("disclaimer9"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    										$scope.leave.leaveList1[index].showDsclmr9=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer9=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             				    			}else if("disclaimer10"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
	                             					    												$scope.leave.leaveList1[index].showDsclmr10=true;
	                             					    		$scope.leave.leaveList1[index].disclaimer10=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
	                             				    			}else if("disclaimer11"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
					    																					$scope.leave.leaveList1[index].showDsclmr11=true;
			                             					    $scope.leave.leaveList1[index].disclaimer11=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
			                             					    }else if("disclaimer12"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
					    																						$scope.leave.leaveList1[index].showDsclmr12=true;
					    										$scope.leave.leaveList1[index].disclaimer12=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
			                             					    };
	                             					    };
	                             	                   
	                             				     };  //for loop ends
	                             				  
	                             		    	  };

	                             		    	     if(!(response.data.validationList==undefined))
	                             		    	     {
	                             		    	          $scope.leave.leaveList1[index].validationList = response.data.validationList;
	                             		    	          if(!($scope.leave.leaveList1[index].validationList==undefined))
	                             		    	          {
	                             		    	             if($scope.leave.leaveList1[index].validationList.HALF_DAY.value1=="Y")
	                             		    	             {
	                             		    	               $scope.leave.leaveList1[index].showHalfDay=true;
	                             		    	             }
	                             		    	             else
	                             		    	             {
	                             		    	               $scope.leave.leaveList1[index].showHalfDay=false;
	                             		    	               $scope.leave.leaveList1[index].checkHalfDay=false;
	                             		    	             };
	                             		    	            if($scope.leave.leaveList1[index].validationList.FULL_DAY=="N"){
	                             		    	               $scope.leave.leaveList1[index].newLeave.startDuration="First Half";
	                	                                       $scope.leave.leaveList1[index].newLeave.endDuration="First Half"; 
	                	                                       $scope.leave.leaveList1[index].sDateDurations=['First Half','Second Half'];
	                	                                       $scope.leave.leaveList1[index].eDateDurations=['First Half','Second Half'];
	                             		    	            }else{
	                             		    	            	$scope.leave.leaveList1[index].newLeave.startDuration="Full Day";
	                	                                    	$scope.leave.leaveList1[index].newLeave.endDuration="Full Day"; 
	                             		    	            	$scope.leave.leaveList1[index].sDateDurations=['Second Half','Full Day'];
	                             		    	            	$scope.leave.leaveList1[index].eDateDurations=['First Half','Full Day'];
	                             		    	            };
	                             		    	           
	                             		    	          };
	                             		    	      }
	                             		    	      else
	                             		    	      {
	                             		    	          $scope.leave.leaveList1[index].showHalfDay=false;
	                             		    	          $scope.leave.leaveList1[index].checkHalfDay=false;
	                             		    	       };
	                             		    	  $scope.defaultDuration(index);
	                             		    	 if(!(response.data.lwpCalendar==undefined))
                            		    	      { 
	                             		    		 var lwpCalData=response.data.lwpCalendar;
	                             		    		 var lwpYearList=Object.keys(response.data.lwpCalendar);
	                             		    		angular.forEach(lwpYearList, function(value,key)
			    	                                    	{
	                             		    			//$scope.minYear=moment([lwpYearList[0]]).format("YYYY-MM-DD");
		                             		    		$scope.maxYear=moment([lwpYearList[lwpYearList.length-1]]).month(11).date(31).format("YYYY-MM-DD");
	                             		    			$scope.leave.yearlist[value]=lwpCalData[value];
	                             		    			commonAppLevService.yearlist[value]=lwpCalData[value];
			    	                                    	});
	                             		    		 
	                             		    		
	    	                                    
                            		    	      };
	                             		    };
	                             		    
	        	}}); //server call ends
	       //IF block for Singapore additional paternity popups-----------
	       if("634"== $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId 
	    	||"635"== $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId
	    	||"636"== $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId)
	    	   {
	    	   $scope.singaporeMsg="To avail this leave, please note that citizenship of child must be Singaporean.";
	    	   $("#singaporeModal").modal('show');
	    	   };
	         
	
 };	                             	
//Method to get no of days ----------------------------------------------------------------------------------------                           	
$scope.getNoOfDays = function(index) 
{
	    var field=angular.element($("#noOfDays_"+index));
		field.removeClass('dirty-field');
	    var durationValidity=true;
	    $scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
	    //calculate No of days if start date end date and leave type is valid----
	    if(!($scope.leave.leaveList1[index].newLeave.startDate == undefined)
		&&!($scope.leave.leaveList1[index].newLeave.endDate == undefined)
		&&!($scope.leave.leaveList1[index].newLeave.leaveTypeName == undefined || $scope.leave.leaveList1[index].newLeave.leaveTypeName == "Select")
		&&!($scope.leave.leaveList1[index].newLeave.startDuration == undefined)
		&&!($scope.leave.leaveList1[index].newLeave.endDuration == undefined))
	 {
	    	if($scope.isLwpAccptd || $scope.isMtrntyAccptd){
	    		//notihing
	    	}else{
	    		$scope.isLwpAccptd=false;
	    	   	$scope.isMtrntyAccptd=false;
	    	}
	   
	    if($scope.leave.leaveList1[index].newLeave.startDate==$scope.leave.leaveList1[index].newLeave.endDate)
	    {
		 if(!($scope.leave.leaveList1[index].newLeave.startDuration==$scope.leave.leaveList1[index].newLeave.endDuration)) //check if durations are same
		 {
			if(startDate==$scope.leave.leaveList1[index].newLeave.startDuration){
				$scope.leave.leaveList1[index].newLeave.startDuration=$scope.leave.leaveList1[index].newLeave.endDuration;
				startDate=$scope.leave.leaveList1[index].newLeave.startDuration;
				endDate=$scope.leave.leaveList1[index].newLeave.startDuration;
			};
			if(endDate==$scope.leave.leaveList1[index].newLeave.endDuration){
				$scope.leave.leaveList1[index].newLeave.endDuration=$scope.leave.leaveList1[index].newLeave.startDuration;
				endDate=$scope.leave.leaveList1[index].newLeave.endDuration;
				startDate=$scope.leave.leaveList1[index].newLeave.endDuration;
			};
		};
		
	 }else
	    {  //else will run if start and end dates are difrnt
		 if(($scope.leave.leaveList1[index].newLeave.startDuration=='First Half') || ($scope.leave.leaveList1[index].newLeave.endDuration=='Second Half')){
			 $scope.leave.leaveList1[index].errorMsg="The selected duration is incorrect. Select the correct duration.";
			 durationValidity=false;
		 }
		 startDate=$scope.leave.leaveList1[index].newLeave.startDuration;
		 endDate=$scope.leave.leaveList1[index].newLeave.endDuration;
	   }
	    if(durationValidity && 	(applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.startDate) || applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.endDate))){
	    	var sendData = {
								startDate: $scope.leave.leaveList1[index].newLeave.startDate,
								endDate:$scope.leave.leaveList1[index].newLeave.endDate ,
								countryLeaveTypeId:$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId,
								startDuration:$scope.leave.leaveList1[index].newLeave.startDuration,
								endDuration:$scope.leave.leaveList1[index].newLeave.endDuration
							};
	    	
	    		
	    	  $scope.leave.leaveList1[index].errorMsg='';
			  $scope.leave.leaveList1[index].serverErrMsg=''; //RESET server errors on change of dropdown
			
			  var resp = $http.post('/leaverest/rest/getNoOfdays/?cd=' + (new Date()).getTime(),sendData).then(function(response)
					{ 
						var noOfDays = response.data;
						$scope.leave.leaveList1[index].newLeave.noOfDays=noOfDays;
					
						if(!($scope.leave.leaveList1[index].validationList.MAX_NO_OF_DAYS==undefined) && !($scope.leave.leaveList1[index].validationList.MAX_NO_OF_DAYS.value1==undefined)){
							if(noOfDays > $scope.leave.leaveList1[index].validationList.MAX_NO_OF_DAYS.value1){
								if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==76 
										|| $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==77){
									$scope.leave.leaveList1[index].errorMsg="Leave duration should be a maximum of "+$scope.leave.leaveList1[index].validationList.MAX_NO_OF_DAYS.value1+" days. For further application please connect with your HR.";
									/*Number of leave days applied are exceeding the maximum limit for this leave type.*/
									var field=angular.element($("#noOfDays_"+index));
									 field.addClass('dirty-field');
								}else
									{
								$scope.leave.leaveList1[index].errorMsg="Leave duration should be a maximum of "+$scope.leave.leaveList1[index].validationList.MAX_NO_OF_DAYS.value1+" days. Select the correct duration.";
								/*Number of leave days applied are exceeding the maximum limit for this leave type.*/
								var field=angular.element($("#noOfDays_"+index));
								 field.addClass('dirty-field');
								 maxMinCheck=true;
							};
						};
					};
						if(!($scope.leave.leaveList1[index].validationList.MIN_NO_OF_DAYS==undefined) && !($scope.leave.leaveList1[index].validationList.MIN_NO_OF_DAYS.value1==undefined))
						{
							if(noOfDays < $scope.leave.leaveList1[index].validationList.MIN_NO_OF_DAYS.value1)
							{
							if(!($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==527)){
							$scope.leave.leaveList1[index].errorMsg="Leave duration should be a minimum of "+$scope.leave.leaveList1[index].validationList.MIN_NO_OF_DAYS.value1+" days. Select the correct duration.";
							var field=angular.element($("#noOfDays_"+index));
							 field.addClass('dirty-field');
							 maxMinCheck=true;
						    };
							}
						};
						
						//check if selection across years is allowed or not---------------
		 				if(!($scope.leave.leaveList1[index].validationList.APPLY_ACROSS_FINANCIAL_YEARS==undefined) 
		  	        		   && !($scope.leave.leaveList1[index].validationList.APPLY_ACROSS_FINANCIAL_YEARS.value1==undefined)){
		 					if($scope.leave.leaveList1[index].validationList.APPLY_ACROSS_FINANCIAL_YEARS.value1=="N"){
		 						var eDate=applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.endDate);
		 						 var sDate=applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.startDate);
		 						if(!(sDate.year()==eDate.year())){
		 							$scope.leave.leaveList1[index].errorMsg="Leave cannot be applied accross the financial year for this leave type.";
		 							 maxMinCheck=true;
		 						};
		 					};
		  	           };	
		  	         if("Leave Without Pay"==$scope.leave.leaveList1[index].newLeave.leaveTypeName
			                    && "Joining Spouse on international assignment overseas"==$scope.leave.leaveList1[index].newLeave.Attribute1_Value)
						if(30 <= $scope.leave.leaveList1[index].newLeave.noOfDays)			
		  	        	 $scope.leave.leaveList1[index].showChild=true;
						else
							 $scope.leave.leaveList1[index].showChild=false;
						
		  	         ///////////////////////check for balance////////////////////////////////////////////////////////////////
					 if(!($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==503 || $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==517)){
		  	         for(var i=0;i<$scope.levBalList.length;i++){
		  	        	 var oldBal=$scope.levBalList[i].posted;
		  	        	 var newBal;
		  	        	 if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.levBalList[i].countryLeaveTypeId){
		  	        		var doubleCheck=false;
		  	        		if(index<$scope.leave.leaveList1.length-1){
		                         for(var j=0;j<$scope.leave.leaveList1.length;j++){
			  	        			 
			  	        			 if(j!=index){
			  	        				 if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId){
			  	        					if( doubleCheck){
			  	        						newBal=newBal-$scope.leave.leaveList1[j].newLeave.noOfDays;
			  	        					}else{
			  	        						newBal=$scope.levBalList[i].posted-$scope.leave.leaveList1[j].newLeave.noOfDays;
			  	        						doubleCheck=true;
			  	        					}
			  	        			    }
			  	        			}
			  	        		 }
		                     }else{
		  	        			 for(var j=0;j<index;j++){
			  	        			 
			  	        			 if(j!=index){
			  	        				 if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId){
			  	        					if( doubleCheck){
			  	        						newBal=newBal-$scope.leave.leaveList1[j].newLeave.noOfDays;
			  	        					}else{
			  	        						newBal=$scope.levBalList[i].posted-$scope.leave.leaveList1[j].newLeave.noOfDays;
			  	        						doubleCheck=true;
			  	        					}
			  	        						
			  	        				    
			  	        				 }
			  	        				 
			  	        			 }
			  	        		 }
		  	        		}
		  	        	
		  	        		 if(newBal==null){
		  	        			 if(($scope.levBalList[i].posted-$scope.leave.leaveList1[index].newLeave.noOfDays)<0 && !($scope.levBalList[i].countryLeaveTypeId==503)){
				  	        			$scope.leave.leaveList1[index].errorMsg="You do not have sufficient balance to apply "+$scope.levBalList[i].countryLevTypeName +" of "+$scope.leave.leaveList1[index].newLeave.noOfDays+" days.";
				  	        		//	$scope.levBalList[i].posted=oldBal;
				  	        		 }else{
				  	        			 if(!( maxMinCheck))
				  	        			$scope.leave.leaveList1[index].errorMsg=""; 
				  	        		 }
		  	        		 }else{
		  	        			if((newBal-$scope.leave.leaveList1[index].newLeave.noOfDays)<0){
			  	        			$scope.leave.leaveList1[index].errorMsg="You do not have sufficient balance to apply "+$scope.levBalList[i].countryLevTypeName +" of "+$scope.leave.leaveList1[index].newLeave.noOfDays+" days.";
			  	        		//	$scope.levBalList[i].posted=oldBal;
			  	        		 }else{
			  	        			 if(!( maxMinCheck))
			  	        			$scope.leave.leaveList1[index].errorMsg="";
			  	        		 }
		  	        		 }
		  	        		 
		  	        		if(index<=$scope.leave.leaveList1.length-1){
		  	        			var TotalBal=0;
		  	        			for(var i=0;i<$scope.leave.leaveList1.length;i++){
		  	        			
		  	        					if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.leave.leaveList1[i].newLeave.countryLeaveTypeId){
		  	        						TotalBal=TotalBal+$scope.leave.leaveList1[i].newLeave.noOfDays;
		  	        					}
		  	        				
		  	        			}
		  	        		
		  	        			for(i=0;i<$scope.levBalList.length;i++)
		  	        			{
		  	        				if($scope.levBalList[i].countryLeaveTypeId==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId){
		  	        					if(($scope.levBalList[i].posted-TotalBal)>=0){
				  	        				for(var j=0;j<$scope.leave.leaveList1.length;j++){
				  	        					//if(!(undefined==$scope.leave.leaveList1[j].newLeave))
				  	        					if($scope.levBalList[i].countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId)
				  	        						 if(!( maxMinCheck))
				  	        						$scope.leave.leaveList1[j].errorMsg="";
				  	        				}
				  	        			}
		  	        				}
		  	        			}
		  	        			
		  	        		}
		  	        	
		  	        	 }
		  	        	
		  	             }
						}
		  	      /////////////////////////////check balance ends here////////////////////////////////////////////////////////////////   
					}); //server response ends
			  
	    };										
    };
};
//Method to get addtional field child details-------------------------------------------------------------------------------------														
$scope.getChildfields=function(childKey,index)
{
			 $scope.leave.leaveList1[index].serverErrMsg='';
			 if($scope.leave.leaveList1[index].errorMsg==""){
				 var field1=angular.element($("#noOfDays_"+index));
				 field1.removeClass('dirty-field');
				 var field2=angular.element($("#startDate_"+index));
				 field2.removeClass('dirty-field');
				 var field3=angular.element($("#endDate_"+index));
				 field3.removeClass('dirty-field'); 
			 }
		
			 if( $scope.isMtrntyAccptd ||  $scope.isLwpAccptd){
				 //nothing
			 }else{
				 $scope.isMtrntyAccptd=false;
				 $scope.isLwpAccptd=false; 
			 }
			
			var isEmailField=false;
			var loopNumber;
			
			
			
			//check if attributes name and values exist in parent row or not , if not then make them null
			var attr1=angular.element(document.getElementsByName("Attribute1_Value_Parent_"+index)).length;
			if(angular.isZero(attr1)){
				$scope.leave.leaveList1[index].newLeave.Attribute1_Name=null;
				$scope.leave.leaveList1[index].newLeave.Attribute1_Value=null;
			};
			var attr2=angular.element(document.getElementsByName("Attribute2_Value_Parent_"+index)).length;
			if(angular.isZero(attr2)){
				$scope.leave.leaveList1[index].newLeave.Attribute2_Name=null;
				$scope.leave.leaveList1[index].newLeave.Attribute2_Value=null;
				
			};
			var attr3=angular.element(document.getElementsByName("Attribute3_Value_Parent_"+index)).length;
			if(angular.isZero(attr3)){
				$scope.leave.leaveList1[index].newLeave.Attribute3_Name=null;
				$scope.leave.leaveList1[index].newLeave.Attribute3_Value=null;
			};
			var attr4=angular.element(document.getElementsByName("Attribute4_Value_Parent_"+index)).length;
			if(angular.isZero(attr4)){
				$scope.leave.leaveList1[index].newLeave.Attribute4_Name=null;
				$scope.leave.leaveList1[index].newLeave.Attribute4_Value=null;
			};
			var attr5=angular.element(document.getElementsByName("Attribute5_Value_Parent_"+index)).length;
			if(angular.isZero(attr5)){
				$scope.leave.leaveList1[index].newLeave.Attribute5_Name=null;
				$scope.leave.leaveList1[index].newLeave.Attribute5_Value=null;
			};
			var emailParent=angular.element($("#contactNumHome_Parent_"+index));
			if("false"==emailParent.attr("inParent")){$scope.leave.leaveList1[index].showEmailDsclmr=false;$scope.leave.leaveList1[index].emailDisclaimer=null;};
			if(!("Leave Without Pay"==$scope.leave.leaveList1[index].newLeave.leaveTypeName && "US"==$scope.countryFlg)){
			if((null==$scope.leave.leaveList1[index].disclaimer1)){$scope.leave.leaveList1[index].showDsclmr1=false;$scope.leave.leaveList1[index].disclaimer1=null;};
			if((null==$scope.leave.leaveList1[index].disclaimer2)){$scope.leave.leaveList1[index].showDsclmr2=false;$scope.leave.leaveList1[index].disclaimer2=null;};
			if(($scope.leave.leaveList1[index].showDsclmr3)){$scope.leave.leaveList1[index].showDsclmr3=false;$scope.leave.leaveList1[index].disclaimer3=null;};
			if(($scope.leave.leaveList1[index].showDsclmr4)){$scope.leave.leaveList1[index].showDsclmr4=false;$scope.leave.leaveList1[index].disclaimer4=null;};
			if(($scope.leave.leaveList1[index].showDsclmr5)){$scope.leave.leaveList1[index].showDsclmr5=false;$scope.leave.leaveList1[index].disclaimer5=null;};
			if((null==$scope.leave.leaveList1[index].disclaimer6)){$scope.leave.leaveList1[index].showDsclmr6=false;$scope.leave.leaveList1[index].disclaimer6=null;};
			if((null==$scope.leave.leaveList1[index].disclaimer7)){$scope.leave.leaveList1[index].showDsclmr7=false;$scope.leave.leaveList1[index].disclaimer7=null;};
			if((null==$scope.leave.leaveList1[index].disclaimer8)){$scope.leave.leaveList1[index].showDsclmr8=false;$scope.leave.leaveList1[index].disclaimer8=null;};
			if((null==$scope.leave.leaveList1[index].disclaimer9)){$scope.leave.leaveList1[index].showDsclmr9=false;$scope.leave.leaveList1[index].disclaimer9=null;};
			if((null==$scope.leave.leaveList1[index].disclaimer10)){$scope.leave.leaveList1[index].showDsclmr10=false;$scope.leave.leaveList1[index].disclaimer10=null;};
			if(($scope.leave.leaveList1[index].showDsclmr11)){$scope.leave.leaveList1[index].showDsclmr11=false;$scope.leave.leaveList1[index].disclaimer11=null;};
			if(($scope.leave.leaveList1[index].showDsclmr12)){$scope.leave.leaveList1[index].showDsclmr12=false;$scope.leave.leaveList1[index].disclaimer12=null;};
			$scope.leave.leaveList1[index].defaultDsclmrVal5=false;
			$scope.leave.leaveList1[index].defaultDsclmrVal6=false;
			$scope.leave.leaveList1[index].defaultDsclmrVal7=false;
			$scope.leave.leaveList1[index].defaultDsclmrVal8=false;
			$scope.leave.leaveList1[index].defaultDsclmrVal11=false;
			$scope.leave.leaveList1[index].defaultDsclmrVal12=false;
			};
			$scope.leave.leaveList1[index].newLeave.nomRelation=null;
    		$scope.leave.leaveList1[index].newLeave.nomRelationName=null;
    		$scope.leave.leaveList1[index].newLeave.nomNameName=null;
    		$scope.leave.leaveList1[index].newLeave.nomName=null;
    		$scope.leave.leaveList1[index].newLeave.fatherNameName=null;
    		$scope.leave.leaveList1[index].newLeave.fatherName=null;
    		$scope.leave.leaveList1[index].newLeave.nomAddressName=null;
    		$scope.leave.leaveList1[index].newLeave.nomAddress=null;
    		$scope.leave.leaveList1[index].newLeave.childBirthDateName=null;
    		$scope.leave.leaveList1[index].newLeave.childBirthDate=null;
			
			
			$scope.leave.leaveList1[index].showChild=false;
			if(!(document.querySelector(".childfieldClass"+index)==null))
			{
			$(".childfieldClass"+index).remove();
			};
				$scope.leave.leaveList1[index].additionalChildList=angular.property($scope.leave.leaveList1[index].additionalFieldData)(childKey);
				var isParent=false;
				if(!($scope.leave.leaveList1[index].additionalChildList==undefined)){
			
		    		
					$scope.leave.leaveList1[index].showChild=true;
					if("Leave Without Pay"==$scope.leave.leaveList1[index].newLeave.leaveTypeName
                    && "Joining Spouse on international assignment overseas"==$scope.leave.leaveList1[index].newLeave.Attribute1_Value
                    && 30 > $scope.leave.leaveList1[index].newLeave.noOfDays)
						$scope.leave.leaveList1[index].showChild=false;
					var addFldLength=$scope.leave.leaveList1[index].additionalFieldsList.length;
					for(var i=0;i<addFldLength;i++){
					isEmailField=angular.property($scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName=="contactNumHome");
					if(isEmailField){
						break;
					};
					};
					if(isEmailField){
						loopNumber=$scope.leave.leaveList1[index].additionalFieldsList.length-1;
					}else{
						loopNumber=$scope.leave.leaveList1[index].additionalFieldsList.length;
					};
					var addChildLength=$scope.leave.leaveList1[index].additionalChildList.length;
				for(var i=0;i< addChildLength;i++)
				{
		    	var fieldType=$scope.leave.leaveList1[index].additionalChildList[i].fieldType;
		    	var lookupValues=$scope.leave.leaveList1[index].additionalChildList[i].lookupValueList;
		    	if("Select to tag FMLA"==childKey)
	    		{
	    			if(!$scope.leave.leaveList1[index].newLeave.FMLATaggedName)
	    			   $scope.leave.leaveList1[index].showChild=false;
	    		};
		    	if(fieldType=="DROP_DOWN" && $scope.leave.leaveList1[index].showChild){
		    		
		    		
		    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){
		    			$scope.leave.leaveList1[index].newLeave.Attribute1_Value="Select";
			    		$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    			$scope.leave.leaveList1[index].newLeave.Attribute2_Value="Select";
		    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    			$scope.leave.leaveList1[index].newLeave.Attribute3_Value="Select";
		    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
		    			$scope.leave.leaveList1[index].newLeave.Attribute4_Value="Select";
		    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
		    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value="Select";
		    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    		else if("nomRelation"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
		    			$scope.leave.leaveList1[index].newLeave.nomRelation="Select";
		    		$scope.leave.leaveList1[index].newLeave.nomRelationName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    		
		    		
		    		var selectTag=	applyLevService._buildDropDown($scope.leave.leaveList1[index].additionalChildList[i],lookupValues,isParent,$scope,index);
		    		$(selectTag).appendTo("#"+index+"childField"+i);
		    		}
		    		else if(fieldType=="TEXT_BOX_CHAR" && $scope.leave.leaveList1[index].showChild){ 
		    			
		    			if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
				    		$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
			    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
			    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
			    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
			    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("nomName"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
			    			$scope.leave.leaveList1[index].newLeave.nomNameName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("fatherName"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
			    			$scope.leave.leaveList1[index].newLeave.fatherNameName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("nomAddress"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
			    			$scope.leave.leaveList1[index].newLeave.nomAddressName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    			
		    			var selectTag=	applyLevService._buildTextField($scope.leave.leaveList1[index].additionalChildList[i],isParent,$scope,index);
				    	$(selectTag).appendTo("#"+index+"childField"+i);
			    		}
		    			else if(fieldType=="TEXT_BOX_DATE" && $scope.leave.leaveList1[index].showChild){                     
		    				
		    				if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    					$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    					$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    					$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
		    					$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
		    					$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("childBirthDate"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
		    					$scope.leave.leaveList1[index].newLeave.childBirthDateName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				
		    				var selectTag=	applyLevService._buildTextDate($scope.leave.leaveList1[index].additionalChildList[i],$scope,isParent,index);
		    				$(selectTag).appendTo("#"+index+"childField"+i);
			    	}
		    			else if(fieldType=="RADIO_BUTTON" && $scope.leave.leaveList1[index].showChild){                       
		    				if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    					$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    					$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
		    					$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
		    					$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
		    					$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
		    				
		    				var selectTag=	applyLevService._buildRadioButton($scope.leave.leaveList1[index].additionalChildList[i],lookupValues,$scope,isParent,index);
		    				$(selectTag).appendTo("#"+index+"childField"+i);
			    	}
		    			else if("Flexi Holiday"==$scope.leave.leaveList1[index].newLeave.leaveTypeName){
		    				

		    				 $scope.leave.leaveList1[index].showChild=false;
		    				 $scope.leave.leaveList1[index].newLeave.noOfDays= 1;
		    	             if($scope.equalDate){
		    		         $scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.chldname;
		    	             }else{
		    		         for(var i=0;i<$scope.leave.leaveList1[index].additionalFieldsList[0].lookupValueList.length;i++){
	    			         if($scope.leave.leaveList1[index].additionalFieldsList[0].lookupValueList[i]==$scope.leave.leaveList1[index].newLeave.Attribute1_Value){
	    				     $scope.leave.leaveList1[index].newLeave.startDate=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
	    				     $scope.leave.leaveList1[index].newLeave.endDate=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
	    				     $scope.leave.leaveList1[index].newLeave.reason=$scope.leave.leaveList1[index].additionalChildList[0].parentDivision;
	    				     commonAppLevService.selectedDates[index*2]=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
                             commonAppLevService.selectedDates[(index*2)+1]=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
	    			       	};
	    			
	    				}; 
		    	   }
		    		///////////////////////bal check///////////
		    	             for(var i=0;i<$scope.levBalList.length;i++){
				  	        	 var oldBal=$scope.levBalList[i].posted;
				  	        	 var newBal;
				  	        	 if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.levBalList[i].countryLeaveTypeId){
				  	        		var doubleCheck=false;
				  	        		if(index<$scope.leave.leaveList1.length-1){
				                         for(var j=0;j<$scope.leave.leaveList1.length;j++){
					  	        			 
					  	        			 if(j!=index){
					  	        				 if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId){
					  	        					if( doubleCheck){
					  	        						newBal=newBal-$scope.leave.leaveList1[j].newLeave.noOfDays;
					  	        					}else{
					  	        						newBal=$scope.levBalList[i].posted-$scope.leave.leaveList1[j].newLeave.noOfDays;
					  	        						doubleCheck=true;
					  	        					}
					  	        			    }
					  	        			}
					  	        		 }
				                     }else{
				  	        			 for(var j=0;j<index;j++){
					  	        			 
					  	        			 if(j!=index){
					  	        				 if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId){
					  	        					if( doubleCheck){
					  	        						newBal=newBal-$scope.leave.leaveList1[j].newLeave.noOfDays;
					  	        					}else{
					  	        						newBal=$scope.levBalList[i].posted-$scope.leave.leaveList1[j].newLeave.noOfDays;
					  	        						doubleCheck=true;
					  	        					}
					  	        						
					  	        				    
					  	        				 }
					  	        				 
					  	        			 }
					  	        		 }
				  	        		}
				  	        	
				  	        		 if(newBal==null){
				  	        			 if(($scope.levBalList[i].posted-$scope.leave.leaveList1[index].newLeave.noOfDays)<0 && !($scope.levBalList[i].countryLeaveTypeId==503)){
						  	        			$scope.leave.leaveList1[index].errorMsg="You do not have sufficient balance to apply "+$scope.levBalList[i].countryLevTypeName +" of "+$scope.leave.leaveList1[index].newLeave.noOfDays+" days.";
						  	        		//	$scope.levBalList[i].posted=oldBal;
						  	        		 }else{
						  	        			 if(!( maxMinCheck))
						  	        			$scope.leave.leaveList1[index].errorMsg=""; 
						  	        		 }
				  	        		 }else{
				  	        			if((newBal-$scope.leave.leaveList1[index].newLeave.noOfDays)<0){
					  	        			$scope.leave.leaveList1[index].errorMsg="You do not have sufficient balance to apply "+$scope.levBalList[i].countryLevTypeName +" of "+$scope.leave.leaveList1[index].newLeave.noOfDays+" days.";
					  	        		//	$scope.levBalList[i].posted=oldBal;
					  	        		 }else{
					  	        			 if(!( maxMinCheck))
					  	        			$scope.leave.leaveList1[index].errorMsg="";
					  	        		 }
				  	        		 }
				  	        		 
				  	        		if(index<=$scope.leave.leaveList1.length-1){
				  	        			var TotalBal=0;
				  	        			for(var i=0;i<$scope.leave.leaveList1.length;i++){
				  	        			
				  	        					if($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId==$scope.leave.leaveList1[i].newLeave.countryLeaveTypeId){
				  	        						TotalBal=TotalBal+$scope.leave.leaveList1[i].newLeave.noOfDays;
				  	        					}
				  	        				
				  	        			}
				  	        		
				  	        			for(i=0;i<$scope.levBalList.length;i++)
				  	        			{
				  	        				if($scope.levBalList[i].countryLeaveTypeId==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId){
				  	        					if(($scope.levBalList[i].posted-TotalBal)>=0){
						  	        				for(var j=0;j<$scope.leave.leaveList1.length;j++){
						  	        					//if(!(undefined==$scope.leave.leaveList1[j].newLeave))
						  	        					if($scope.levBalList[i].countryLeaveTypeId==$scope.leave.leaveList1[j].newLeave.countryLeaveTypeId)
						  	        						 if(!( maxMinCheck))
						  	        						$scope.leave.leaveList1[j].errorMsg="";
						  	        				}
						  	        			}
				  	        				}
				  	        			}
				  	        			
				  	        		}
				  	        	
				  	        	 }
				  	        	
				  	         }
		    			}
		    			else if("TEXT_LINK"==fieldType){                      
				    	
				    	if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
				    	$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
			    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
			    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
			    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
			    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
			    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
				    	
				    	var selectTag=	applyLevService._buildTextLink($scope.leave.leaveList1[index].additionalChildList[i],isParent,$scope,index);
				    	$(selectTag).appendTo("#"+index+"childField"+i);
				    	}
				    	else if(fieldType=="STATIC_TEXT" && $scope.leave.leaveList1[index].showChild){
					    		if("disclaimer1"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    			$scope.leave.leaveList1[index].showDsclmr1=true;
					    		$scope.leave.leaveList1[index].disclaimer1=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer2"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    			$scope.leave.leaveList1[index].showDsclmr2=true;
					    		$scope.leave.leaveList1[index].disclaimer2=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer3"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    				$scope.leave.leaveList1[index].showDsclmr3=true;
					    		$scope.leave.leaveList1[index].disclaimer3=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer4"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    					$scope.leave.leaveList1[index].showDsclmr4=true;
					    		$scope.leave.leaveList1[index].disclaimer4=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer5"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    						$scope.leave.leaveList1[index].showDsclmr5=true;
					    		$scope.leave.leaveList1[index].disclaimer5=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer6"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    							$scope.leave.leaveList1[index].showDsclmr6=true;
					    		$scope.leave.leaveList1[index].disclaimer6=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer7"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    								$scope.leave.leaveList1[index].showDsclmr7=true;
					    		$scope.leave.leaveList1[index].disclaimer7=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer8"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    									$scope.leave.leaveList1[index].showDsclmr8=true;
					    		$scope.leave.leaveList1[index].disclaimer8=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer9"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    										$scope.leave.leaveList1[index].showDsclmr9=true;
					    		$scope.leave.leaveList1[index].disclaimer9=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
				    			}else if("disclaimer10"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
					    											$scope.leave.leaveList1[index].showDsclmr10=true;
					    		$scope.leave.leaveList1[index].disclaimer10=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
				    			}else if("disclaimer11"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
																	$scope.leave.leaveList1[index].showDsclmr11=true;
						    	$scope.leave.leaveList1[index].disclaimer11=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		}else if("disclaimer12"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
																		$scope.leave.leaveList1[index].showDsclmr12=true;
						    	$scope.leave.leaveList1[index].disclaimer12=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
					    		};
					      };
					};
				};
};
//for ievolve
$scope.hideDisclaimer=function(value,idx){
	console.log("Value of Database Column Name : " + value + " Index :  " + idx);
	$scope.leave.leaveList1[idx].defaultDsclmrVal7=false;
	if('No'===value){
		$scope.leave.leaveList1[idx].showDsclmr7=false;
		
	}else{
		$scope.leave.leaveList1[idx].showDsclmr7=true;
	}
};


$scope.removeServerErrMsg=function(index){
	$scope.leave.leaveList1[index].serverErrMsg='';
	$("#contactNumHome_0").removeClass("dirty-field");
};
//////////dependency check
$scope.dependencyCheck=function(index){
	
	
	 Array.prototype.contains = function(obj) {
	 	    var i = this.length;
	 	    while (i--) {
	 	        if (this[i] == obj) {
	 	            return true;
	 	        }
	 	    }
	 	    return false;
	 	};
   
	 for(var j=index;j<$scope.leave.leaveList1.length;j++){
		
		$scope.dependencyMap["key"+j]=$scope.dependencyMap["key"+(j+1)];
	}
	  var kunnu=$scope.dependencyMap["key"+index];
		 for(var i=0;i<$scope.leave.leaveList1.length;i++){
			 if(!(undefined==kunnu)){
					 if(kunnu.contains($scope.leave.leaveList1[i].newLeave.countryLeaveTypeId)){
						  $scope.leave.leaveList1[i].dependencyError=" " ;
						  var field=angular.element($("#leaveTypeName_"+i));
         				 field.removeClass('dirty-field');
			  	          $scope.leave.leaveList1[i].check2=true;
			  	        $scope.dependencyflag=true;   
			  	         }else{
			  	        	if(!(undefined==$scope.depContainer))
			  	        	if($scope.depContainer.contains($scope.leave.leaveList1[i].newLeave.countryLeaveTypeId)) {
			  	        	  $scope.leave.leaveList1[i].dependencyError=" " ;
							  var field=angular.element($("#leaveTypeName_"+i));
	         				 field.removeClass('dirty-field');
				  	          $scope.leave.leaveList1[i].check2=true;
				  	        $scope.dependencyflag=true;  
			  	        	}
			  	         }
					   if(kunnu.length==0){   //////////creating issue while deleting
			  				 $scope.dependencyflag=true;   
			  			   $scope.leave.leaveList1[i].dependencyError=" ";
			  			 var field=angular.element($("#leaveTypeName_"+(i+1)));
        				 field.removeClass('dirty-field');
			  		   } 
				 }
		 }
	
 delete $scope.dependencyMap["key"+$scope.leave.leaveList1.length];
};

//this method is called to check duration of start and end dates and then call noOfDays method to get no of days----------------------		
$scope.defaultDuration=function(index){
	        if(undefined!=$scope.leave.leaveList1[index]){
	        	if(!($scope.leave.leaveList1[index].checkHalfDay)){
	        		$scope.leave.leaveList1[index].newLeave.startDuration="Full Day";
	            	$scope.leave.leaveList1[index].newLeave.endDuration="Full Day";
	            	startDate=$scope.leave.leaveList1[index].newLeave.startDuration;
					endDate=$scope.leave.leaveList1[index].newLeave.endDuration;
					if(applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.startDate) && applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.endDate))
	            	$scope.getNoOfDays(index);
					else
					$scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
	            	
	        	};
	        	if($scope.leave.leaveList1[index].checkHalfDay && ($scope.leave.leaveList1[index].newLeave.startDate==$scope.leave.leaveList1[index].newLeave.endDate)){
	        		$scope.leave.leaveList1[index].newLeave.startDuration="First Half";
	            	$scope.leave.leaveList1[index].newLeave.endDuration="First Half";
	            	$scope.leave.leaveList1[index].sDateDurations=['First Half','Second Half'];
	            	$scope.leave.leaveList1[index].eDateDurations=['First Half','Second Half'];
	            	startDate=$scope.leave.leaveList1[index].newLeave.startDuration;
					endDate=$scope.leave.leaveList1[index].newLeave.endDuration;
					if(applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.startDate) && applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.endDate))
	            	$scope.getNoOfDays(index);
					else
					$scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
	            	
	        	};
	        	if($scope.leave.leaveList1[index].checkHalfDay && !($scope.leave.leaveList1[index].newLeave.startDate==$scope.leave.leaveList1[index].newLeave.endDate)){
	        		$scope.leave.leaveList1[index].newLeave.startDuration="Full Day";
	            	$scope.leave.leaveList1[index].newLeave.endDuration="Full Day";
	            	$scope.leave.leaveList1[index].sDateDurations=['Second Half','Full Day'];
	            	$scope.leave.leaveList1[index].eDateDurations=['First Half','Full Day'];
	            	startDate=$scope.leave.leaveList1[index].newLeave.startDuration;
					endDate=$scope.leave.leaveList1[index].newLeave.endDuration;
					if(applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.startDate) && applyLevService.isValidDate($scope.leave.leaveList1[index].newLeave.endDate))
	            	$scope.getNoOfDays(index);
					else
					$scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
	        	};
	        }
        	
        	
        	
        };		
		
//method to save leave and add new row commited for phase 1-------------------------------------------------------------------------------------------		
        
		/*&& !($scope.leave.leaveList1[listLength].newLeave.reason==undefined)*/
$scope.saveLeave = function() {
	    
var listLength=$scope.leave.leaveList1.length-1;
	
	
											if (!($scope.leave.leaveList1[listLength].newLeave == undefined)
													&& !($scope.leave.leaveList1[listLength].newLeave.leaveTypeName == "Select" || $scope.leave.leaveList1[listLength].newLeave.leaveTypeName== undefined)
													&& !($scope.leave.leaveList1[listLength].newLeave.startDate == undefined)
													&& !($scope.leave.leaveList1[listLength].newLeave.endDate == undefined)) { 
											      	for (var i=0; i<=$scope.leave.leaveList1.length; i++) {
													if ($scope.leave.leaveList1[i] != undefined) {
														$scope.leave.leaveList1[i].newLeave.isDisabled = true;
													  };
											     	};
												              	$scope.newLeave = {"newLeave" : {}};
																	if ($scope.leave.leaveList1.length < 4) {
																	dragDropServices.clearUploadedView(); //added by priti
																	//$scope.manualAddress();
																	$scope.isFlexi=false;
															    	$scope.leave.leaveList1[listLength].newLeave.isDisabled = true;
																	$scope.leave.leaveList1.push($scope.newLeave);
																	$scope.counter = $scope.counter + 1;
																	$scope.rowIdforCal=$scope.counter;
																	commonAppLevService.rowIndex = $scope.counter;
																	if($scope.addressList[0].address=="" || $scope.addressList[0].mobilePhone=="" || undefined==$scope.addressList[0].mobilePhone || undefined==$scope.addressList[0].address){
																		 $scope.leave.leaveList1[$scope.counter].newLeave.contactAddress=angular.copy($scope.leave.leaveList1[$scope.counter-1].newLeave.contactAddress);
																		 $scope.leave.leaveList1[$scope.counter].newLeave.contactNumCell=angular.copy($scope.leave.leaveList1[$scope.counter-1].newLeave.contactNumCell);
																	}else{
																		 $scope.leave.leaveList1[$scope.counter].newLeave.contactAddress=angular.copy($scope.addressList[0].address);
																		 $scope.leave.leaveList1[$scope.counter].newLeave.contactNumCell=angular.copy($scope.addressList[0].mobilePhone);
																	}
																  
																	
																	$scope.leave.leaveList1[$scope.counter].newLeave.id = $scope.counter;
																	$scope.leave.leaveList1[$scope.counter].newLeave.leaveTypeName = "Select";
																	$scope.leave.leaveList1[$scope.counter].newLeave.startDuration = "Full Day";
																	$scope.leave.leaveList1[$scope.counter].newLeave.endDuration = "Full Day";
																	$scope.leave.leaveList1[$scope.counter].checkHalfDay = false;
																	$scope.leave.leaveList1[$scope.counter].showHalfDay = false;
																	$scope.leave.leaveList1[$scope.counter].showParent = false;
																	$scope.leave.leaveList1[$scope.counter].showChild = false;
																	$scope.leave.leaveList1[$scope.counter].newLeave.noOfDays = 0.0;
																	$scope.leave.leaveList1[$scope.counter].isManualAddress = false;
																	$scope.leave.leaveList1[$scope.counter].errorMsg ='';
																	$scope.errorMsg ='';
																	$scope.errorQuick='';
																	$scope.leave.leaveList1[$scope.counter].serverErrMsg='';
																	$scope.manualAddress();
																	document.getElementsByTagName("TD")[0].setAttribute("ng-disabled","true");
																	
																	////check for row error/////////////////////////////////////////////////////////////////
														        	 var redFlag = false;
																	     for(var index=0;index<$scope.leave.leaveList1.length;index++){
																	    	    if (isErrMgsEmpty(index) && isDrpDwnValid(index) && isEmailVld(index) && isMaternityVld(index) && isLwpVld(index) && isDisclaimerAcptd(index)) { //   isDrpDwnValid(cnt) && isEmailVld(cnt) && isMaternityVld(cnt) && isLwpVld(cnt) && isDisclaimerAcptd(cnt)
																		        	redFlag = false;
																		        	 var field=angular.element($("#ErrRow_"+index));
																			    	 field.removeClass('dirty-row');
																			    	 var field1=angular.element($("#Incm_"+index));
																			    	 field1.removeClass('incomplete-row');
																			    	 field1.html("");
																		      }else{
																		        	redFlag=true;
																		        	 var field=angular.element($("#ErrRow_"+index));
																			    	 field.addClass('dirty-row');
																			    	 var field1=angular.element($("#Incm_"+index));
																			    	 field1.addClass('incomplete-row');
																			    	 field1.html("INCOMPLETE");
																		      }; 
																	     }
																	    //hide add another
																	     if($scope.leave.leaveList1.length==4){
																	    	 $("#saveLev").hide();
																	     }
																	  } else {
																		
																	/*//	$scope.errMsg = "Maximum row limit is 4";
																	// alert("Maximum row limit is 4");
																		  $scope.leave.leaveList1[listLength].newLeave.isDisabled = false;
																		  $scope.leave.leaveList1[listLength].newLeave.ErrDisplay="Maximum row limit is 4";
																		  $scope.errCheck=true;*/
																};
																
														
													}else{
													//	alert("Please select start date,End date,Leave Type and Reason.");
														 $scope.leave.leaveList1[listLength].errorMsg="Please select start date,End date and Leave Type."
													}
										};

isErrMgsEmpty=function(cnt){
	if((''==$scope.leave.leaveList1[cnt].errorEDate || undefined==$scope.leave.leaveList1[cnt].errorEDate)
	&& (''==$scope.leave.leaveList1[cnt].errorSDate || undefined==$scope.leave.leaveList1[cnt].errorSDate)
	&& !(''==$scope.leave.leaveList1[cnt].newLeave.reason|| undefined==$scope.leave.leaveList1[cnt].newLeave.reason))
		return true;
	else 
			return false;
};
//function to enable and disable rows commited for phase 1---------------------------------------------------------										
		$scope.enableRow = function(rowId) {
			                     $scope.rowIdforCal=rowId;
								 $scope.fmlaFlag=false;
								 commonAppLevService.rowIndex= rowId;  
								 $scope.manualeditAddress(rowId);
								////check for row error/////////////////////////////////////////////////////////////////
					        	 var redFlag = false;
								     for(var index=0;index<$scope.leave.leaveList1.length;index++){
								    	    if (isErrMgsEmpty(index) && isDrpDwnValid(index) && isEmailVld(index) && isMaternityVld(index) && isLwpVld(index) && isDisclaimerAcptd(index)) { //   isDrpDwnValid(cnt) && isEmailVld(cnt) && isMaternityVld(cnt) && isLwpVld(cnt) && isDisclaimerAcptd(cnt)
									        	redFlag = false;
									        	 var field=angular.element($("#ErrRow_"+index));
										    	 field.removeClass('dirty-row');
										    	 var field1=angular.element($("#Incm_"+index));
										    	 field1.removeClass('incomplete-row');
										    	 field1.html("");
										    	
									      }else{
									        	redFlag=true;
									        	 var field=angular.element($("#ErrRow_"+index));
										    	 field.addClass('dirty-row');
										    	 var field1=angular.element($("#Incm_"+index));
										    	 field1.addClass('incomplete-row');
										    	 field1.html("INCOMPLETE");
										    	 
									      }; 
								     }
								if($scope.leave.leaveList1[rowId].newLeave.Attribute1_Value!=null){
									 $scope.atrri1=$scope.leave.leaveList1[rowId].newLeave.Attribute1_Value;
								}else{ $scope.atrri1=""; }
								if($scope.leave.leaveList1[rowId].newLeave.Attribute2_Value!=null){
									$scope.atrri2=$scope.leave.leaveList1[rowId].newLeave.Attribute2_Value;
								}else{$scope.atrri2=""; }
								if($scope.leave.leaveList1[rowId].newLeave.Attribute3_Value!=null){
									$scope.atrri3=$scope.leave.leaveList1[rowId].newLeave.Attribute3_Value;
								}else{	$scope.atrri3="";}
								if($scope.leave.leaveList1[rowId].newLeave.Attribute4_Value!=null){
									$scope.atrri4=$scope.leave.leaveList1[rowId].newLeave.Attribute4_Value;
								}else{$scope.atrri4="";	}
								if($scope.leave.leaveList1[rowId].newLeave.Attribute5_Value!=null){
									$scope.atrri5=$scope.leave.leaveList1[rowId].newLeave.Attribute5_Value;
								}else{$scope.atrri5="";}
								if($scope.leave.leaveList1[rowId].newLeave.contactNumHome!=null){
									$scope.atrri6=$scope.leave.leaveList1[rowId].newLeave.contactNumHome;
								}else{$scope.atrri6="";}
								if($scope.leave.leaveList1[rowId].newLeave.nomRelation!=null){
									 $scope.nomRelation=$scope.leave.leaveList1[rowId].newLeave.nomRelation;
								}else{$scope.nomRelation="";}
								if($scope.leave.leaveList1[rowId].newLeave.nomName!=null){
									$scope.nomName=$scope.leave.leaveList1[rowId].newLeave.nomName;
								}else{$scope.nomName="";}
								if($scope.leave.leaveList1[rowId].newLeave.fatherName!=null){
									$scope.fatherName=$scope.leave.leaveList1[rowId].newLeave.fatherName;
								}else{$scope.nomName="";}
								if($scope.leave.leaveList1[rowId].newLeave.nomAddress!=null){
									$scope.nomAddress=$scope.leave.leaveList1[rowId].newLeave.nomAddress;
								}else{$scope.nomAddress="";}
								if($scope.leave.leaveList1[rowId].newLeave.childBirthDate!=null){
									$scope.childBirthDate=$scope.leave.leaveList1[rowId].newLeave.childBirthDate;
								}else{$scope.childBirthDate="";	}
                                 if($scope.leave.leaveList1[rowId].newLeave.FMLATaggedName){
                                	 $scope.fmlaFlag=true;
                                 }
								if($scope.leave.leaveList1[rowId].newLeave.hisAvailed=="Y" && $scope.leave.leaveList1[rowId].newLeave.leaveTypeName=="Maternity Leave"){
									$scope.hisAvailed='Y';
								}
								if($scope.leave.leaveList1[rowId].newLeave.iEvolveFlag!=null){
                               	 $scope.iEvolveFlag=$scope.leave.leaveList1[rowId].newLeave.iEvolveFlag;
                                }else{$scope.iEvolveFlag="";  }
								$scope.getNoOfDays(rowId);
								 $scope.getAddfields($scope.leave.leaveList1[rowId].newLeave.leaveTypeName,rowId);
							//	var spanId=document.getElementsByClassName(rowId+"field"+rowId);
								 var rowIndex=rowId+1;
								 $(".addfieldClass"+rowIndex).remove();
								 $scope.leave.leaveList1[rowId].newLeave.isDisabled = false;
						    	 $scope.leave.leaveList1[rowId].showParent = true;
								 $scope.leave.leaveList1[rowId].showChild = false;
										if (rowId <= 3) {
											for (var i = 0; i < rowId; i++) {
												$scope.leave.leaveList1[i].newLeave.isDisabled = true;

											}
											++rowId;
											for (rowId; rowId <= 3; rowId++) {
												if ($scope.leave.leaveList1[rowId] != undefined) {
													$scope.leave.leaveList1[rowId].newLeave.isDisabled = true;
												};
											};
										};
								
							 		};	
							 		
							 		
							 	
//////////////////-----------------------------------------after enabling ....additional fields-----------------------------
							 		
$scope.getAddfields=function(selectedLeaveTypeName,index)
	{
							 				 //code to remove dirty css of css applied because of on submit
							 				 var field=angular.element($("#leaveTypeName_"+index));
							 				 field.removeClass('dirty-field');
							 				 $scope.leave.leaveList1[index].draftErr='';
							 				// $scope.isMtrntyAccptd=false;
							 				// $scope.isLwpAccptd=false;
							 				 if(selectedLeaveTypeName=="Flexi Holiday"){
							 					 $scope.isFlexi=true;
							 					 if(!($scope.leave.leaveList1[index].newLeave.startDate==undefined) && !($scope.leave.leaveList1[index].newLeave.endDate==undefined)){
							 						 var tempSDate=moment($scope.leave.leaveList1[index].newLeave.startDate);
							 						 var tempEDate=moment($scope.leave.leaveList1[index].newLeave.endDate);
							 						 while (tempEDate._d.getTime() > tempSDate._d.getTime()) {
							 								
							 								var tempTimeStamp = tempEDate._d.getTime();
							 								$("#day"+ tempTimeStamp).removeClass("hoverDiv");
							 								tempEDate = tempEDate.add(-1,'d');
							 							};
							 					 };
							 					 $scope.leave.leaveList1[index].newLeave.startDate=undefined;
							 					 $scope.leave.leaveList1[index].newLeave.endDate=undefined;
							 					 $scope.leave.leaveList1[index].newLeave.reason=undefined;
							 					 commonAppLevService.selectedDates[index*2]=undefined;
							 					 commonAppLevService.selectedDates[(index*2)+1]=undefined;
							 					 $scope.leave.leaveList1[index].newLeave.noOfDays=0.0;
							 					 //$compile($scope);
							 					}else{
							 						$scope.isFlexi=false;
							 					};
							 					
							 				 
							 			        $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId=applyLevService.getlevIdFromName($scope.leaveTypes,selectedLeaveTypeName);
							 			        $http.post( '/leaverest/rest/leaveDropDownChanged/?cd=' + (new Date()).getTime(), $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId).then(function(response)
							 			         {
							 			        	//IF block to show error if maternity or SML is changed to other type and dates selected fall on weekend
							 			        /*	if(!($scope.leave.leaveList1[index].newLeave.startDate==undefined) || !($scope.leave.leaveList1[index].newLeave.endDate==undefined))
							 			        	{
							 						 var eDate=applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.endDate);
							 						 var sDate=applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.startDate);
							 						 var sdWeekday=!WeekendService.isSdWeekend(sDate);
							 						 var edWeekday=!WeekendService.isEdWeekend(eDate);
							 						 
							 		                         var sdValid=  ValidateDtService.isSdValid($scope,sDate,index);
							 		                         if(sdValid){
							 		                        	if($scope.leave.leaveList1[index].selectedSdate || $scope.leave.leaveList1[index].halfCheck){
							 		                           	//do nothing
							 		                             }else{
							 		   	    				 $scope.leave.leaveList1[index].errorSDate='';
							 		                             }
							 			    				 var field=angular.element($("#startDate_"+index));field.removeClass('dirty-field');
							 		                         };
							 			    			     var edValid=  ValidateDtService.isEdValid($scope,eDate,index);
							 				    			 if(edValid){
							 				    				 if($scope.leave.leaveList1[index].selectedEdate){
							 			                        	//do nothing
							 			                        }else{
							 			                        	  $scope.leave.leaveList1[index].errorEDate='';
							 			                       }
							 				    				 var field=angular.element($("#endDate_"+index));field.removeClass('dirty-field');
							 				    			 };
							 				    			 var tempEdate=eDate.clone();
							 				    			 tempEdate=tempEdate.add(-1,'d');
							 				    			 var midStValid=ValidateDtService.isMidStValid($scope,tempEdate,sDate,index);
							 				    			 if(midStValid && sdValid){
							 				    				if($scope.leave.leaveList1[index].selectedSdate || $scope.leave.leaveList1[index].halfCheck){
							 			                        	//do nothing
							 			                          }else{
							 				    				 $scope.leave.leaveList1[index].errorSDate='';
							 			                          }
							 				    				 var field=angular.element($("#startDate_"+index));field.removeClass('dirty-field');
							 				    			 };
							 				    			 
							 				    			 var tempSdate=sDate.clone();
							 				    			 tempSdate=tempSdate.add(1,'d');
							 				    			 var midEtValid=ValidateDtService.isMidEtValid($scope,tempSdate,eDate,index);
							 				    			 if(midEtValid && edValid){
							 				    				 if($scope.leave.leaveList1[index].selectedEdate){
							 			                        	//do nothing
							 			                        }else{
							 			                        	  $scope.leave.leaveList1[index].errorEDate='';
							 			                       }
							 				    				 var field=angular.element($("#endDate_"+index));field.removeClass('dirty-field');
							 				    			 };
							 						
							 			    			 
							 					
							 	};*/
							/* 	 var depList=response.data.dependencyList;
				                   $scope.dependencyMap["key"+index]=depList;
				                   outerloop:
				                   for(var i=0;i<$scope.leave.leaveList1.length;i++){
				                	 if(!($scope.dependencyMap["key"+i]==undefined)){
				                		 for (var j=0;j<$scope.dependencyMap["key"+i].length;j++){
					                		 if(($scope.leave.leaveList1[index].newLeave.countryLeaveTypeId)==$scope.dependencyMap["key"+i][j]){
					                		   $scope.leave.leaveList1[index].dependencyError="You cannot choose this leave with selected leaves.Please choose some other leave type." ;
					                		   break outerloop;
					                	     }else{
					                	       $scope.leave.leaveList1[index].dependencyError=""; 
					                	     }
					                	    }
				                	 }
				                	
				                	if($scope.leave.leaveList1.length==1){
				                		if($scope.dependencyMap["key0"].length==0 ){
					                		$scope.leave.leaveList1[index].dependencyError=""; 
					                	}
				                	}else if($scope.leave.leaveList1.length==2){
				                		if(!($scope.dependencyMap["key0"]==undefined || $scope.dependencyMap["key1"]==undefined)){
				                			if($scope.dependencyMap["key0"].length==0 && $scope.dependencyMap["key1"].length==0 ){
						                		$scope.leave.leaveList1[index].dependencyError=""; 
						                	}
				                		}else{
				                			$scope.leave.leaveList1[index].dependencyError=""; 
				                		}
				                		
				                	}else if($scope.leave.leaveList1.length==3){
				                		if(!($scope.dependencyMap["key0"]==undefined || $scope.dependencyMap["key1"]==undefined || $scope.dependencyMap["key2"]==undefined)){
				                		if($scope.dependencyMap["key0"].length==0 && $scope.dependencyMap["key1"].length==0 && $scope.dependencyMap["key2"].length==0 ){
					                		$scope.leave.leaveList1[index].dependencyError=""; 
					                	   }
				                		}else{
				                			$scope.leave.leaveList1[index].dependencyError=""; 
				                		}
				                	}else{
				                		if(!($scope.dependencyMap["key0"]==undefined || $scope.dependencyMap["key1"]==undefined || $scope.dependencyMap["key2"]==undefined || $scope.dependencyMap["key3"]==undefined)){
				                		if($scope.dependencyMap["key0"].length==0 && $scope.dependencyMap["key1"].length==0 && $scope.dependencyMap["key2"].length==0 && $scope.dependencyMap["key3"].length==0){
					                		$scope.leave.leaveList1[index].dependencyError=""; 
					                	}
				                		}else{
				                			$scope.leave.leaveList1[index].dependencyError=""; 
				                		}
				                	}
				                	
                                                     }*/
				                   
							 	         
							 
							 	
							 		                                                       $scope.leave.leaveList1[index].additionalFieldsList=[];
							 			                             		    	       $scope.leave.leaveList1[index].showParent=false;
							 			                             		    	       $scope.leave.leaveList1[index].showChild=false;
							 			                             		    	       resetAttrDsclmr(index);  //sets attribute name and value to null and also resets disclaimers
							 			                             				
							 			                             		    	   if(!(document.querySelector(".addfieldClass"+index)==null))
							 			                             		    	   {
							 			                             		    	       $(".addfieldClass"+index).remove();
							 			                             		    	    };
							 			                             		    	   if(!(document.querySelector(".childfieldClass"+index)==null))
							 			                             		    	   {
							 			                             			    	  $(".childfieldClass"+index).remove();
							 			                             			    	};
							 			                             		    	   if(!(response.data==undefined))
							 			                             		    	   {
							 			                             		    	      if(!(response.data.ParentField==undefined))
							 			                             		    	      {   
							 			                             		    	    	 $scope.leave.leaveList1[index].showParent=true;
							 			                             		    	        $scope.leave.leaveList1[index].additionalFieldData=response.data;
							 			                             		    	        $scope.leave.leaveList1[index].additionalFieldsList = response.data.ParentField;
							 			                             		    	    	
							 			                             		    	         var isParent=true;
							 			                             		    	     
							 			                             		    	       var addFldLength=$scope.leave.leaveList1[index].additionalFieldsList.length;
							 			                             				    	for(var i=0;i<addFldLength;i++)
							 			                             				    	 {  
							 			                             				    		var fieldType=$scope.leave.leaveList1[index].additionalFieldsList[i].fieldType;
							 			                             				    		var lookupValues=$scope.leave.leaveList1[index].additionalFieldsList[i].lookupValueList;
							 			                             				    		if(fieldType=="DROP_DOWN")
							 			                             				    		{
							 			                             				    			if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){
							 			                             				    			$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 			                             						    	$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             						    	$scope.getChdfields($scope.atrri1, index);
							 			                             				    			
							 			                             				    			}
							 			                             					    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             					    			$scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 			                             					    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             					    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             					    			$scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 			                             					    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             					    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
							 			                             					    			$scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 			                             					    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             					    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
							 			                             					    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 			                             					    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             				    		  var selectTag=applyLevService._buildDropDown($scope.leave.leaveList1[index].additionalFieldsList[i],lookupValues,isParent,$scope,index);
							 			                             				    		  $(selectTag).appendTo("#"+index+"field"+i);
							 			                             				    		}
							 			                             				    		else if(fieldType=="TEXT_BOX_CHAR")
							 			                             				    		{
							 			                             					    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             					    			$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 			                             									 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             								    			$scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             								    			$scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
							 			                             								    			$scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
							 			                             								    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("contactNumHome"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName) { 
							 			                             								    			$scope.leave.leaveList1[index].newLeave.contactNumHome=$scope.atrri6;
							 			                             								   }
							 			                             					    		var selectTag=applyLevService._buildTextField($scope.leave.leaveList1[index].additionalFieldsList[i],isParent,$scope,index);
							 			                             					    		$(selectTag).appendTo("#"+index+"field"+i);
							 			                             					    	}
							 			                             				    		else if(fieldType=="TEXT_BOX_DATE")
							 			                             				    		{
							 			                             		                       if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             		         				 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             		         				if(applyLevService.countryLeaveTypeId=="235" )
							 				                             		         				 $scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.leave.leaveList1[index].additionalFieldsList[i].lookupValues;
							 				                             		         				 else if(applyLevService.countryLeaveTypeId=="250"){
							 				                             		         					    var projDate=moment($scope.leave.leaveList1[index].additionalFieldsList[i].lookupValues).daysInMonth();
							 				 	                             		         					var toShowDate=moment($scope.leave.leaveList1[index].additionalFieldsList[i].lookupValues).date(projDate);
							 				 	                             		         					$scope.leave.leaveList1[index].newLeave.Attribute1_Value=applyLevService.convertToString(toShowDate); 
							 				                             		         				 }else{
							 			                             		         				     $scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 			                             		         				     }
							 			                             		         				}else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             		         					$scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 			                             		         			    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             		         			    else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             		         			    			$scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 			                             		         			    			$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             		         			    else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
							 			                             		         			    			$scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 			                             		         			    			$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             		         			    else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
							 			                             		         			    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 			                             		         			    			$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             		                       var selectTag=applyLevService._buildTextDate($scope.leave.leaveList1[index].additionalFieldsList[i],$scope,isParent,index);
							 			                             		                        $(selectTag).appendTo("#"+index+"field"+i);
							 			                             					    	}
							 			                             				    		else if(fieldType=="RADIO_BUTTON")
							 			                             				    		{
							 			                             				    			 var today=moment()._d.getTime();
							 			                             				    			var enddate=moment($scope.leave.leaveList1[index].newLeave.endDate)._d.getTime();
							 			                             					    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             					    			$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 			                             									 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             									 $scope.getChdfields($scope.atrri1, index);}
							 			                             								    else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             								    			 $scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
							 			                             								    			 $scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
							 			                             								    			 $scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("iEvolveFlag"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
							 			                             								    			 $scope.leave.leaveList1[index].newLeave.iEvolveFlag=$scope.iEvolveFlag;
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		
							 			                             								//    $scope.leave.leaveList1[index].newLeave.iEvolveFlag="Yes";
							 			                             						
							 			                             					    		var selectTag=applyLevService._buildRadioButton($scope.leave.leaveList1[index].additionalFieldsList[i],lookupValues,$scope,isParent,index);
							 			                             					    		$(selectTag).appendTo("#"+index+"field"+i);
							 			                             					    	 
							 			                             					    		
							 			                             					    	
							 			                             					    	}
							 			                             				    		else if(fieldType=="CHECK_BOX")
							 			                             				    		{
							 			                             					    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             									 $scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn){ 
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) {
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             								    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumn) { 
							 			                             								    $scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;}
							 			                             					    		var selectTag=applyLevService._buildCheckBox($scope.leave.leaveList1[index].additionalFieldsList[i],isParent,$scope,index);
							 			                             					    		$(selectTag).appendTo("#"+index+"field"+i);
							 			                             					    		if("452"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId){
							 			                             					    		$scope.leave.leaveList1[index].newLeave.FMLATaggedName=true;
							 			                             					    	    $scope.getChdfields('Select to tag FMLA', index);
							 			                             					    		};
							 			                             					    		if("450"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId ||  "454"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId ||  "457"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId ||
							 			                             					    				'79'==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId || "80"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId|| "82"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId){
							 			                             					    			if($scope.fmlaFlag){
							 			                             					    				$scope.leave.leaveList1[index].newLeave.FMLATaggedName=true;
							 			                             					    				$scope.getChdfields('Select to tag FMLA', index);
							 			                             					    			}
							 			                             					    		}
							 			                             					    	}
							 			                             				    		else if(fieldType=="STATIC_TEXT"){
							 			                             					    		if("disclaimer1"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    			$scope.leave.leaveList1[index].showDsclmr1=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer1=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer2"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    			$scope.leave.leaveList1[index].showDsclmr2=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer2=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer3"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    				$scope.leave.leaveList1[index].showDsclmr3=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer3=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer4"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    					$scope.leave.leaveList1[index].showDsclmr4=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer4=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer5"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    						$scope.leave.leaveList1[index].showDsclmr5=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer5=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer6"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    							$scope.leave.leaveList1[index].showDsclmr6=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer6=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer7"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    								if("Leave Without Pay"==$scope.leave.leaveList1[index].newLeave.leaveTypeName && "No"==$scope.leave.leaveList1[0].newLeave.iEvolveFlag){
																															$scope.leave.leaveList1[index].showDsclmr7=false; //ievolve
																															}else{
																																$scope.leave.leaveList1[index].showDsclmr7=true;
																															}
							 			                             					    		$scope.leave.leaveList1[index].disclaimer7=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer8"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    									$scope.leave.leaveList1[index].showDsclmr8=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer8=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             					    		}else if("disclaimer9"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    										$scope.leave.leaveList1[index].showDsclmr9=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer9=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             				    			}else if("disclaimer10"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 			                             					    												$scope.leave.leaveList1[index].showDsclmr10=true;
							 			                             					    		$scope.leave.leaveList1[index].disclaimer10=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 			                             				    			}else if("disclaimer11"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 							    																					$scope.leave.leaveList1[index].showDsclmr11=true;
							 					                             					    $scope.leave.leaveList1[index].disclaimer11=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 					                             					    }else if("disclaimer12"==$scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName){
							 							    																						$scope.leave.leaveList1[index].showDsclmr12=true;
							 							    										$scope.leave.leaveList1[index].disclaimer12=$scope.leave.leaveList1[index].additionalFieldsList[i].displayName;
							 					                             					    };
							 			                             					    };
							 			                             	                   
							 			                             				     };  //for loop ends
							 			                             				  
							 			                             		    	  };

							 			                             		    	
							 			 if(!(response.data.lwpCalendar==undefined))
							 		                            		    	      { 
							 			                             		    		 var lwpCalData=response.data.lwpCalendar;
							 			                             		    		 var lwpYearList=Object.keys(response.data.lwpCalendar);
							 			                             		    		angular.forEach(lwpYearList, function(value,key)
							 					    	                                    	{
							 			                             		    		//	$scope.minYear=moment([lwpYearList[0]]).format("YYYY-MM-DD");
							 				                             		    		$scope.maxYear=moment([lwpYearList[lwpYearList.length-1]]).month(11).date(31).format("YYYY-MM-DD");
							 			                             		    			$scope.leave.yearlist[value]=lwpCalData[value];
							 			                             		    			commonAppLevService.yearlist[value]=lwpCalData[value];
							 					    	                                    	});
							 			                             		    		 
							 			                             		    		
							 			    	                                    
							 		                            		    	     };
							 			                             		   };
							 			                             		    
							 			                             		    }); 	//server call ends	
							 			       //IF block for Singapore additional paternity popups-----------
							 			       if("634"== $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId 
							 			    	||"635"== $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId
							 			    	||"636"== $scope.leave.leaveList1[index].newLeave.countryLeaveTypeId)
							 			    	   {
							 			    	   $scope.singaporeMsg="To avail this leave, please note that citizenship of child must be Singaporean.";
							 			    	   $("#singaporeModal").modal('show');
							 			    	   };
							 			
							 		 };				 		
							 		
							 		
							 		
							 		
							 		
////////////////////////////----code ends----------------------------------------------------------------------------------
							 		 
/////////////////////////////////---get child field for parent fields-----------------------------------
 $scope.getChdfields=function(childKey,index)
 {
							 		 			 $scope.leave.leaveList1[index].serverErrMsg='';
							 		 			 var field1=angular.element($("#noOfDays_"+index));
							 		 			 field1.removeClass('dirty-field');
							 		 			 var field2=angular.element($("#startDate_"+index));
							 		 			 field2.removeClass('dirty-field');
							 		 			 var field3=angular.element($("#endDate_"+index));
							 		 			 field3.removeClass('dirty-field');
							 		 			 
							 		 		//	 $scope.isMtrntyAccptd=false;
							 		 		//	 $scope.isLwpAccptd=false;
							 		 			var isEmailField=false;
							 		 			var loopNumber;
							 		 			
							 		 			
							 		 			
							 		 			
							 		 			var emailParent=angular.element($("#contactNumHome_Parent_"+index));
							 		 			if("false"==emailParent.attr("inParent")){$scope.leave.leaveList1[index].showEmailDsclmr=false;$scope.leave.leaveList1[index].emailDisclaimer=null;};
							 		 			/*if(!("Leave Without Pay"==$scope.leave.leaveList1[index].newLeave.leaveTypeName && "US"==$scope.countryFlg)){
							 		 			if((null==$scope.leave.leaveList1[index].disclaimer1)){$scope.leave.leaveList1[index].showDsclmr1=false;$scope.leave.leaveList1[index].disclaimer1=null;};
							 		 			if((null==$scope.leave.leaveList1[index].disclaimer2)){$scope.leave.leaveList1[index].showDsclmr2=false;$scope.leave.leaveList1[index].disclaimer2=null;};
							 		 			if(($scope.leave.leaveList1[index].showDsclmr3)){$scope.leave.leaveList1[index].showDsclmr3=false;$scope.leave.leaveList1[index].disclaimer3=null;};
							 		 			if(($scope.leave.leaveList1[index].showDsclmr4)){$scope.leave.leaveList1[index].showDsclmr4=false;$scope.leave.leaveList1[index].disclaimer4=null;};
							 		 			if(($scope.leave.leaveList1[index].showDsclmr5)){$scope.leave.leaveList1[index].showDsclmr5=false;$scope.leave.leaveList1[index].disclaimer5=null;};
							 		 			if((null==$scope.leave.leaveList1[index].disclaimer6)){$scope.leave.leaveList1[index].showDsclmr6=false;$scope.leave.leaveList1[index].disclaimer6=null;};
							 		 			if((null==$scope.leave.leaveList1[index].disclaimer7)){$scope.leave.leaveList1[index].showDsclmr7=false;$scope.leave.leaveList1[index].disclaimer7=null;};
							 		 			if((null==$scope.leave.leaveList1[index].disclaimer8)){$scope.leave.leaveList1[index].showDsclmr8=false;$scope.leave.leaveList1[index].disclaimer8=null;};
							 		 			if((null==$scope.leave.leaveList1[index].disclaimer9)){$scope.leave.leaveList1[index].showDsclmr9=false;$scope.leave.leaveList1[index].disclaimer9=null;};
							 		 			if((null==$scope.leave.leaveList1[index].disclaimer10)){$scope.leave.leaveList1[index].showDsclmr10=false;$scope.leave.leaveList1[index].disclaimer10=null;};
							 		 			if(($scope.leave.leaveList1[index].showDsclmr11)){$scope.leave.leaveList1[index].showDsclmr11=false;$scope.leave.leaveList1[index].disclaimer11=null;};
							 		 			if(($scope.leave.leaveList1[index].showDsclmr12)){$scope.leave.leaveList1[index].showDsclmr12=false;$scope.leave.leaveList1[index].disclaimer12=null;};
							 		 			$scope.leave.leaveList1[index].defaultDsclmrVal5=false;
							 		 			$scope.leave.leaveList1[index].defaultDsclmrVal6=false;
							 		 			$scope.leave.leaveList1[index].defaultDsclmrVal7=false;
							 		 			$scope.leave.leaveList1[index].defaultDsclmrVal8=false;
							 		 			$scope.leave.leaveList1[index].defaultDsclmrVal11=false;
							 		 			$scope.leave.leaveList1[index].defaultDsclmrVal12=false;
							 		 			
							 		 			};*/
							 		 			$scope.leave.leaveList1[index].newLeave.nomRelation=null;
							 		     		$scope.leave.leaveList1[index].newLeave.nomRelationName=null;
							 		     		$scope.leave.leaveList1[index].newLeave.nomNameName=null;
							 		     		$scope.leave.leaveList1[index].newLeave.nomName=null;
							 		     		$scope.leave.leaveList1[index].newLeave.fatherNameName=null;
							 		     		$scope.leave.leaveList1[index].newLeave.fatherName=null;
							 		     		$scope.leave.leaveList1[index].newLeave.nomAddressName=null;
							 		     		$scope.leave.leaveList1[index].newLeave.nomAddress=null;
							 		     		$scope.leave.leaveList1[index].newLeave.childBirthDateName=null;
							 		     		$scope.leave.leaveList1[index].newLeave.childBirthDate=null;
							 		 			
							 		 			
							 		 			$scope.leave.leaveList1[index].showChild=false;
							 		 			if(!(document.querySelector(".childfieldClass"+index)==null))
							 		 			{
							 		 			$(".childfieldClass"+index).remove();
							 		 			};
							 		 				$scope.leave.leaveList1[index].additionalChildList=angular.property($scope.leave.leaveList1[index].additionalFieldData)(childKey);
							 		 				var isParent=false;
							 		 				if(!($scope.leave.leaveList1[index].additionalChildList==undefined)){
							 		 			
							 		 		    		
							 		 					$scope.leave.leaveList1[index].showChild=true;
							 		 					if("Leave Without Pay"==$scope.leave.leaveList1[index].newLeave.leaveTypeName
							 		                     && "Joining Spouse on international assignment overseas"==$scope.leave.leaveList1[index].newLeave.Attribute1_Value
							 		                     && 30 > $scope.leave.leaveList1[index].newLeave.noOfDays)
							 		 						$scope.leave.leaveList1[index].showChild=false;
							 		 					var addFldLength=$scope.leave.leaveList1[index].additionalFieldsList.length;
							 		 					for(var i=0;i<addFldLength;i++){
							 		 					isEmailField=angular.property($scope.leave.leaveList1[index].additionalFieldsList[i].databaseColumnName=="contactNumHome");
							 		 					if(isEmailField){
							 		 						break;
							 		 					};
							 		 					};
							 		 					if(isEmailField){
							 		 						loopNumber=$scope.leave.leaveList1[index].additionalFieldsList.length-1;
							 		 					}else{
							 		 						loopNumber=$scope.leave.leaveList1[index].additionalFieldsList.length;
							 		 					};
							 		 					var addChildLength=$scope.leave.leaveList1[index].additionalChildList.length;
							 		 				for(var i=0;i< addChildLength;i++)
							 		 				{
							 		 		    	var fieldType=$scope.leave.leaveList1[index].additionalChildList[i].fieldType;
							 		 		    	var lookupValues=$scope.leave.leaveList1[index].additionalChildList[i].lookupValueList;
							 		 		    	if("Select to tag FMLA"==childKey)
							 		 	    		{
							 		 	    			if(!$scope.leave.leaveList1[index].newLeave.FMLATaggedName)
							 		 	    			   $scope.leave.leaveList1[index].showChild=false;
							 		 	    		};
							 		 		    	if(fieldType=="DROP_DOWN" && $scope.leave.leaveList1[index].showChild){
							 		 		    		
							 		 		    		
							 		 		    		if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){
							 		 		    			$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    			$scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 		 		    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    			$scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 		 		    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
							 		 		    			$scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 		 		    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
							 		 		    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 		 		    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    		else if("nomRelation"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
							 		 		    			$scope.leave.leaveList1[index].newLeave.nomRelation=$scope.nomRelation;
							 		 		    		$scope.leave.leaveList1[index].newLeave.nomRelationName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    		
							 		 		    		
							 		 		    		var selectTag=	applyLevService._buildDropDown($scope.leave.leaveList1[index].additionalChildList[i],lookupValues,isParent,$scope,index);
							 		 		    		$(selectTag).appendTo("#"+index+"childField"+i);
							 		 		    		}
							 		 		    		else if(fieldType=="TEXT_BOX_CHAR" && $scope.leave.leaveList1[index].showChild){ 
							 		 		    			
							 		 		    			if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    				$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 		 				    		$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 			    			$scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 			    			$scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
							 		 			    			$scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
							 		 			    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("nomName"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
							 		 			    			$scope.leave.leaveList1[index].newLeave.nomName=$scope.nomName;
							 		 			    			$scope.leave.leaveList1[index].newLeave.nomNameName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("fatherName"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
							 		 			    			$scope.leave.leaveList1[index].newLeave.fatherName=$scope.fatherName;
							 		 			    			$scope.leave.leaveList1[index].newLeave.fatherNameName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("nomAddress"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
							 		 			    			$scope.leave.leaveList1[index].newLeave.nomAddress=$scope.nomAddress;
							 		 			    			$scope.leave.leaveList1[index].newLeave.nomAddressName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("contactNumHome"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 			    			$scope.leave.leaveList1[index].newLeave.contactNumHome=$scope.atrri6;
							 		 			    		}
							 		 		    			
							 		 		    			var selectTag=	applyLevService._buildTextField($scope.leave.leaveList1[index].additionalChildList[i],isParent,$scope,index);
							 		 				    	$(selectTag).appendTo("#"+index+"childField"+i);
							 		 			    		}
							 		 		    			else if(fieldType=="TEXT_BOX_DATE" && $scope.leave.leaveList1[index].showChild){                     
							 		 		    				
							 		 		    				if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("childBirthDate"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName) {
							 		 		    					$scope.leave.leaveList1[index].newLeave.childBirthDate=$scope.childBirthDate;
							 		 		    					$scope.leave.leaveList1[index].newLeave.childBirthDateName=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				
							 		 		    				var selectTag=	applyLevService._buildTextDate($scope.leave.leaveList1[index].additionalChildList[i],$scope,isParent,index);
							 		 		    				$(selectTag).appendTo("#"+index+"childField"+i);
							 		 			    	}
							 		 		    			else if(fieldType=="RADIO_BUTTON" && $scope.leave.leaveList1[index].showChild){                       
							 		 		    				if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
							 		 		    					$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 		    				
							 		 		    				var selectTag=	applyLevService._buildRadioButton($scope.leave.leaveList1[index].additionalChildList[i],lookupValues,$scope,isParent,index);
							 		 		    				$(selectTag).appendTo("#"+index+"childField"+i);
							 		 			    	}
							 		 		    			else if("Flexi Holiday"==$scope.leave.leaveList1[index].newLeave.leaveTypeName){
							 		 		    				$scope.leave.leaveList1[index].showChild=false;
							 		 		    				$scope.leave.leaveList1[index].newLeave.noOfDays= 1;
							 		 		    				for(var i=0;i<$scope.leave.leaveList1[index].additionalFieldsList[0].lookupValueList.length;i++){
							 		 		    			if($scope.leave.leaveList1[index].additionalFieldsList[0].lookupValueList[i]==$scope.leave.leaveList1[index].newLeave.Attribute1_Value){
							 		 		    				$scope.leave.leaveList1[index].newLeave.startDate=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
							 		 		    				$scope.leave.leaveList1[index].newLeave.endDate=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
							 		 		    				$scope.leave.leaveList1[index].newLeave.reason=$scope.leave.leaveList1[index].additionalChildList[0].parentDivision;
							 		 		    				commonAppLevService.selectedDates[index*2]=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
		                	                                    commonAppLevService.selectedDates[(index*2)+1]=$scope.leave.leaveList1[index].additionalFieldsList[0].dateList[i];
							 		 		    				};
							 		 		    			
							 		 		    				};
							 		 		    			}
							 		 		    			else if("TEXT_LINK"==fieldType){                      
							 		 				    	
							 		 				    	if("Attribute1_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 				    	$scope.leave.leaveList1[index].newLeave.Attribute1_Value=$scope.atrri1;
							 		 				    	$scope.leave.leaveList1[index].newLeave.Attribute1_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute2_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute2_Value=$scope.atrri2;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute2_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute3_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn){ 
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute3_Value=$scope.atrri3;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute3_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute4_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) {
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute4_Value=$scope.atrri4;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute4_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 			    		else if("Attribute5_Name"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumn) { 
							 		 			    			$scope.leave.leaveList1[index].newLeave.Attribute5_Value=$scope.atrri5;
							 		 			    		$scope.leave.leaveList1[index].newLeave.Attribute5_Name=$scope.leave.leaveList1[index].additionalChildList[i].displayName;}
							 		 				    	
							 		 				    	var selectTag=	applyLevService._buildTextLink($scope.leave.leaveList1[index].additionalChildList[i],isParent,$scope,index);
							 		 				    	$(selectTag).appendTo("#"+index+"childField"+i);
							 		 				    	}
							 		 				    	else if(fieldType=="STATIC_TEXT" && $scope.leave.leaveList1[index].showChild){
							 		 					    		if("disclaimer1"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    			$scope.leave.leaveList1[index].showDsclmr1=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer1=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer2"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    			$scope.leave.leaveList1[index].showDsclmr2=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer2=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer3"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    				$scope.leave.leaveList1[index].showDsclmr3=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer3=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer4"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    					$scope.leave.leaveList1[index].showDsclmr4=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer4=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer5"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    						$scope.leave.leaveList1[index].showDsclmr5=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer5=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer6"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    							$scope.leave.leaveList1[index].showDsclmr6=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer6=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer7"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    								$scope.leave.leaveList1[index].showDsclmr7=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer7=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer8"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    									$scope.leave.leaveList1[index].showDsclmr8=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer8=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer9"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    										$scope.leave.leaveList1[index].showDsclmr9=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer9=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 				    			}else if("disclaimer10"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 					    											$scope.leave.leaveList1[index].showDsclmr10=true;
							 		 					    		$scope.leave.leaveList1[index].disclaimer10=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 				    			}else if("disclaimer11"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 																	$scope.leave.leaveList1[index].showDsclmr11=true;
							 		 						    	$scope.leave.leaveList1[index].disclaimer11=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		}else if("disclaimer12"==$scope.leave.leaveList1[index].additionalChildList[i].databaseColumnName){
							 		 																		$scope.leave.leaveList1[index].showDsclmr12=true;
							 		 						    	$scope.leave.leaveList1[index].disclaimer12=$scope.leave.leaveList1[index].additionalChildList[i].displayName;
							 		 					    		};
							 		 					      };
							 		 					};
							 		 				};
							 		 };
							 		 
							 		 
							 		 
							 		 
							 		 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//function to delete rows commited for phase 1----------------------------------------------------------------------							 		
		$scope.deleteRow = function(index) 
						{
						if($scope.leave.leaveList1.length>1)
							{
							
							//dependency check-------
							 Array.prototype.contains = function(obj) {
							 	    var i = this.length;
							 	    while (i--) {
							 	        if (this[i] == obj) {
							 	            return true;
							 	        }
							 	    }
							 	    return false;
							 	};
						   
							   var countId=$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId;
						       var defFlag=false;
						       var dFlag=false;
						       var ctId;
						       var depndcyMap=$scope.dependencyMap["key"+index];
						       for(var i=0;i<$scope.leave.leaveList1.length;i++){
						    	   ctId=$scope.leave.leaveList1[i].newLeave.countryLeaveTypeId;
						    	     if(undefined!=depndcyMap)
							    	 if(depndcyMap.contains(ctId)){
									  		   dFlag=true;
									  		   break;
									  	   }
							     }
						     for(var i=0;i<$scope.leave.leaveList1.length;i++){
						    	 var depMap=$scope.dependencyMap["key"+i];
								       if(undefined!=depMap)
								  	   if(depMap.contains(countId)){
								  		   defFlag=true;
								  		   
								  	   }
						     }
						     if(defFlag){
						  	   for(var m=0;m<$scope.leave.leaveList1.length;m++){
						  		$scope.depContainer=$scope.dependencyMap["key"+m];
						  		 for(var i=0;i<$scope.leave.leaveList1.length;i++){
						  			 if(!(undefined==$scope.depContainer)){
						  					 if($scope.depContainer.contains($scope.leave.leaveList1[i].newLeave.countryLeaveTypeId)){
						  						  $scope.leave.leaveList1[m].dependencyError=" " ;
						  						  var field=angular.element($("#leaveTypeName_"+m));
						           				 field.removeClass('dirty-field');
						  			  	          $scope.leave.leaveList1[m].check2=true;
						  			  	        $scope.dependencyflag=true;   
						  			  	         }
						  					   if($scope.depContainer.length==0){   //////////creating issue while deleting
						  			  				 $scope.dependencyflag=true;   
						  			  			   $scope.leave.leaveList1[i].dependencyError=" ";
						  			  			 var field=angular.element($("#leaveTypeName_"+i));
						          				 field.removeClass('dirty-field');
						  			  		   } 
						  				 }
						  		 }
						     }
						     }
						   //-------------------------------------------------
								$scope.leave.leaveList1[index].errorMsg="";
								$scope.errorMsg = "";
								
								if(!($scope.leave.leaveList1[index].newLeave.startDate==undefined)){
									
									var tempDate = applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.startDate);
									
									if(index==0) $("#day"+ tempDate._d.getTime()).removeClass("hoverDivStart");
									if($("#day"+ tempDate._d.getTime()).hasClass("hoverDivStart"))
									if(commonAppLevService.selectedDates.length>1)
						      	////to check for date hoverrrrr
							             var stDate=$scope.leave.leaveList1[index].newLeave.startDate;
						            	 for(var i=0; i<commonAppLevService.selectedDates.length;i++)
								    	 {  
								    		 if (!((index*2)==i  || ((index*2)+1)==i))
								    		 if(stDate==(commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")){
								    			 if($("#day"+ tempDate._d.getTime()).hasClass("hoverDivStart")){
							    					 break;
							    					   }
									    			 else if(!($("#day"+ tempDate._d.getTime()).hasClass("hoverDivStart"))){
								    				 $("#day"+ tempDate._d.getTime()).addClass("hoverDivStart");
								    				 break;
								    			 }
								    		 }else{
								    			 $("#day"+ tempDate._d.getTime()).removeClass("hoverDivStart");
								    		 }
								    		/* if (!((index*2)==i  || ((index*2)+1)==i))
								    		 if(!($scope.leave.leaveList1[index].newLeave.startDate==(commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")))
								    		 {
								    			 $("#day"+ tempDate._d.getTime()).removeClass("hoverDivStart");
								    		 }*/
								    		 
								    	 }
									tempDate = tempDate.add(1,'d');
			
									while ( $( "#day"+ tempDate._d.getTime() ).hasClass("hoverDiv")) {
					    			 var tempTimeStamp = tempDate._d.getTime();
					    			 for(var i=0;i<$scope.leave.leaveList1.length;i++){
					    				var strt=applyLevService.convertToMomentObj($scope.leave.leaveList1[i].newLeave.startDate);
										var end=applyLevService.convertToMomentObj($scope.leave.leaveList1[i].newLeave.endDate);
										 if (!($scope.leave.leaveList1[i].newLeave.startDate==$scope.leave.leaveList1[index].newLeave.startDate && $scope.leave.leaveList1[i].newLeave.endDate==$scope.leave.leaveList1[index].newLeave.endDate))
					    				 if(tempDate._d.getTime()>=strt._d.getTime() && tempDate._d.getTime()<=end._d.getTime()){
							    			 if($("#day"+tempTimeStamp).hasClass("hoverDiv")){
					    						// do nothing
							    				 break;
					    					   }
							    			 else if(!($("#day"+ tempDate._d.getTime()).hasClass("hoverDiv"))){
							    				 $("#day"+ tempTimeStamp).addClass("hoverDiv");
							    				 break;
							    			 }
							    			 }else{
							    				 $("#day"+ tempTimeStamp).removeClass("hoverDiv");
							    			 } 
					    			 }
					    			tempDate = tempDate.add(1,'d');
							
								};
							};
								if(!($scope.leave.leaveList1[index].newLeave.endDate==undefined)){
									var tempDate = applyLevService.convertToMomentObj($scope.leave.leaveList1[index].newLeave.endDate);
									if(index==0)$("#day"+ tempDate._d.getTime()).removeClass("hoverDivEnd");
									if($("#day"+ tempDate._d.getTime()).hasClass("hoverDivEnd"))
										if(commonAppLevService.selectedDates.length>1)
									    	 for(var i=0; i<commonAppLevService.selectedDates.length;i++)
									    	 {
									    		 if (!((index*2)==i  || ((index*2)+1)==i))
									    		 if($scope.leave.leaveList1[index].newLeave.endDate==(commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")){
									    			 
									    		/*	 if(!($("#day"+ tempDate._d.getTime()).hasClass("hoverDivEnd")) ){
									    				 $("#day"+ tempDate._d.getTime()).addClass("hoverDivEnd");
									    				 break;
									    			 }*/
									    			 if($("#day"+ tempDate._d.getTime()).hasClass("hoverDivEnd")){
								    					 break;
								    					   }
										    			 else if(!($("#day"+ tempDate._d.getTime()).hasClass("hoverDivEnd"))){
									    				 $("#day"+ tempDate._d.getTime()).addClass("hoverDivEnd");
									    				 break;
									    			 }
									    			
											     }else{
											        $("#day"+ tempDate._d.getTime()).removeClass("hoverDivEnd");
											    	
											    		 }
									    	
									    		 
									    	 };
									tempDate = tempDate.add(-1,'d');
									 while ( $("#day"+ tempDate._d.getTime() ).hasClass("hoverDiv")) {
								    	 var tempTimeStamp = tempDate._d.getTime();
								    	 for(var i=0;i<$scope.leave.leaveList1.length;i++){
							    				var strt=applyLevService.convertToMomentObj($scope.leave.leaveList1[i].newLeave.startDate);
												var end=applyLevService.convertToMomentObj($scope.leave.leaveList1[i].newLeave.endDate);
												 if (!($scope.leave.leaveList1[i].newLeave.startDate==$scope.leave.leaveList1[index].newLeave.startDate && $scope.leave.leaveList1[i].newLeave.endDate==$scope.leave.leaveList1[index].newLeave.endDate))
												if(tempDate._d.getTime()>=strt._d.getTime() && tempDate._d.getTime()<=end._d.getTime()){
										    		 if($("#day"+ tempTimeStamp).hasClass("hoverDiv")){
								    						// do nothing
										    				 break;
								    					   }
										    			 else if(!($("#day"+ tempDate._d.getTime()).hasClass("hoverDiv"))){
										    				 $("#day"+ tempDate._d.getTime()).addClass("hoverDiv");
										    				 break;
										    			 }
							    				  }else{
								                  $("#day"+ tempTimeStamp).removeClass("hoverDiv");
								                  }
							    			 }
								
								    	tempDate = tempDate.add(-1,'d');
									};
                            };
								$scope.leave.leaveList1.splice(index,1);
								$scope.counter=$scope.counter-1;
								commonAppLevService.rowIndex=$scope.counter;
								commonAppLevService.selectedDates.splice((index*2)+1 , 1); //1,3,5,7
								commonAppLevService.selectedDates.splice(index*2 , 1);   //0,2,4,6
						
							    ///////////////////////for id change
							
								for(var i=0;i<$scope.leave.leaveList1.length;i++){
								 $scope.leave.leaveList1[i].newLeave.id=i;
							    };
							    ///////////////ends here
								//	 $scope.leave.leaveList1[$scope.leave.leaveList1.length-1].newLeave.isDisabled = false;
								 ////////////for last row additional fields
					
									$scope.enableRow($scope.leave.leaveList1.length-1);
						     dragDropServices.deleteRowFile(index); //added by priti
							}
							else
							{
								$scope.leave.leaveList1[attr.index].errorMsg="You cannot delete all the rows from the table!";
							};
							
							
						///////////////////dependency of leaves check
						if(dFlag){
							$scope.dependencyCheck(index);
						}else{
							for(var j=index;j<$scope.leave.leaveList1.length;j++){
								
								$scope.dependencyMap["key"+j]=$scope.dependencyMap["key"+(j+1)];
							}
							 delete $scope.dependencyMap["key"+$scope.leave.leaveList1.length];
							
						}
						//show add another
							 if($scope.leave.leaveList1.length<4){
						    	 $("#saveLev").show();
						     }
							
						};
						
        
        $scope.validateReason=function(index){
        	if($("#reason_"+index).hasClass("dirty-field") && !(''==$scope.leave.leaveList1[index].serverErrMsg))
        		$scope.leave.leaveList1[index].serverErrMsg='';
        };        
        
        
        
//validate leave rows before submit	---------------------------------------------------		
      /*  isAddrValid(cnt) && && isReasonFilled(cnt) */
$scope.disableSubmitAll=function(){
	  var disableButton = true;
      for (var cnt = 0; cnt < $scope.leave.leaveList1.length; cnt++) {
        if (isErrMgsNull(cnt) && isAddrValid(cnt) &&  isDrpDwnValid(cnt) && isEmailVld(cnt) && isMaternityVld(cnt) && isLwpVld(cnt) && isDisclaimerAcptd(cnt) && $scope.dependencyflag && isReasonFilled(cnt)) {
        	disableButton = false;
        } else {
        	disableButton=true;
        	break;
        };
      };
      return disableButton;
	
};		

//Method to validate clientside errorMsg , server errorMsg , start date error message and end date error message are not their------------------
isReasonFilled=function(cnt){
	if(!(''==$scope.leave.leaveList1[cnt].newLeave.reason|| undefined==$scope.leave.leaveList1[cnt].newLeave.reason))
		return true;
	else
		return false;
};


isErrMgsNull=function(cnt){
	if(		   (''==$scope.leave.leaveList1[cnt].errorMsg || undefined==$scope.leave.leaveList1[cnt].errorMsg)
    		&& (''==$scope.leave.leaveList1[cnt].serverErrMsg || undefined==$scope.leave.leaveList1[cnt].serverErrMsg)
    		&& (''==$scope.leave.leaveList1[cnt].newLeave.errorMsg || undefined==$scope.leave.leaveList1[cnt].newLeave.errorMsg) 
    		&& (''==$scope.leave.leaveList1[cnt].errorEDate || undefined==$scope.leave.leaveList1[cnt].errorEDate)
    		&& (''==$scope.leave.leaveList1[cnt].errorSDate || undefined==$scope.leave.leaveList1[cnt].errorSDate)
    		
			)
	return true;
	else 
		return false;
};

isAddrValid=function(cnt){
	if(!(''== $scope.leave.leaveList1[cnt].newLeave.contactNumCell ||  undefined==$scope.leave.leaveList1[cnt].newLeave.contactNumCell)
    && !(''== $scope.leave.leaveList1[cnt].newLeave.contactAddress ||  undefined==$scope.leave.leaveList1[cnt].newLeave.contactAddress))
		return true;
	else
		return false;
};

isDrpDwnValid=function(cnt){
	
	if(!('Select'==$scope.leave.leaveList1[cnt].newLeave.leaveTypeName)
	&& (isAttr1Vld(cnt) && isAttr2Vld(cnt) && isAttr3Vld(cnt) && isAttr4Vld(cnt) && isAttr5Vld(cnt))
	) 
		return true;
	else 
		return false;
		
};
isAttr1Vld=function(cnt){
	var isValid=true;
	if( !($scope.leave.leaveList1[cnt].newLeave.Attribute1_Name==null))
		{
		if(!("Select"==$scope.leave.leaveList1[cnt].newLeave.Attribute1_Value)
				&& !(null==$scope.leave.leaveList1[cnt].newLeave.Attribute1_Value)
				&& !(''==$scope.leave.leaveList1[cnt].newLeave.Attribute1_Value))
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isAttr2Vld=function(cnt){
	var isValid=true;
	if( !($scope.leave.leaveList1[cnt].newLeave.Attribute2_Name==null))
		{
		if(!("Select"==$scope.leave.leaveList1[cnt].newLeave.Attribute2_Value)
				&& !(null==$scope.leave.leaveList1[cnt].newLeave.Attribute2_Value)
				&& !(''==$scope.leave.leaveList1[cnt].newLeave.Attribute2_Value))
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isAttr3Vld=function(cnt){
	var isValid=true;
	if( !($scope.leave.leaveList1[cnt].newLeave.Attribute3_Name==null))
		{
		if(!("Select"==$scope.leave.leaveList1[cnt].newLeave.Attribute3_Value)
				&& !(null==$scope.leave.leaveList1[cnt].newLeave.Attribute3_Value)
				&& !(''==$scope.leave.leaveList1[cnt].newLeave.Attribute3_Value))
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isAttr4Vld=function(cnt){
	var isValid=true;
	if( !($scope.leave.leaveList1[cnt].newLeave.Attribute4_Name==null))
		{
		if(!("Select"==$scope.leave.leaveList1[cnt].newLeave.Attribute4_Value)
				&& !(null==$scope.leave.leaveList1[cnt].newLeave.Attribute4_Value)
				&& !(''==$scope.leave.leaveList1[cnt].newLeave.Attribute4_Value))
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isAttr5Vld=function(cnt){
	var isValid=true;
	if( !($scope.leave.leaveList1[cnt].newLeave.Attribute5_Name==null))
		{
		if(!("Select"==$scope.leave.leaveList1[cnt].newLeave.Attribute5_Value)
				&& !(null==$scope.leave.leaveList1[cnt].newLeave.Attribute5_Value)
				&& !(''==$scope.leave.leaveList1[cnt].newLeave.Attribute5_Value))
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};

isEmailVld=function(cnt){
	var isValid=true;
	var elem=document.getElementsByName("contactNumHome_Parent_"+cnt).length;
	if(elem==0)
		var elem=document.getElementsByName("contactNumHome_"+cnt).length;
if(!(elem==0))
	 {
	    if(!(null==$scope.leave.leaveList1[cnt].newLeave.contactNumHome)
	    		&& !(''==$scope.leave.leaveList1[cnt].newLeave.contactNumHome)
	    		&& applyLevService.isValidEmailFrmt($scope.leave.leaveList1[cnt].newLeave.contactNumHome))
	 isValid= true;
	else 
	isValid= false;
	 }else{
		 isValid=true;
	 };
return isValid;
};

isMaternityVld=function(cnt){
	var isValid=true;
	if(("56"==$scope.leave.leaveList1[cnt].newLeave.countryLeaveTypeId || "808"==$scope.leave.leaveList1[cnt].newLeave.countryLeaveTypeId) && "Childbirth"==$scope.leave.leaveList1[cnt].newLeave.Attribute1_Value){
		if($scope.isMtrntyAccptd)
			isValid=true;
		else 
			isValid=false;
	}else {
		isValid=true;
	};
	return isValid;
};

isLwpVld=function(cnt){
	var isValid=true;
	var leaveId=$scope.leave.leaveList1[cnt].newLeave.countryLeaveTypeId;
	if(("57"==leaveId ||"260"==leaveId)
	 && ($scope.leave.leaveList1[cnt].newLeave.noOfDays >=30)
			&& "Leave Without Pay"==$scope.leave.leaveList1[cnt].newLeave.leaveTypeName){
		if($scope.isLwpAccptd)
			isValid=true;
		else 
			isValid=false;
	}else {
		isValid=true;
	};
	return isValid;
};

isDisclaimerAcptd=function(cnt){
	
if((isDsclmr5Vld(cnt) && isDsclmr6Vld(cnt) && isDsclmr7Vld(cnt) && isDsclmr8Vld(cnt) && isDsclmr11Vld(cnt) && isDsclmr12Vld(cnt))) 
		return true;
	else 
		return false;
		
};
isDsclmr5Vld=function(cnt){
	var isValid=true;
	if( ($scope.leave.leaveList1[cnt].showDsclmr5))
		{
		if($scope.leave.leaveList1[cnt].defaultDsclmrVal5)
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isDsclmr6Vld=function(cnt){
	var isValid=true;
	if( ($scope.leave.leaveList1[cnt].showDsclmr6))
		{
		if($scope.leave.leaveList1[cnt].defaultDsclmrVal6)
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isDsclmr7Vld=function(cnt){
	var isValid=true;
	if(($scope.leave.leaveList1[cnt].showDsclmr7))
		{
		if($scope.leave.leaveList1[cnt].defaultDsclmrVal7)
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isDsclmr8Vld=function(cnt){
	var isValid=true;
	if(($scope.leave.leaveList1[cnt].showDsclmr8))
		{
		if($scope.leave.leaveList1[cnt].defaultDsclmrVal8)
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};

isDsclmr11Vld=function(cnt){
	var isValid=true;
	if( ($scope.leave.leaveList1[cnt].showDsclmr11))
		{
		if($scope.leave.leaveList1[cnt].defaultDsclmrVal11)
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};
isDsclmr12Vld=function(cnt){
	var isValid=true;
	if( ($scope.leave.leaveList1[cnt].showDsclmr12))
		{
		if($scope.leave.leaveList1[cnt].defaultDsclmrVal12)
			isValid= true;
		else 
			isValid= false;
		}else{
			isValid=true;
		};
		return isValid;
};




						
//function to submit leaves---------------------------------------------------------	
$scope.submitLeave = function() 
{
		$scope.disableSubmit=true;
		$rootScope.processing=true;
				if(!$scope.isAmend){
						var sendData = [];
						angular.forEach($scope.leave.leaveList1, function(value, key) 
						{
						sendData.push(value.newLeave);
						});
						//for phase 2 send sendData through uploadLeaveFiles method
						dragDropServices.submitLeave($scope);
					
				}else
				{
				var resp = $http.post('/leaverest/rest/amendleave?cd=' + (new Date()).getTime(),$scope.amendObj)
					.then(function(response)
					{
						for (var i=0; i < response.data.length ; i++){
							var code=response.data[i].code;
							if("422"==code){
							$scope.disableSubmit=false;
							$scope.leave.leaveList1[i].errorMsg=response.data[i].fieldErrors[0].message;
							$rootScope.processing=false;
                           /* var errorField=angular.element($("#"+response.data[i].fieldErrors[0].field+"_"+i));
                            errorField.addClass('dirty-field');*/
                         }else if("200"==code){
                        	 $rootScope.processing=false;
                        	 $scope.disableSubmit=true;
								$scope.leave.leaveList1[i].errorMsg='';
								$scope.leave.leaveList1[i].serverErrMsg='';
								$scope.submitLeaveResponse = response.data[i].message;
								if(!($scope.submitLeaveResponse==undefined)){
									$scope.outputMesg=$scope.submitLeaveResponse;
									$("#archiveSuccessModal2").modal('show');
									};
							};
						};
					}); //server response ends---
				
				};
};

//method to save as draft
$scope.saveDraftReq=function(){
	var isValid=true;
	
	var sendData = [];
	for (var i=0; i < $scope.leave.leaveList1.length ; i++)
		{
			
			if(('Select'==$scope.leave.leaveList1[i].newLeave.leaveTypeName)){
				$scope.leave.leaveList1[i].draftErr="Please ensure that leave type is selected.";
				var errorField=angular.element($("#leaveTypeName_"+i));
		        errorField.addClass('dirty-field');
		        isValid=false;
		        
			};
			if(!isValid)
				break;
		sendData.push($scope.leave.leaveList1[i].newLeave);
		};
if(isValid)
	{
	$rootScope.processing=true;
var submitResp = $http.post('/leaverest/rest/saveAsDraft/?cd=' + (new Date()).getTime(),sendData);
submitResp.then(function(response)
{
  for (var i=0; i < response.data.length ; i++){
		var code=response.data[i].code;
		if("422"==code){
		
		$rootScope.processing=false;
		$scope.leave.leaveList1[i].serverErrMsg=response.data[i].fieldErrors[0].message;
        var errorField=angular.element($("#"+response.data[i].fieldErrors[0].field+"_"+i));
        errorField.addClass('dirty-field'); //commited for temporary reason
     }else if("200"==code){
    	 
    	 $rootScope.processing=false;
			$scope.leave.leaveList1[i].errorMsg='';
			$scope.leave.leaveList1[i].serverErrMsg='';
			$scope.submitLeaveResponse = response.data[i].message;
			if(!($scope.submitLeaveResponse==undefined)){
				$scope.outputMesg=$scope.submitLeaveResponse;
				$("#archiveSuccessModal2").modal('show');
				};
	  };
  };
/*
	  for (var i=0; i < response.data.length ; i++){
			var code=response.data[i].code;
			if("422"==code){
				
				$rootScope.processing=false;
				$scope.leave.leaveList1[i].serverErrMsg=response.data[i].fieldErrors[0].message;
		        var errorField=angular.element($("#"+response.data[i].fieldErrors[0].field+"_"+i));
		        errorField.addClass('dirty-field'); //commited for temporary reason
		     }else if("200"==code){
		            $rootScope.processing=false;
					$scope.leave.leaveList1[i].errorMsg='';
					$scope.leave.leaveList1[i].serverErrMsg='';
			//	$scope.submitLeaveResponse = response.data[i].message;
				if(undefined!=response.data[0].success.header)
				$scope.outputMesgH=response.data[0].success.header;
				if(undefined!=response.data[0].success.footer)
					$scope.outputMesgF=response.data[0].success.footer;
				if(undefined!=response.data[0].success.body){
					var body=response.data[0].success.body;
					var bodyLength=body.length;
					if(bodyLength>0){
					if(bodyLength>=1)
						 $scope.outputMesg1=body[0];
					if(bodyLength>=2)
						 $scope.outputMesg2=body[1];
					if(bodyLength>=3)
						 $scope.outputMesg3=body[2];
					if(bodyLength>=4)
						 $scope.outputMesg4=body[3];
					$("#archiveSuccessModal").modal('show');
					}
				}
		};
	  };*/
	
}); //server response ends---
};
};
//method to redirect to request list after apply				
$scope.redirectReqList=function(){
					$('#archiveSuccessModal').modal('hide');
					var myEl = angular.element( document.querySelector( '.modal-backdrop' ) );
					myEl.remove();
					$rootScope.processing=false;
					var myE2=angular.element(document.getElementById("entireBody"));
					myE2.removeClass("modal-open");
					commonAppLevService.selectedDates=[];
					commonAppLevService.quickDate=[];
					dragDropServices.resetFiles(); //added to reset files uploaded in js file
					$location.path('/levReqList'); 
				};
				
				$scope.changeAddressTab=function(id)
				{
				                 	
					
					$scope.tabSelected=id;
					if(id=="present" && $scope.defaultAddress=="YES"){
					    for(var i=0;i<=$scope.counter;i++){
                 		$scope.leave.leaveList1[i].newLeave.contactAddress=document.getElementById('presentAdd').value;
                 		$scope.leave.leaveList1[i].newLeave.contactNumCell=document.getElementById('presentMobNo').value;
					    }
                 	}
                 	else if(id=="permanent" && $scope.defaultAddress=="YES"){
                 		  for(var i=0;i<=$scope.counter;i++){
                 		  $scope.leave.leaveList1[i].newLeave.contactAddress=document.getElementById('permanentAdd').value;
                 		  $scope.leave.leaveList1[i].newLeave.contactNumCell=document.getElementById('permanentMobNo').value;
                 		  }
                 	}
                 	else if(id=="other" && $scope.defaultAddress=="YES"){
                 		 for(var i=0;i<=$scope.counter;i++){
                 		 $scope.leave.leaveList1[i].newLeave.contactAddress=document.getElementById('otherAdd').value;
                 		 $scope.leave.leaveList1[i].newLeave.contactNumCell=document.getElementById('otherMobNo').value;
                 		 }
                 	};
				};				
				
				
$scope.changeAddress=function(id)
{
                 	if(id=="present" && $scope.defaultAddress=="YES"){
                 		for(var i=0;i<=$scope.counter;i++){
                 		$scope.leave.leaveList1[i].newLeave.contactAddress=document.getElementById('presentAdd').value;
                 		$scope.leave.leaveList1[i].newLeave.contactNumCell=document.getElementById('presentMobNo').value;
                 		}
                 	}
                 	else if(id=="permanent" && $scope.defaultAddress=="YES"){
                 		for(var i=0;i<=$scope.counter;i++){
                 		$scope.leave.leaveList1[i].newLeave.contactAddress=document.getElementById('permanentAdd').value;
                 		$scope.leave.leaveList1[i].newLeave.contactNumCell=document.getElementById('permanentMobNo').value;
                 	}
                 	}
                 	else if(id=="other" && $scope.defaultAddress=="YES"){
                 		for(var i=0;i<=$scope.counter;i++){
                 		$scope.leave.leaveList1[i].newLeave.contactAddress=document.getElementById('otherAdd').value;
                 		$scope.leave.leaveList1[i].newLeave.contactNumCell=document.getElementById('otherMobNo').value;
                 	}
                 	};
};
 //method commited for phase 1-----------------------------------                
$scope.manualAddress=function(){
                 	if($scope.defaultAddress=="NO"){
                 		for(var i=0;i<=$scope.counter;i++){
                 			if(!$scope.leave.leaveList1[i].isManualAddress){
                 				 $scope.leave.leaveList1[i].newLeave.contactAddress="";
                                 $scope.leave.leaveList1[i].newLeave.contactNumCell="";
                 			}
                 		}
                
                 if($scope.counter>0){
                	
                	for(var count=$scope.counter;count>=0;count--){
                		 $scope.leave.leaveList1[count].isManualAddress=true;
                   	    var inputMobile=angular.element(document.querySelector('#manualMobileNo_'+count));
                   		inputMobile.attr('required',false);
                   		$compile(inputMobile)($scope);
                   		var inputAdd=angular.element(document.querySelector('#manualAddress_'+count));
                   		inputAdd.attr('required',false);
                   		
                   		$compile(inputAdd)($scope); 
                	 }
              	
                 }else{
                    $scope.leave.leaveList1[$scope.counter].isManualAddress=true;
              	    var inputMobile=angular.element(document.querySelector('#manualMobileNo_'+$scope.counter));
              		inputMobile.attr('required',false);
              		$compile(inputMobile)($scope);
              		var inputAdd=angular.element(document.querySelector('#manualAddress_'+$scope.counter));
              		inputAdd.attr('required',false);
              		
              		$compile(inputAdd)($scope);
                 }
                 
             }else{
                 if($scope.counter>0){
                         	
                         	for(var count=0;count<=$scope.counter;count++){
                         		$scope.leave.leaveList1[count].isManualAddress=false;
                     			var inputMobile=angular.element(document.querySelector('#manualMobileNo_'+count));
                         		inputMobile.removeAttr('ng-required');
                         		$compile(inputMobile)($scope);
                         		var inputAdd=angular.element(document.querySelector('#manualAddress_'+count));
                         		inputAdd.removeAttr('ng-required');
                         		$compile(inputAdd)($scope);
                     			
                         	 }
                         	  for(var i=0;i<=$scope.counter;i++){
                        			if(!$scope.leave.leaveList1[i].isManualAddress){
                        				if($scope.addressList[0].address=="" || $scope.addressList[0].mobilePhone=="" || undefined==$scope.addressList[0].mobilePhone || undefined==$scope.addressList[0].address){
                        					$scope.leave.leaveList1[i].newLeave.contactAddress=angular.copy($scope.leave.leaveList1[$scope.counter-1].newLeave.contactAddress);
                        					 $scope.leave.leaveList1[i].newLeave.contactNumCell=angular.copy($scope.leave.leaveList1[$scope.counter-1].newLeave.contactNumCell);
           							}else{
           								$scope.leave.leaveList1[i].newLeave.contactAddress=angular.copy($scope.addressList[0].address);
           							 $scope.leave.leaveList1[i].newLeave.contactNumCell=angular.copy($scope.addressList[0].mobilePhone);
           							}
                        				/* $scope.leave.leaveList1[i].newLeave.contactAddress=angular.copy($scope.addressList[0].address);
              						 $scope.leave.leaveList1[i].newLeave.contactNumCell=angular.copy($scope.addressList[0].mobilePhone);*/
                        			}
                        		}
                       	
                   }else{
                 		$scope.leave.leaveList1[$scope.counter].isManualAddress=false;
                 	//	changeAddress();
                 		if(!($('#manualMobileNo_'+$scope.counter).attr("ng-required")==undefined) && !($('#manualAddress_'+$scope.counter).attr("ng-required")==undefined))
                 			{
                 			var inputMobile=angular.element(document.querySelector('#manualMobileNo_'+$scope.counter));
                     		inputMobile.removeAttr('ng-required');
                     		$compile(inputMobile)($scope);
                     		var inputAdd=angular.element(document.querySelector('#manualAddress_'+$scope.counter));
                     		inputAdd.removeAttr('ng-required');
                     		$compile(inputAdd)($scope);
                     		
                     	/*	document.getElementById("manualMobileNo_"+$scope.counter).required = false;
                     		document.getElementById("manualAddress_"+$scope.counter).required = false;*/
                     		
                 			}
                          }
                        if(!$scope.leave.leaveList1[$scope.counter].isManualAddress){
                        	if($scope.addressList[0].address=="" || $scope.addressList[0].mobilePhone=="" || undefined==$scope.addressList[0].mobilePhone || undefined==$scope.addressList[0].address){
								 $scope.leave.leaveList1[$scope.counter].newLeave.contactAddress=angular.copy($scope.leave.leaveList1[$scope.counter-1].newLeave.contactAddress);
								 $scope.leave.leaveList1[$scope.counter].newLeave.contactNumCell=angular.copy($scope.leave.leaveList1[$scope.counter-1].newLeave.contactNumCell);
							}else{
								 $scope.leave.leaveList1[$scope.counter].newLeave.contactAddress=angular.copy($scope.addressList[0].address);
								 $scope.leave.leaveList1[$scope.counter].newLeave.contactNumCell=angular.copy($scope.addressList[0].mobilePhone);
							}
      				       /*$scope.leave.leaveList1[$scope.counter].newLeave.contactAddress=angular.copy($scope.addressList[0].address);
					       $scope.leave.leaveList1[$scope.counter].newLeave.contactNumCell=angular.copy($scope.addressList[0].mobilePhone);
      			     */
                        }
                        
               };
};

$scope.manualeditAddress=function(rowId){
 	if($scope.defaultAddress=="NO"){
 		$scope.leave.leaveList1[rowId].isManualAddress=true;
 	
 		var inputMobile=angular.element(document.querySelector('#manualMobileNo_'+rowId));
 		inputMobile.attr('ng-required',true);
 		$compile(inputMobile)($scope);
 		var inputAdd=angular.element(document.querySelector('#manualAddress_'+rowId));
 		inputAdd.attr('ng-required',true);
 		$compile(inputAdd)($scope);
 	}else{
 		$scope.leave.leaveList1[rowId].isManualAddress=false;
 		//changeAddress();
 		if(!($('#manualMobileNo_'+rowId).attr("ng-required")==undefined) && !($('#manualAddress_'+rowId).attr("ng-required")==undefined))
 			{
 			var inputMobile=angular.element(document.querySelector('#manualMobileNo_'+rowId));
     		inputMobile.removeAttr('ng-required');
     		$compile(inputMobile)($scope);
     		var inputAdd=angular.element(document.querySelector('#manualAddress_'+rowId));
     		inputAdd.removeAttr('ng-required');
     		$compile(inputAdd)($scope);
 			}
 	};
}
 $scope.changeCollapseOne=function()
 {
                 	if($("#collapseOne").hasClass("in")){
                 		$("#collapseOneHeader").removeClass("glyphicon glyphicon-chevron-up");
                 		$("#collapseOneHeader").addClass("glyphicon glyphicon-chevron-down");
                 		}
                 	else{
                 		$("#collapseOneHeader").removeClass("glyphicon glyphicon-chevron-down");
                 		
                 		$("#collapseOneHeader").addClass("glyphicon glyphicon-chevron-up");}
};
$scope.changeCollapseTwo=function()
{
                 	if($("#collapseTwo").hasClass("in")){
                 		$("#collapseTwoHeader").removeClass("glyphicon glyphicon-chevron-up");
                 		$("#collapseTwoHeader").addClass("glyphicon glyphicon-chevron-down");
                 		}
                 	else{
                 		$("#collapseTwoHeader").removeClass("glyphicon glyphicon-chevron-down");
                 		
                 		$("#collapseTwoHeader").addClass("glyphicon glyphicon-chevron-up");}
};
$scope.changeCollapseAmend=function()
{
                 	if($("#collapseAmend").hasClass("in")){
                 		$("#collapseAmendHeader").removeClass("glyphicon glyphicon-chevron-up");
                 		$("#collapseAmendHeader").addClass("glyphicon glyphicon-chevron-down");
                 		}
                 	else{
                 		$("#collapseAmendHeader").removeClass("glyphicon glyphicon-chevron-down");
                 		
                 		$("#collapseAmendHeader").addClass("glyphicon glyphicon-chevron-up");}
};				
				
				
$scope.getNominationForm=function(index)
{
	$scope.leave.leaveList1[index].newLeave.fileType='pdf';
	if(("56"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId || "808"==$scope.leave.leaveList1[index].newLeave.countryLeaveTypeId))
	{
		$scope.maternityFormData=$scope.leave.leaveList1[index].newLeave;
	$http.get('/leaverest/rest/maternityForm?cd=' + (new Date()).getTime(), 
	{
		params:$scope.leave.leaveList1[index].newLeave
	}).then(function(response)
	{
		
		if(response.data.code==='200') {
			commonAppLevService.maternityDetails=response.data.success;
			$scope.dataObj1=commonAppLevService.maternityDetails.para_1;
			$scope.dataObj2=commonAppLevService.maternityDetails.para_2;
			$scope.variable1=response.data.message;
			$scope.isMaternity=true;
	
		};
	});
}else{
$scope.lwpFormData=$scope.leave.leaveList1[index].newLeave;
	$http.get('/leaverest/rest/lwpReport?cd=' + (new Date()).getTime(), 
	{
		params:$scope.leave.leaveList1[index].newLeave
	}).then(function(response)
	{
		
		if(response.data.code==='200') {
			commonAppLevService.lwpDetails=response.data.success;
			$scope.para_1=commonAppLevService.lwpDetails.para_1;
			$scope.para_2=commonAppLevService.lwpDetails.para_2;
			$scope.para_3=commonAppLevService.lwpDetails.para_3;
			$scope.para_4=commonAppLevService.lwpDetails.para_4;
			$scope.para_5=commonAppLevService.lwpDetails.para_5;
			$scope.para_6=commonAppLevService.lwpDetails.para_6;
			$scope.variable1=commonAppLevService.lwpDetails.fileName;
			$scope.lwpEmpName=commonAppLevService.lwpDetails.name;
			$scope.lwpEmpNo=commonAppLevService.lwpDetails.code;
			$scope.isLwp=true;
	
		};
	});

	
};
};



$scope.printLWPForm=function(){
	
	$http.get('/leaverest/rest/downloadLwpReport?cd=' + (new Date()).getTime(), 
			{
				params:$scope.lwpFormData
			}).then(function(response)
			{
				$scope.variable1=response.data.success.fileName;
				$window.open("/leaverest/rest/fetchReport?reportName="+$scope.variable1+"&reportType=lwp&fileType=pdf",'_blank');	
			
			});
	

};

$scope.printMaternityForm=function(){
	
	$http.get('/leaverest/rest/downloadMaternityForm?cd=' + (new Date()).getTime(), 
			{
				params:$scope.maternityFormData
			}).then(function(response)
			{
				$scope.variable1=response.data.success.fileName;
				$window.open("/leaverest/rest/fetchReport?reportName="+$scope.variable1+"&reportType=maternity&fileType=pdf",'_blank');	
			
			});
	

};

$scope.changeMaternityFlg=function(){
	$scope.isMaternity=false;
};

$scope.acceptMaternity=function(){
	$scope.maternityAccptMsg="Printout of nomination form needs to be submitted to HR along with Medical Certificate. Are you sure you want to continue?";
	$("#maternityModal").modal('show');
};

$scope.acceptMtrntyCnfm=function(){
	//$scope.isMtrntyAccptd=true;
	$scope.maternityAccptdMsg="The Nomination form is submitted successfully.";
	/*var myEl = angular.element( document.querySelector( '.modal-backdrop' ) );
	myEl.remove();
	var myE2=angular.element(document.getElementById("entireBody"));
	myE2.removeClass("modal-open");*/
	$("#maternityAcptdModal").modal('show');
	//$scope.isMaternity=false;
	
};
		
$scope.acceptdMtrntyCnfm=function(){
	$scope.isMtrntyAccptd=true;
	$scope.isMaternity=false;
	/*var myEl = angular.element( document.querySelector( '.modal-backdrop' ) );
	myEl.remove();
	var myE2=angular.element(document.getElementById("entireBody"));
	myE2.removeClass("modal-open");*/
};




$scope.changeLwpFlg=function(){
	$scope.isLwp=false;
};

$scope.acceptLwp=function(){
	$scope.lwpAccptMsg="Printout of LWP form needs to be submitted to HR. Are you sure you want to continue?";
	$("#lwpModal").modal('show');
};

$scope.acceptLwpCnfm=function(){
	//$scope.isLwpAccptd=true;
	$scope.lwpAccptdMsg="The LWP undertaking is submitted successfully.";
/*	var myEl = angular.element( document.querySelector( '.modal-backdrop' ) );
	myEl.remove();
	var myE2=angular.element(document.getElementById("entireBody"));
	myE2.removeClass("modal-open");*/
	$("#lwpAcptdModal").modal('show');
	//$scope.isMaternity=false;
	
};
		
$scope.acceptdLwpCnfm=function(){
	$scope.isLwpAccptd=true;
	$scope.isLwp=false;
	/*var myEl = angular.element( document.querySelector( '.modal-backdrop' ) );
	myEl.remove();
	var myE2=angular.element(document.getElementById("entireBody"));
	myE2.removeClass("modal-open");*/
};

/*$scope.callReset=function(){
	$("#archiveResetModal").modal('show');
};*/
// method to reset All -------------------------------------------

$scope.callReset=function(){
	$("#archiveResetModal").modal('show');
};
				$scope.resetAll=function(){
					$rootScope.isResetAll=true;
					for(var i=0;i<commonAppLevService.selectedDates.length;i++){
						if(i%2==0){
                		var tempSdate=commonAppLevService.selectedDates[i];
                		var tempEdate=commonAppLevService.selectedDates[i+1];
                		if(!(tempSdate==undefined))
                		$(".day"+ tempSdate._d.getTime()).removeClass("hoverDivStart");
                		if(!(tempEdate==undefined))
                		$(".day"+ tempEdate._d.getTime()).removeClass("hoverDivEnd");
                		if(!(tempSdate==undefined) && !(tempEdate==undefined)){
                		var tempDate = tempSdate.add(1,'d');
                		while(tempDate._d.getTime()<tempEdate._d.getTime()){
                			
                			$(".day"+ tempDate._d.getTime()).removeClass("hoverDiv");
                			tempDate = tempSdate.add(1,'d');
                		};
						};
					/*	if(!($scope.leave.leaveList1[i].errorMsg==undefined))
							 $scope.leave.leaveList1[i].errorMsg='';
							if(!($scope.leave.leaveList1[i].newLeave.errorMsg==undefined))
							$scope.leave.leaveList1[i].newLeave.errorMsg='';
							if(!($scope.leave.leaveList1[i].serverErrMsg==undefined))
							$scope.leave.leaveList1[i].serverErrMsg='';
							if(!($scope.errorQuick==undefined))
								$scope.errorQuick='';*/
					};
						
                	};
                	$scope.tabSelected="present";
					$scope.errorMsg="";
					$scope.disableSubmit=false;
					$scope.rowIdforCal=0;
					//$scope.isAmend=false;
					$scope.isYearlyNormal=true;
					$scope.isHovered=true;
					$scope.quickTypes1=[];
					for(var i=0;i<$scope.counter;i++){
					$scope.leave.leaveList1[i].newLeave.startDate=undefined;
					 $scope.leave.leaveList1[i].newLeave.endDate=undefined;
					 $scope.leave.leaveList1[i].newLeave.reason=undefined;
					 $scope.leave.leaveList1[i].newLeave.Attribute1_Value="Select";
					}
					for(var i=0;i<commonAppLevService.selectedDates.length;i++){
					 commonAppLevService.selectedDates[i]=undefined;
					
					}
					 $scope.isFlexi=false;
					 $scope.isMtrntyAccptd=false;
					 $scope.leave.leaveList1=[{"newLeave":{'id':0}}]; 
                	//var counter =0; // used as rowNo in multiple apply of leaves
                	$scope.counter=0;
                	commonAppLevService.rowIndex=0;
                //	$scope.leave.leaveList1[0].newLeave.Attribute1_Value="Select";
                	$scope.defaultAddress='YES';
                	$scope.isOneCalendar=true;
                	$scope.oldLevTypeName="Select";
                	$scope.leave.leaveList1[$scope.counter].sDateDurations=['Second Half','Full Day'];
                	$scope.leave.leaveList1[$scope.counter].sDateDurations=['First Half','Full Day'];
                	$scope.leave.leaveList1[$scope.counter].newLeave.leaveTypeName="Select";
                	$scope.leave.leaveList1[$scope.counter].newLeave.startDuration="Full Day";
                	$scope.leave.leaveList1[$scope.counter].newLeave.endDuration="Full Day"; 
                	$scope.leave.leaveList1[$scope.counter].checkHalfDay=false;
                	$scope.leave.leaveList1[$scope.counter].showHalfDay=false;
                	$scope.leave.leaveList1[$scope.counter].showParent=false;
                	$scope.leave.leaveList1[$scope.counter].showChild=false;
                	$scope.leave.leaveList1[$scope.counter].newLeave.noOfDays=0.0;
                	$scope.leave.leaveList1[$scope.counter].isManualAddress=false;
                	var startDate='Full Day';var endDate='Full Day';
                	$scope.leave.leaveList1[$scope.counter].serverErrMsg='';
                 	$scope.leave.leaveList1[$scope.counter].newLeave.errorMsg='';
                 	$scope.leave.leaveList1[$scope.counter].errorMsg='';
                 	$scope.leave.leaveList1[$scope.counter].errorSDate='';
                	$scope.leave.leaveList1[$scope.counter].errorEDate='';
                	$scope.leave.leaveList1[$scope.counter].newLeave.contactAddress=angular.copy($scope.addressList[0].address);
              		 $scope.leave.leaveList1[$scope.counter].newLeave.contactNumCell=angular.copy($scope.addressList[0].mobilePhone);
               // 	$rootScope.isquickApplyCalendar =false;
                	commonAppLevService.selectedDates=[];
                	
                	
           		
           		 //present reset
           		if(!(""==$scope.addressList[0].address)){
             		document.getElementById('presentAdd').value=$scope.addressList[0].address;
             
             	}else{
             		document.getElementById('presentAdd').value='';
             	};
           		if(!(""==$scope.addressList[0].mobilePhone)){
             		document.getElementById('presentMobNo').value=$scope.addressList[0].mobilePhone;
             	
             	}else{
             		document.getElementById('presentMobNo').value='';
             	};
             	
             	//permanent reset
             	if(!(""==$scope.addressList[1].address)){
             		document.getElementById('permanentAdd').value=$scope.addressList[1].address;
             	
             		
             	}else{
             		document.getElementById('permanentAdd').value='';
             	};
           		if(!(""==$scope.addressList[1].mobilePhone)){
             		document.getElementById('permanentMobNo').value=$scope.addressList[1].mobilePhone;
             	
             	}else{
             		document.getElementById('permanentMobNo').value='';
             	};
             	
             	//other reset
             	if(!(""==$scope.addressList[2].address)){
             		document.getElementById('otherAdd').value=$scope.addressList[2].address;
             		
             	}else{
             		document.getElementById('otherAdd').value='';
             	};
           		if(!(""==$scope.addressList[2].mobilePhone)){
             		document.getElementById('otherMobNo').value=$scope.addressList[2].mobilePhone;
             	}else{
             		document.getElementById('otherMobNo').value='';
             	};
             	
             	
             	commonAppLevService.quickDate=[];
           		   dragDropServices.resetFiles(); 
           		 
};
//commited for phase 1 , copy reason function------------			
$scope.errCheck=false;
$scope.copyReason=function(index){
	 if($scope.leave.leaveList1[index-1].newLeave.countryLeaveTypeId==458){
  	   $scope.leave.leaveList1[index].newLeave.ErrDisplay="Reason can not be copied from a Flexi leave type";
		   $scope.errCheck=true;
     }else{
  	   $scope.leave.leaveList1[index].newLeave.reason = $scope.leave.leaveList1[index-1].newLeave.reason;
     }
};
				
///////////////////method to hide error msg on click



hideErrMsg=function(id){
  if(id=="Errmsg"){
     var e = document.getElementById(id);
		if(!$scope.errCheck){
			e.style.display = 'none'; 
		}else{
			e.style.display = 'block'; 
			$scope.errCheck=false;
		}
		
	}
 };

/*	if(showing==-1){
		showing=0;
	
		jq("#Errmsg").show(time,function(){showing=1});
	//	jq(".shortcutMenu").animate({left:menuWidth+"px"},time,function(){showing=1})
	}else if(showing==1){
				showing=0;
				jq("#Errmsg").hide(time,function(){showing=-1});
			//	jq(".shortcutMenu").animate({left:"0px"},time,function(){showing=-1})
	  }*/





//method to change CSS and add reason for quick leave sick application-------------
					 $scope.setSickReason=function(index){
						 $scope.isSickOther=false;
						 if(index==1){
							 $("#sick1").addClass("sick-leave-css");
							 $("#sick2").removeClass("sick-leave-css");
							 $("#sick3").removeClass("sick-leave-css");
							 $("#sick4").removeClass("sick-leave-css");
							 $("#sick5").removeClass("sick-leave-css");
							 $("#sick6").removeClass("sick-leave-css");
							 $scope.isSick1=true;
							 $scope.isSick2=false;
							 $scope.isSick3=false;
							 $scope.isSick4=false;
							 $scope.isSick5=false;
							 $scope.isSick6=false;
							 $scope.quickReason="Fever,Cough,Cold";
						 }
						 else if(index==2){
							 $("#sick1").removeClass("sick-leave-css");
							 $("#sick2").addClass("sick-leave-css");
							 $("#sick3").removeClass("sick-leave-css");
							 $("#sick4").removeClass("sick-leave-css");
							 $("#sick5").removeClass("sick-leave-css");
							 $("#sick6").removeClass("sick-leave-css");
							 $scope.isSick1=false;
							 $scope.isSick2=true;
							 $scope.isSick3=false;
							 $scope.isSick4=false;
							 $scope.isSick5=false;
							 $scope.isSick6=false;
							 $scope.quickReason="Digestive System Disorder";
						 }
						 else if(index==3){
							 $("#sick1").removeClass("sick-leave-css");
							 $("#sick2").removeClass("sick-leave-css");
							 $("#sick3").addClass("sick-leave-css");
							 $("#sick4").removeClass("sick-leave-css");
							 $("#sick5").removeClass("sick-leave-css");
							 $("#sick6").removeClass("sick-leave-css");
							 $scope.isSick1=false;
							 $scope.isSick2=false;
							 $scope.isSick3=true;
							 $scope.isSick4=false;
							 $scope.isSick5=false;
							 $scope.isSick6=false;
							 $scope.quickReason="Headache,Nausea";
						 }
						 else if(index==4){
							 $("#sick1").removeClass("sick-leave-css");
							 $("#sick2").removeClass("sick-leave-css");
							 $("#sick3").removeClass("sick-leave-css");
							 $("#sick4").addClass("sick-leave-css");
							 $("#sick5").removeClass("sick-leave-css");
							 $("#sick6").removeClass("sick-leave-css");
							 $scope.isSick1=false;
							 $scope.isSick2=false;
							 $scope.isSick3=false;
							 $scope.isSick4=true;
							 $scope.isSick5=false;
							 $scope.isSick6=false;
							 $scope.quickReason="Orthopedic Ailment";
						 }
						 else if(index==5){
							 $("#sick1").removeClass("sick-leave-css");
							 $("#sick2").removeClass("sick-leave-css");
							 $("#sick3").removeClass("sick-leave-css");
							 $("#sick4").removeClass("sick-leave-css");
							 $("#sick5").addClass("sick-leave-css");
							 $("#sick6").removeClass("sick-leave-css");
							 $scope.isSick1=false;
							 $scope.isSick2=false;
							 $scope.isSick3=false;
							 $scope.isSick4=false;
							 $scope.isSick5=true;
							 $scope.isSick6=false;
							 $scope.quickReason="Infection/Parasetic Disease";
						 }
						 else if(index==6){
							 $("#sick1").removeClass("sick-leave-css");
							 $("#sick2").removeClass("sick-leave-css");
							 $("#sick3").removeClass("sick-leave-css");
							 $("#sick4").removeClass("sick-leave-css");
							 $("#sick5").removeClass("sick-leave-css");
							 $("#sick6").addClass("sick-leave-css");
							 $scope.isSick1=false;
							 $scope.isSick2=false;
							 $scope.isSick3=false;
							 $scope.isSick4=false;
							 $scope.isSick5=false;
							 $scope.isSick6=true;
							 $scope.isSickOther=true;
							if(!(''==$scope.quickReason))
								$scope.quickReason='';
							 
						 }
						 
					 };
$scope.quickApplyFunc=function()
{
					 	
		$rootScope.isquickApplyCalendar=true;
		$scope.resetAll();
		$scope.quickLevType='';
		$scope.quickDate='';
		var temp=$scope.isMobile();
		$scope.getQckDates();
		 $rootScope.$emit("quickCalReset");
	};					 
//get Quickapply dates--------------------------------------------					 
$scope.getQckDates=function()
{
	var sendData;
	if(commonAppLevService.quickDate.length==1){
sendData=moment(commonAppLevService.quickDate[0]).format("DD-MMM-YYYY");
$scope.quickDate=sendData;
$scope.quickLevType='';
}else{
sendData=moment().format("DD-MMM-YYYY");
};
$rootScope.processing=true;
		var tepRes= $http.post('/leaverest/rest/quickLevDates/?cd=' + (new Date()).getTime(), sendData).then(function(response){
			$rootScope.processing=false;
			
			$scope.normalQuickDates=response.data.quick[0];
				$scope.displayedQckDates=$scope.normalQuickDates;
				$scope.flexiQuickDates=response.data.flexi[0];
				
				}); //server response ends
			 
			 if(!$scope.isAmend)
			 $("#quickApplyId").modal('show');
};  					 
					 
//this method is called when we select dates from calendar and when we select date from radio button.---------------------					 
$scope.selectQckDate=function()
{
	var startClass=$(".hoverDivStart");
	var endClass=$(".hoverDivEnd");
	if(startClass.length>=1 && endClass.length >=1)
		{
		startClass.removeClass("hoverDivStart");
		endClass.removeClass("hoverDivEnd");
		commonAppLevService.quickDate=[];
		};
		if(!(''==$scope.quickDate)){
		var day=applyLevService.convertToMomentObj($scope.quickDate);
	$(".day"+ day._d.getTime()).addClass("hoverDivStart");
	$(".day"+ day._d.getTime()).addClass("hoverDivEnd");
	commonAppLevService.quickDate.push(day);
		};
};	

//this method disables the dates which should'nt get selected in quick apply--------------------------------
$scope.disableQckDate=function(date,quickId){
	var day=applyLevService.convertToMomentObj(date);
	if($(".day"+ day._d.getTime()).children().hasClass("day-pendingleave") 
			|| $(".day"+ day._d.getTime()).parent().hasClass("weekend-box1")
			|| $(".day"+ day._d.getTime()).children().hasClass("day-holiday")
			|| $(".day"+ day._d.getTime()).children().hasClass("day-approvedleave")){
		$("."+quickId).addClass("disable-quick-date");
		
		if("quickDate1"==quickId){
			//$("#outer1").addClass("disable-radio-button");
		$("#outer1").children().addClass("inner-disabled");}
		else if("quickDate2"==quickId){
			//$("#outer2").addClass("disable-radio-button");
			$("#outer2").children().addClass("inner-disabled");}
		else if("quickDate3"==quickId){
			//$("#outer3").addClass("disable-radio-button");
			$("#outer3").children().addClass("inner-disabled");};
		return true;
	}
	else{
		$("."+quickId).removeClass("disable-quick-date");
		if("quickDate1"==quickId){
			//$("#outer1").removeClass("disable-radio-button");
		$("#outer1").children().removeClass("inner-disabled");}
		else if("quickDate2"==quickId){
		//	$("#outer2").removeClass("disable-radio-button");
			$("#outer2").children().removeClass("inner-disabled");}
		else if("quickDate3"==quickId){
			//$("#outer3").removeClass("disable-radio-button");
			$("#outer3").children().removeClass("inner-disabled");};
		return false;
	};
		
};

//this method checks if the current selection or previous selection is Flexi Holiday or not------------------
$scope.isFlexiType=function(newValue,oldValue){
	if("Flexi Holiday"==oldValue || "Flexi Holiday"==newValue){
		$scope.quickDate='';
		commonAppLevService.quickDate=[];
		};
	if("Flexi Holiday"==$scope.quickLevType)
	$scope.displayedQckDates=$scope.flexiQuickDates;
	else
		$scope.displayedQckDates=$scope.normalQuickDates;
	
	$scope.selectQckDate();
};
					 
//method to submit quick leave -------------------
$scope.submitQuickLev=function()
   {
	var quickMob="",quickAdd="";
	if(!(""==$scope.addressList[0].mobilePhone) || !(""==$scope.addressList[0].address)){
		quickMob=$scope.addressList[0].mobilePhone;
	quickAdd=$scope.addressList[0].address;
	}
	else if(!(""==$scope.addressList[1].mobilePhone) && !(""==$scope.addressList[1].address)){
		quickMob=$scope.addressList[1].mobilePhone;
		quickAdd=$scope.addressList[1].address;
		
	};
	var countryLeaveTypeId=applyLevService.getlevIdFromName($scope.leaveTypes,$scope.quickLevType);
	var quickDate=$scope.quickDate;
	var quickReason=$scope.quickReason;
	var sendData = {
			countryLeaveTypeId : countryLeaveTypeId,
			startDate : quickDate ,
			Attribute1_Value : quickReason,
			Attribute1_Name : "Sick Leave Category",
			contactAddress:quickAdd,
			contactNumCell:quickMob
	};
	$rootScope.processing=true;
var resp = $http.post('/leaverest/rest/quickLev/?cd=' + (new Date()).getTime(),sendData)
				.then(function(response)
			{
					$rootScope.processing=false;
				$scope.submitQuickLevResp = response.data;
				if(!($scope.submitQuickLevResp==undefined)){
					var code=response.data[0].code;
					if("422"==code){
					
					$scope.resetAll();
					$scope.errorQuick=response.data[0].fieldErrors[0].message;
					$scope.leave.leaveList1[0].newLeave.startDate=$scope.quickDate;
                    $scope.leave.leaveList1[0].newLeave.endDate=$scope.quickDate;
                    $scope.leave.leaveList1[0].newLeave.leaveTypeName=$scope.quickLevType;
                    $scope.getAdditionalfields($scope.quickLevType,'0');
                  //  $scope.defaultDuration(0);
                    $rootScope.isquickApplyCalendar=false;
					}else if("200"==code){
						
				$scope.outputMesg=response.data[0].message;
				$("#archiveSuccessModal2").modal('show');
					};
				};
			});
	};
//method to submit quick leave -------------------
$scope.resetQuickLev=function(){
	$rootScope.isquickApplyCalendar=false;
	if(commonAppLevService.quickDate.length==1){
		var day=commonAppLevService.quickDate[0];
		$(".day"+ day).removeClass("hoverDivStart");
		$(".day"+ day).removeClass("hoverDivEnd");
		};
		commonAppLevService.quickDate=[];
		$scope.quickReason='';
		$scope.quickLevType='';
		$scope.quickDate='';
		$scope.isSick1=false;
		$scope.isSick2=false;
		$scope.isSick3=false;
		$scope.isSick4=false;
		$scope.isSick5=false;
		$scope.isSick6=false;
		$("#sick1").removeClass("sick-leave-css");
		$("#sick2").removeClass("sick-leave-css");
		$("#sick3").removeClass("sick-leave-css");
		$("#sick4").removeClass("sick-leave-css");
		$("#sick5").removeClass("sick-leave-css");
		$("#sick6").removeClass("sick-leave-css");
		$("#calendarMainId").removeClass('introjs-showElement introjs-relativePosition');
			$("#levBalId").removeClass('introjs-showElement introjs-relativePosition');
			$("#leaveLabelsId").removeClass('introjs-showElement introjs-relativePosition');
			$("#levDescId").removeClass('introjs-showElement introjs-relativePosition');
			
 };	


 
getPlanLevDtls=function(){
	
	$rootScope.isPlanLevCalendar=true;
	
	$scope.resetAll();
	$scope.leave.planList=[{"planLeave":{'id':0}}]; 
	$scope.leave.planList[0].serverMsg=undefined;
	commonAppLevService.selectedPlanDates=[];
	$scope.planCounter=0;
	var planDetails=$http.post('/leaverest/rest/planLev/?cd=' + (new Date()).getTime());
	
	planDetails.then(function(response){
		//$rootScope.processing=false;
		if(!(undefined==response.data || ""==response.data)){
			angular.forEach(response.data,function(value,key){
				$scope.leave.planList[key].planLeave=value;
				commonAppLevService.selectedPlanDates.push(applyLevService.convertToMomentObj(value.startDate));
				commonAppLevService.selectedPlanDates.push(applyLevService.convertToMomentObj(value.endDate));
				$scope.leave.planList[key].planLeave.isDisabled = true;
				$scope.leave.planList[key].planLeave.id = key;
				$scope.leave.planList[key].serverMsg=undefined;
				$scope.planLeave = {"planLeave" : {} };
				$scope.leave.planList.push($scope.planLeave);
				$scope.planCounter=$scope.planCounter + 1;
				$scope.leave.planList[$scope.planCounter].planLeave.id = $scope.planCounter;
				$scope.planRowSelected=$scope.planCounter;
				$scope.planSelected=$scope.leave.planList[$scope.planCounter].planLeave;
			});
			
		}else{
			$scope.planRowSelected=$scope.planCounter;
			$scope.planSelected=$scope.leave.planList[$scope.planCounter].planLeave;
		};
	});
	
	var temp=$scope.isMobile();
	if(!$scope.isAmend)
	$("#planLevId").modal('show');
};
//method is called when we select plan row using radio button
$scope.updatePlanRowSelected=function(index){
	/*$scope.planSelected=$scope.leave.planList[index].planLeave;
	$scope.showPlanSuccess=false;*/
	$scope.enablePlanRow(index); 
	
};


//method to enable plan leave row-----------------------------
 
 $scope.enablePlanRow = function(rowId) {
	 $scope.planSelected=$scope.leave.planList[rowId].planLeave;
	 $scope.planRowSelected=$scope.leave.planList[rowId].planLeave.id;
	 $scope.showPlanSuccess=false;
	 $scope.leave.planList[rowId].planLeave.isDisabled = false;
	 $scope.leave.planList[$scope.leave.planList.length-1].planLeave.isDisabled = false;
				for (var i = 0; i < rowId; i++) {
					$scope.leave.planList[i].planLeave.isDisabled = true;

				}
				++rowId;
				for (rowId; rowId <= $scope.leave.planList.length; rowId++) {
					if ($scope.leave.planList[rowId] != undefined) {
						$scope.leave.planList[rowId].planLeave.isDisabled = true;
					};
				};
				if($scope.leave.planList.length==1)
				 $scope.leave.planList[$scope.leave.planList.length-1].planLeave.isDisabled = false;
				$scope.leave.planList[$scope.leave.planList.length-1].planLeave.isDisabled = false;
				
				
 		};
 
 
 //method to delete plan leave row---------------------------------
$scope.deletePlanRow = function(index) 
	{
	$scope.showPlanSuccess=false;
	if($scope.leave.planList.length>1)
		{

	var planDetails=$http.post('/leaverest/rest/deletePlanLeave/?cd=' + (new Date()).getTime() ,$scope.leave.planList[index].planLeave);
					planDetails.then(function(response){
						
						$scope.submitPlanResp = response.data;
						if(!($scope.submitPlanResp==undefined)){
							var code=response.data[0].code;
							if("422"==code){
								
							$scope.leave.planList[$scope.planSelected.id].serverMsg=response.data[0].fieldErrors[0].message;
							
							}else if("200"==code){
								$scope.leave.yearlist=response.data[0].success;
							commonAppLevService.yearlist=$scope.leave.yearlist;
						$scope.outputPlanMesg=response.data[0].message;
					//	$rootScope.processing=true;
						$scope.showPlanSuccess=true;
						
						$scope.leave.planList[index].errorMsg="";
						
						
						if(!($scope.leave.planList[index].planLeave.startDate==undefined)){
							var tempDate = applyLevService.convertToMomentObj($scope.leave.planList[index].planLeave.startDate);
							if(index==0) $(".day"+ tempDate._d.getTime()).removeClass("hoverDivStart");
							if($(".day"+ tempDate._d.getTime()).hasClass("hoverDivStart"))
							if(commonAppLevService.selectedPlanDates.length>1)
						    	 for(var i=0; i<commonAppLevService.selectedPlanDates.length;i++)
						    	 {
						    		 if (((index*2)==i  || ((index*2)+1)==i))
						    		 if(($scope.leave.planList[index].planLeave.startDate==(commonAppLevService.selectedPlanDates[i]).format("DD-MMM-YYYY")))
						    		 {
						    			 $(".day"+ tempDate._d.getTime()).removeClass("hoverDivStart");
						    		 }
						    		 
						    	 }
							tempDate = tempDate.add(1,'d');
							while ( $( ".day"+ tempDate._d.getTime() ).hasClass("hoverDiv")) {
			 			 var tempTimeStamp = tempDate._d.getTime();
			 			 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								tempDate = tempDate.add(1,'d');
						};
					};
						if(!($scope.leave.planList[index].planLeave.endDate==undefined)){
							var tempDate = applyLevService.convertToMomentObj($scope.leave.planList[index].planLeave.endDate);
							if(index==0)$(".day"+ tempDate._d.getTime()).removeClass("hoverDivEnd");
							if($(".day"+ tempDate._d.getTime()).hasClass("hoverDivEnd"))
								if(commonAppLevService.selectedPlanDates.length>1)
							    	 for(var i=0; i<commonAppLevService.selectedPlanDates.length;i++)
							    	 {
							    		 if (((index*2)==i  || ((index*2)+1)==i))
							    		 if(($scope.leave.planList[index].planLeave.endDate==(commonAppLevService.selectedPlanDates[i]).format("DD-MMM-YYYY")))
							    		 {
							    			 $(".day"+ tempDate._d.getTime()).removeClass("hoverDivEnd");
							    		 };
							    		 
							    	 };
							tempDate = tempDate.add(-1,'d');
							
			 		    while ( $( ".day"+ tempDate._d.getTime() ).hasClass("hoverDiv")) {
			 			 var tempTimeStamp = tempDate._d.getTime();
			 			 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								tempDate = tempDate.add(-1,'d');
						};
						
					};
					
					getPlanLevDtls();
							};
						};
				});
					

					
				
 
		}
		else
		{
			$scope.leave.leaveList1[index].errorMsg="You cannot delete all the rows from the table!";
		};
		
	};
 
 
 
 $scope.submitPlanLeave=function(){
	
	
	 if(!($scope.planSelected.startDate == undefined)) {
			if(!($scope.planSelected.endDate == undefined)) {
				if(!($scope.planSelected.reason==undefined)) { 
					var planDetails=$http.post('/leaverest/rest/planLeave/?cd=' + (new Date()).getTime() , $scope.planSelected);
					planDetails.then(function(response){
						
						$scope.submitPlanResp = response.data;
						if(!($scope.submitPlanResp==undefined)){
							var code=response.data[0].code;
							if("422"==code){
							
							$scope.leave.planList[$scope.planSelected.id].serverMsg=response.data[0].fieldErrors[0].message;
							
							}else if("200"==code){
								$scope.leave.yearlist=response.data[0].success;
								commonAppLevService.yearlist=$scope.leave.yearlist;
						$scope.outputPlanMesg=response.data[0].message;
						$scope.showPlanSuccess=true;
						getPlanLevDtls();
							};
						};
						
					
					});
					
				};
			};
	 };
 };
 
 
 
 
 $scope.convertPlanToLeave=function(){
	 $scope.closePlan();
	 $scope.leave.leaveList1[0].newLeave.startDate=$scope.planSelected.startDate;
	 $scope.leave.leaveList1[0].newLeave.endDate= $scope.planSelected.endDate;
	 $scope.leave.leaveList1[0].newLeave.reason= $scope.planSelected.reason;
	
	
 };
 
 
 $scope.disableSubmitPlan=function(){
		if(!(undefined==$scope.planSelected))
		if(!($scope.planSelected.startDate == undefined) && !($scope.planSelected.endDate == undefined) && !($scope.planSelected.reason == undefined))
			return false;
		else 
			return true;
	};
	
	
 $scope.disableConvertPlan=function(){
	 if(!(undefined==$scope.planSelected))
	 if(!(''==$scope.planSelected.approverComment ||  undefined==$scope.planSelected.approverComment))
		 return false;
	 else
		 return false;
			 
 };
 $scope.closePlan=function(){
	 $rootScope.isPlanLevCalendar=false;
	 $scope.showPlanSuccess=false;
	 for(var i=0;i<commonAppLevService.selectedPlanDates.length;i++){
			if(i%2==0){
 		var tempSdate=commonAppLevService.selectedPlanDates[i];
 		var tempEdate=commonAppLevService.selectedPlanDates[i+1];
 		if(!(tempSdate==undefined))
 		$(".day"+ tempSdate._d.getTime()).removeClass("hoverDivStart");
 		if(!(tempEdate==undefined))
 		$(".day"+ tempEdate._d.getTime()).removeClass("hoverDivEnd");
 		if(!(tempSdate==undefined) && !(tempEdate==undefined)){
 		var tempDate = tempSdate.add(1,'d');
 		while(tempDate._d.getTime()<tempEdate._d.getTime()){
 			
 			$(".day"+ tempDate._d.getTime()).removeClass("hoverDiv");
 			tempDate = tempSdate.add(1,'d');
 		};
			};
			
				
				
		};
			
 	};
 	
 	for(var j=0; j <$scope.leave.planList.length;j++){
 		if(!($scope.leave.planList[j].serverErrMsg==undefined))
			$scope.leave.planList[j].serverErrMsg='';
 	};
 	$scope.resetAll();
 	commonAppLevService.selectedPlanDates=[];
 };
 
 $scope.resetPlanRow=function(){
	 
	 
	 for(var i=0;i<$scope.leave.planList.length;i++){
			
 		
 		
			if(!($scope.leave.planList[i].serverMsg==undefined))
				$scope.leave.planList[i].serverMsg=undefined;
			if(!($scope.leave.planList[i].errorEPlanDate==undefined))
				$scope.leave.planList[i].errorEPlanDate=undefined;
			if(!($scope.leave.planList[i].errorSPlanDate==undefined))
				$scope.leave.planList[i].errorSPlanDate=undefined;
			if(!($scope.leave.planList[i].errorEPlanDate==undefined))
				$scope.leave.planList[i].errorEPlanDate=undefined;
			
 	};
	 
	 
	 
	 if(!$scope.planSelected.isDisabled){
	 var tempSDate=applyLevService.convertToMomentObj($scope.planSelected.startDate);
	 var tempEDate=applyLevService.convertToMomentObj($scope.planSelected.endDate);
	 $(".day"+ tempSDate._d.getTime()).removeClass("hoverDivStart");
	 $(".day"+ tempEDate._d.getTime()).removeClass("hoverDivEnd");
	
	 while(tempSDate <= tempEDate){
		 $(".day"+ tempSDate._d.getTime()).removeClass("hoverDiv");
		 tempSDate = tempSDate.add(1,'d');
	 };
	 $scope.planSelected.startDate=undefined;
	 $scope.planSelected.endDate=undefined;
	 $scope.planSelected.reason=undefined;
	
	 };
 };
 $scope.removePlanSuccess=function(index){
	 if(!(undefined==$scope.leave.planList[index]))
	 if( !(''==$scope.leave.planList[index].serverMsg) || !(undefined==$scope.leave.planList[index].serverMsg))
	 $scope.leave.planList[index].serverMsg='';
	 if($scope.showPlanSuccess)
	 $scope.showPlanSuccess=false;
 };
//method to change yearly view icon------------------------------------
$scope.hoverYearlyView=function()
{
		if($scope.isYearlyNormal){
			$scope.isYearlyNormal=false;
	}else{
		$scope.isYearlyNormal=true;
	};
};
		
//method to change leave type info icon--------------------------------
$scope.hoverInfoView=function()
{
			if($scope.isInfoNormal){
				$scope.isInfoNormal=false;
		}else{
			$scope.isInfoNormal=true;
		};
};
			
//method to change upload doc browse icon------------------------------------
$scope.hoverUpload=function()
{
	if($scope.isHovered){
		$scope.isHovered=false;
		}else{
		$scope.isHovered=true;
		};
};			

 
//events that are triggered from calender.js to make changes in row--------------------------------------------------------         
 $rootScope.$on("mainCalendarSDate", function (event, args) 
		 {
	          if($scope.leave.leaveList1[args.rowNo]==undefined)
	          {       /*commented for single leave application*/
	                /*$scope.errorMsg="Please add rows to select dates from Calendar!";*/
	                //emit invalid information to directive
	                $rootScope.$emit("DateValidator", {
	                   validity:"invalid" 
	                 });
	           }
	          else
	          {   $scope.defaultDuration(args.rowNo);
	             // $scope.leave.leaveList1[args.rowNo].newLeave.startDate = (args.startDate.date).format("DD-MMM-YYYY");
	          		$scope.leave.leaveList1[args.rowNo].newLeave.startDate = moment(args.startDate.date).format("DD-MMM-YYYY");
	              $rootScope.$emit("DateValidator", {
	                            	 validity:"valid" 
	                            	 });
	           }
	     });
	                                    	
$rootScope.$on("mainCalendarEDate", function (event, args) 
			{
					$scope.defaultDuration(args.rowNo);
	              $scope.leave.leaveList1[args.rowNo].newLeave.endDate = moment(args.endDate.date).format("DD-MMM-YYYY");
	         });

//condition to see if apply leave page is openend for copy to new functionality-------------------------
		/*	if(!(undefined==$rootScope.isCopyToNew) && $rootScope.isCopyToNew){
     		$scope.leave.leaveList1 = commonAppLevService.copyToNewList;
     		$rootScope.isCopyToNew = false;
     	};*/
     	
     	
     	
$rootScope.$on("mainCalendarSPlanDate", function (event, args) 
     			 {
     		          if($scope.leave.planList[args.rowNo]==undefined)
     		          {       /*commented for single leave application*/
     		                /*$scope.errorMsg="Please add rows to select dates from Calendar!";*/
     		                //emit invalid information to directive
     		                $rootScope.$emit("PlanDateValidator", {
     		                   validity:"invalid" 
     		                 });
     		           }
     		          else
     		          {   
     		              $scope.leave.planList[args.rowNo].planLeave.startDate = moment(args.startDate.date).format("DD-MMM-YYYY");
     		              
     		              $rootScope.$emit("PlanDateValidator", {
     		                            	 validity:"valid" 
     		                            	 });
     		           };
     		     });  

$rootScope.$on("mainCalendarEPlanDate", function (event, args) 
		{
			$scope.leave.planList[args.rowNo].planLeave.endDate = moment(args.endDate.date).format("DD-MMM-YYYY");
         });
 
$scope.isMobile = function isMobile() {

     if (navigator.userAgent && (navigator.userAgent.match(/Android/i)
        || navigator.userAgent.match(/webOS/i)
        || navigator.userAgent.match(/iPhone/i)
        || navigator.userAgent.match(/iPad/i)
        || navigator.userAgent.match(/iPod/i)
        || navigator.userAgent.match(/BlackBerry/i)
        || navigator.userAgent.match(/Windows Phone/i))){

         return true;
     }else
    	 return false;
   };
   
   
   
   resetAttrDsclmr=function(index){
	   $scope.leave.leaveList1[index].newLeave.Attribute1_Value=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute2_Value=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute3_Value=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute4_Value=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute5_Value=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute1_Name=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute2_Name=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute3_Name=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute4_Name=null;
	   $scope.leave.leaveList1[index].newLeave.Attribute5_Name=null;
	   $scope.leave.leaveList1[index].newLeave.contactNumHome=null;
	$scope.leave.leaveList1[index].showEmailDsclmr=false;
	$scope.leave.leaveList1[index].showDsclmr1=false;
	$scope.leave.leaveList1[index].showDsclmr2=false;
	$scope.leave.leaveList1[index].showDsclmr3=false;
	$scope.leave.leaveList1[index].showDsclmr4=false;
	$scope.leave.leaveList1[index].showDsclmr5=false;
	$scope.leave.leaveList1[index].showDsclmr6=false;
	$scope.leave.leaveList1[index].showDsclmr7=false;
	$scope.leave.leaveList1[index].showDsclmr8=false;
	$scope.leave.leaveList1[index].showDsclmr9=false;
	$scope.leave.leaveList1[index].showDsclmr10=false;
	$scope.leave.leaveList1[index].showDsclmr11=false;
	$scope.leave.leaveList1[index].showDsclmr12=false;
	$scope.leave.leaveList1[index].disclaimer1=null;
	$scope.leave.leaveList1[index].disclaimer2=null;
	$scope.leave.leaveList1[index].disclaimer3=null;
	$scope.leave.leaveList1[index].disclaimer4=null;
	$scope.leave.leaveList1[index].disclaimer5=null;
	$scope.leave.leaveList1[index].disclaimer6=null;
	$scope.leave.leaveList1[index].disclaimer7=null;
	$scope.leave.leaveList1[index].disclaimer8=null;
	$scope.leave.leaveList1[index].disclaimer9=null;
	$scope.leave.leaveList1[index].disclaimer10=null;
	$scope.leave.leaveList1[index].disclaimer11=null;
	$scope.leave.leaveList1[index].disclaimer12=null;
	$scope.leave.leaveList1[index].emailDisclaimer=null;
	$scope.leave.leaveList1[index].newLeave.FMLATaggedName=false;
   };
   
   
 
//	Take a Tour code--------------------------------------------------------------------------------------------------------
//	Added By Poonkalaivanan-------------------------------------------------------------------------------------------------

	//ON COMPLETE Function--------------------------------------------------
	$scope.CompletedEvent = function () {
		
		$('#yearViewModal').modal('hide');
		$("#calenderRow").css("height","");
		$("#calenderRow").css("overflow","");
		$("#calenderRow").css("margin-top","");
		$('#yearViewModal').css("opacity","1");
		$('#quickApplyId').modal('hide');
		$('#quickApplyId').css("opacity","1");
		$('#planLevId').modal('hide');
		$('#planLevId').css("opacity","1");
		$('#calendarRow').css("position","");
		$('#calendarRow').css("z-index","");
		$('#calendarRow').css("background","");
		$('#calendarRow').css("border","1px solid #cccccc");
		$('#calendarRow').css("border-radius","");
		$('#calendarRow').css("pointer-events","");
	};
	//ON EXIT Function----------------------------------------------------------
	$scope.ExitEvent = function () {
		
		$('#yearViewModal').modal('hide');
		$("#calenderRow").css("height","");
		$("#calenderRow").css("overflow","");
		$("#calenderRow").css("margin-top","");
		$('#yearViewModal').css("opacity","1");
		$('#quickApplyId').modal('hide');
		$('#quickApplyId').css("opacity","1");
		$('#planLevId').modal('hide');
		$('#planLevId').css("opacity","1");
		$('.fade.in').css("background","");
		$('#calendarRow').css("position","");
		$('#calendarRow').css("z-index","");
		$('#calendarRow').css("background","");
		$('#calendarRow').css("border","1px solid #cccccc");
		$('#calendarRow').css("border-radius","");
		$('#calendarRow').css("pointer-events","");
	};
	//ON CHANGE Function-----------------------------------------------------------
	$scope.ChangeEvent = function (targetElement) {
		
		if(targetElement.id=="planLeave"){

			$('#quickApplyId').css("opacity","0");
			$('.fade.in').css("background","transparent");
		} 

	};
	//BEFORE CHANGE Function----------------------------------------------------------
	$scope.BeforeChangeEvent = function (targetElement) {
		

		if(targetElement.id=="quickApplyFeatures"){
			$('#quickApplyId').modal('show');
			$('#quickApplyId').css("opacity","1");
			$('.fade.in').css("background","transparent");
		}
		if(targetElement.id=="planlevRow"){

			$('#planLevId').css("opacity","1");
			$('.fade.in').css("background","transparent");
		}
		if(targetElement.id=="quickApplyRow"){
			$('#quickApplyId').modal('show');
			$('#quickApplyId').css("opacity","0");
			$('.fade.in').css("background","transparent");
		} 
		if(targetElement.id=="calenderRow"){
			$("#calenderRow").css("height","493px");
			$("#calenderRow").css("overflow","hidden");
			$("#calenderRow").css("margin-top","5px");
			$('#yearViewModal').css("opacity","1");
			$('.fade.in').css("background","transparent");
		};
		if(targetElement.id=="yearlyDiv"){
			$('#planLevId').css("opacity","0");
			$('.fade.in').css("background","");
		};
		if(targetElement.id=="workspacePop"){
			$('#calendarRow').css("position","absolute");
			$('#calendarRow').css("z-index","9999999");
			$('#calendarRow').css("background","#fff");
			$('#calendarRow').css("border","5px solid #EAEAEA");
			$('#calendarRow').css("border-radius","4px");
			$('#calendarRow').css("pointer-events","none");
			$(".introjs-helperLayer").addClass("workspace");
		};
		if(targetElement.id=="uploadRow"){
			$('#calendarRow').css("position","");
			$('#calendarRow').css("z-index","");
			$('#calendarRow').css("background","");
			$('#calendarRow').css("border","1px solid #cccccc");
			$('#calendarRow').css("border-radius","");
			$('#calendarRow').css("pointer-events","");
			$(".introjs-helperLayer").removeClass("workspace");
		};
		if(targetElement.id=="addressRow"){
			$('#calendarRow').css("position","");
			$('#calendarRow').css("z-index","");
			$('#calendarRow').css("background","");
			$('#calendarRow').css("border","1px solid #cccccc");
			$('#calendarRow').css("border-radius","");
			$('#calendarRow').css("pointer-events","");
			$(".introjs-helperLayer").removeClass("workspace");
		}



	};
	//AFTER CHANGE Function------------------------------------------------------------------
	$scope.AfterChangeEvent = function (targetElement) {
		
		if(targetElement.id=="quickApplyRow"){
			$('#quickApplyId').modal('show');
			$('#quickApplyId').css("opacity","0");
			$('.fade.in').css("background","transparent");
		} 
		if(targetElement.id=="planLeave"){
			$('#planLevId').modal('show');
			$('#planLevId').css("opacity","0");
			$('.fade.in').css("background","transparent");
		} 

		if(targetElement.id=="yearlyDiv"){
			$rootScope.buildYearlyView();
			$('#yearViewModal').css("opacity","0");
			$('.fade.in').css("background","transparent");
		}
	};

	//STEPS For Tour---------------------------------------------------------------------
	$scope.IntroOptions = {
			steps:[

			       {
			    	   element:document.querySelector('#pageTitle'),
			    	   intro: "<div style='border-bottom:1px solid black'><label>Apply Leave</label></div></div>"+ 
			    	   "<div style='text-align:left'>Apply Leave is a single integrated page which gives an overview of Available Leave Balances, Associate Calendar, List of Holidays and helps in applying for leaves.</div>",
			    	   position:"right",
			    	   header:'First'
			       },
			       {
			    	   element: document.querySelector('#leaveBalanceRow'),
			    	   intro: "<div style='border-bottom:1px solid black'><label>Available Leave Balance</label></div>"+
			    	   "<div style='text-align:left'>Available Leave Balance is the number of days for which associate is eligible for applying leaves." +
			    	   "<br><br><div style='float:left;text-decoration:underline;font-weight:700'>Calculation:</div>&nbsp;Available Leave Balance = Leave Balance &ndash; Leaves Pending</div>",
			    	   position: "right",
			       },
			       {
			    	   element: document.querySelector('#calendarRow'),
			    	   intro: "<div style='border-bottom:1px solid black'><label>Monthly Calendar</label></div>"+
			    	   "<div style='text-align:left'>Monthly Calendar helps in selection of Leave Start date and Leave End date and gives a pictorial representation of holidays, weekends and leaves for the current month.</div>",
			    	   position: "right",
			       },
			       {
			    	   element: document.querySelector('#levDescId'),
			    	   intro: "<div style='border-bottom:1px solid black'><label>Holiday List</label></div>"+
			    	   "<div style='text-align:left'>Holiday List gives a summary of all Holidays applicable for the current month.</div>",
			    	   position: "top",
			       },
			       {   
			    	   element: document.querySelector('#addressRow'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Contact Details</label></div>"+
			    	   "<div style='text-align:left'>This is an editable section giving a snapshot of the Mobile number and Address, which will be captured for each leave application. </div>",
			    	   position: "bottom",

			       },
			       {
			    	   element: document.querySelector('#workspacePop'),
			    	   intro: "<div style='border-bottom:1px solid black'><label>Leave Details section</label></div>"+
			    	   "<div style='text-align:left'>Dates selected using Monthly calendar will be populated in this section. The remaining mandatory fields need to be filled for applying leave.</div>",
			    	   position: "top",

			       },
			       {   
			    	   element: document.querySelector('#uploadRow'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Upload Documents</label></div>"+
			    	   "<div style='text-align:left'>This section helps in uploading supporting documents for leave. It can be done in two ways:" +
			    	   "<br><span style='color:orange'>1.&nbsp;</span>Drag and Drop documents," +
			    	   "<br><span style='color:orange'>2.&nbsp;</span>Browse and upload.</div>",
			    	   position: "top",

			       },
			       {   
			    	   element: document.querySelector('#submitRow'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Leave Request Submission</label></div>"+
			    	   "<div style='text-align:left'>Once all mandatory fields are filled, Submit will be enabled.<br>One can also save the leave details as a draft.<br>Provision to reset all leave details is also provided</div> ",
			    	   position: "top",
			       },
			       {   
			    	   element: document.querySelector('#countryFlagdiv'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Applicable Country</label></div>"+
			    	   "<div style='text-align:left'>Country Flag and Country Name represents the country-specific leave types applicable for you.</div>",
			    	   position: "left",


			       },
			       {   
			    	   element: document.querySelector('#quickApplyRow'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Quick Apply Link</label></div>"+
			    	   "<div style='text-align:left'>Quick Apply link will invoke the Quick Apply feature for applying single day leave.</div>",
			    	   position: "left",


			       },
			       {   
			    	   element: document.querySelector('#quickApplyFeatures'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Quick Apply</label></div>"+
			    	   "<div style='text-align:left'>Using Quick Apply, 1-day leave application can be done in 3 clicks. <br> " +
			    	   "<span style='color:orange'>1.&nbsp;</span>Select Leave Type, <br>" +
			    	   "<span style='color:orange'>2.&nbsp;</span>Select Leave Date,<br>" +
			    	   "<span style='color:orange'>3.&nbsp;</span>Confirm and submit.</div>",
			    	   position: "bottom",

			       },
			       {   
			    	   element: document.querySelector('#planLeave'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Plan Leave Link</label></div>"+
			    	   "<div style='text-align:left'>Plan Leave link will invoke the Plan Leave feature which will help in informing your supervisor about your future leave plans.</div>",
			    	   position: "top",

			       },
			       {   
			    	   element: document.querySelector('#planlevRow'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Plan Leave</label></div>"+
			    	   "<div style='text-align:left'>You may select Leave Dates from the Monthly Calendar and provide appropriate comments and click Submit.<br>" +
			    	   "Provision is given to edit or delete previously planned leaves.</div>",
			    	   position: "bottom",

			       },
			       {   
			    	   element: document.querySelector('#yearlyDiv'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Yearly View Calendar Link</label></div>"+
			    	   "<div style='text-align:left'>Yearly View Calendar Link invokes the Yearly Calendar feature.</div>",
			    	   position: "right",

			       },
			       {   
			    	   element: document.querySelector('#calenderRow'),
			    	   intro: " <div style='border-bottom:1px solid black'><label>Yearly View Calendar</label></div>"+
			    	   "<div style='text-align:left'>Yearly View Calendar gives a pictorial representation of holidays, weekends and leaves for the previous, current and next calendar year.</div>",
			    	   position: "bottom",

			       }],
			       showStepNumbers: false,
			       showBullets: false,
			       exitOnOverlayClick: true,
			       exitOnEsc:true,
			       nextLabel: '<span style="font-size:13px">Next >></span>',
			       prevLabel: '<span style="font-size:13px"><< Back</span>',
			       skipLabel: '<span style="font-size:13px">Skip</span>',
			       doneLabel: '<span style="font-size:13px">Done</span>'
	};

//	Take a tour Code ends here-------------------------------------------------------------------------------------------------

	$rootScope.isDraftReq=true;
	commonAppLevService.copyToNewList="Lev_110917189";
	//Draft req code------------
	//if($rootScope.isDraftReq && !("undefined"==commonAppLevService.copyToNewList)){
		/*$http.post("/leaverest/rest/fyaLeaveDetail/Lev_110917189/T").success(
				function(data) {
					
				});*/
		/*$scope.leave.leaveList1[0].newLeave.startDate
		$scope.leave.leaveList1[0].newLeave.endDate
		$scope.leave.leaveList1[0].newLeave.leaveTypeName
		$scope.leave.leaveList1[0].newLeave.reason
		$scope.leave.leaveList1[0].newLeave.noOfDays
		$scope.leave.leaveList1[0].newLeave.attribute1_Name
		$scope.leave.leaveList1[0].newLeave.attribute1_Value
		$scope.leave.leaveList1[0].newLeave.attribute2_Name
		$scope.leave.leaveList1[0].newLeave.attribute2_Value
		$scope.leave.leaveList1[0].newLeave.attribute3_Name
		$scope.leave.leaveList1[0].newLeave.attribute3_Value*/
	//}
	                  	
}]);

//ApplyLeaveCtrl Controller ends---------------------------------------------




//AddressPanelCtrl for panels used for address selection----------------------
app.controller('YearlyViewCtrl', ['$scope','$location','$http','$q','$compile','$modal', '$log','$rootScope','commonAppLevService','applyLevService','quickLeaveService','WeekendService',function($scope,$location, $http,$q,$compile,$modal, $log,$rootScope,commonAppLevService,applyLevService,quickLeaveService,WeekendService)
{
	
	$rootScope.buildYearlyView = function() {
		
		$scope.loading = true;
		$scope.months = [];
		$scope.empAllYearCalView = [];
		var curYear = new Date().getFullYear();

		
		
		
		
		
		var calYearKeys=Object.keys(commonAppLevService.yearlist);
		calYearKeys.sort();
		for(var index=0;index<3;index++){
			$scope.months = [];
			
			var lookupValuesList=angular.copy(commonAppLevService.yearlist);
			
			angular.forEach(lookupValuesList[calYearKeys[index]], function (option, index2){
				lookupValuesList[calYearKeys[index]][index2].sd=applyLevService.convertMilliToISTMilli(lookupValuesList[calYearKeys[index]][index2].sd);
		 		 if(!(0==lookupValuesList[calYearKeys[index]][index2].ed))
		 			lookupValuesList[calYearKeys[index]][index2].ed=applyLevService.convertMilliToISTMilli(lookupValuesList[calYearKeys[index]][index2].ed);
			});
			
			
			
			for ( var i = 0; i < 12; i++) 
			{
			$scope.currentDate = moment([ calYearKeys[index] ]);
			$scope._buildMonth($scope.currentDate.month(i).date(1).day(0).hour(0).minute(0).second(0).millisecond(0),moment().month(i),calYearKeys[index],lookupValuesList);
			$scope.months.push({monthName:$scope.currentDate.month(i).format('MMMM'),weeks : $scope.weeks});
			};

			$scope.empAllYearCalView.push({year : calYearKeys[index],calData : $scope.months,isActive : parseInt(calYearKeys[index]) === curYear ? true:false});
			
		};

$rootScope.pagination($scope.empAllYearCalView,1,'paginationSelect',1);
$("#yearViewModal").modal('show');

$scope.loading = false;
};

$scope._buildMonth = function(start, month,year,lookupValuesList) {
$scope.weeks = [];
$scope.holidayList = [];

var done = false, date = start.clone(), monthIndex = date.month(), count = 0;
while (!done) {
$scope.weeks.push({
days : $scope._buildWeek(date.clone(), month,year,lookupValuesList)
});
date.add(1, "w");
done = count++ > 2 && monthIndex !== date.month();
monthIndex = date.month();
};
};



//method to build weeks for calendar months
$scope._buildWeek = function(date, month,year,lookupValuesList) {
$scope.days = [];

for ( var i = 0; i < 7; i++) {
	 var dayPushed=false;
$scope.days.push({
name : date.format("dd").substring(0, 1),
number : date.date(),
isCurrentMonth : date.month() === month.month(),
isToday : date.isSame(moment(), "day"),
date : date,
});
for(year in lookupValuesList){
angular.forEach(lookupValuesList[year], function (option, index){
		 var localEDate=null,localSDate;
 		var dateToCompare =date.toDate().getTime();
 		localSDate=lookupValuesList[year][index].sd;
 		 if(!(0==lookupValuesList[year][index].ed))
 			 localEDate=lookupValuesList[year][index].ed;
		 if((localSDate<=dateToCompare) && (localEDate>=dateToCompare)){
		    $scope.days[$scope.days.length-1].holLevDescription=lookupValuesList[year][index].desc;
  			$scope.days[$scope.days.length-1].holLevType=lookupValuesList[year][index].typ;
  			$scope.days[$scope.days.length-1].status=lookupValuesList[year][index].status;
  			
  		}; 
		 if((localSDate==dateToCompare)){
				$scope.days[$scope.days.length-1].holLevDescription=lookupValuesList[year][index].desc;
				$scope.days[$scope.days.length-1].holLevType=lookupValuesList[year][index].typ;
				$scope.days[$scope.days.length-1].status=lookupValuesList[year][index].status;
				
		   };
	});
};


date = date.clone();
date.add(1, "d");
}
return $scope.days;

};



}]);


});