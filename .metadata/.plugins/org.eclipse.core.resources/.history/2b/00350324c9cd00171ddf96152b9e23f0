define(['angular','app','moment','displayMenu','jqueryui','bootstrap','applyLevServices','applyLevFactories','angular-datepicker'], function(angular,app,moment) {


	
	app.directive('validateSplandate',function($rootScope,commonAppLevService,applyLevService,WeekendService,AddClassService,ValidateDtService){
		return{
				restrict : 'A',
				link : function($scope, element, attrs) {
					$scope.$watch('[leave.planList[$index].planLeave.startDate]',function(newValue,oldValue) {
						
						
						var canRemoveHoverDiv=true;
						//$scope.$parent.showPlanSuccess=true;
						
						if(!(newValue[0]==undefined)){
							var oldSDateValid=true;
						//	$scope.$parent.showPlanSuccess=false;
						var newSDate=applyLevService.convertToMomentObj(newValue[0]);
						var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
						$rootScope.planDateValid=true;
							for(var key=0;key<$scope.leave.planList.length;key++){
								
								if(!(key==attrs.index)){
								var sPlanDate=applyLevService.convertToMomentObj($scope.leave.planList[key].planLeave.startDate);
								var ePlanDate=applyLevService.convertToMomentObj($scope.leave.planList[key].planLeave.endDate);
								
								
								if(sPlanDate._d.getTime()<=newSDate._d.getTime() && ePlanDate._d.getTime()>=newSDate._d.getTime() )
									{
									$rootScope.planDateValid=false;
								$scope.leave.planList[attrs.index].errorSPlanDate="You are applying plan on planned leave!!";
								element.addClass('dirty-field');
				    			 break;
									}else
									$rootScope.planDateValid=true;
								
								
								if(!(undefined==$scope.leave.planList[attrs.index].planLeave.endDate) && $rootScope.planDateValid){
									var newEDate=applyLevService.convertToMomentObj($scope.leave.planList[attrs.index].planLeave.endDate);
									//selected start date and with its end date both are either greater than planned end date or less than planned start date then its valid
									if((newSDate._d.getTime()>ePlanDate._d.getTime() && newEDate._d.getTime()>ePlanDate._d.getTime()) 
									||(newSDate._d.getTime()<sPlanDate._d.getTime()&& newEDate._d.getTime()<sPlanDate._d.getTime())){
										$rootScope.planDateValid=true;
									}else{
										$rootScope.planDateValid=false;
									$scope.leave.planList[attrs.index].errorSPlanDate="Date selected is not valid!!";
									element.addClass('dirty-field');
					    			 break;
									};
									
									
									
									if(!((newSDate._d.getTime()>=ePlanDate._d.getTime() && oldSDate._d.getTime()<=ePlanDate._d.getTime()) 
											||(newSDate._d.getTime()>=sPlanDate._d.getTime()&& oldSDate._d.getTime()<=sPlanDate._d.getTime()))){
										if(canRemoveHoverDiv)
										canRemoveHoverDiv=true;
											}else{
												canRemoveHoverDiv=false;
											};
									
									
									
									
								};
									
								
								
								
								
								
								
								
								if(sPlanDate._d.getTime()<=oldSDate._d.getTime() && ePlanDate._d.getTime()>=oldSDate._d.getTime())
									oldSDateValid=false;
								else{
									if(oldSDateValid)
									oldSDateValid=true;
								};
								};
							};
					
						
							if(!(newValue[0]==oldValue[0]) && oldSDateValid)
								$(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
						
						
						
						if($rootScope.planDateValid)
					{
						$(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
						
			    	     $(".day"+ newSDate._d.getTime()).removeClass("hoverDiv");
			    	     commonAppLevService.selectedPlanDates[parseInt(attrs.index)*2]=newSDate;
			    	     $scope.leave.planList[attrs.index].errorMsg='';
			    	     $scope.leave.planList[attrs.index].serverMsg='';
			    	     $scope.leave.planList[attrs.index].errorSPlanDate='';
			    	     element.removeClass('dirty-field');
			    	     $rootScope.startPlanDateSelected = true;
						};
						};
						
		if(!(oldValue[0]==undefined) && !(newValue[0]==undefined) && $rootScope.planDateValid && canRemoveHoverDiv)
		{
							var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
							var newSDate=applyLevService.convertToMomentObj(newValue[0]);
							if(newSDate > oldSDate)
							{
								while ( newSDate._d.getTime() > oldSDate._d.getTime()) {
				    			 var tempTimeStamp = newSDate._d.getTime();
				    			 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
				    			 newSDate = newSDate.add(-1,'d');
							};
						};
			};
			 sDate= applyLevService.convertToMomentObj(newValue[0]);  //convert to moment object
			 
					    	 if(!(newValue[0]==undefined) && $rootScope.planDateValid)
					    	 {
					    		 var innerValidator=true; // if true then the middle selected dates are also valid dates
					    	 
					    		 if(!($scope.leave.planList[attrs.index].planLeave.endDate==undefined)/*&& 
					    				 ($scope.leave.planList[attrs.index].errorEDate=="")*/)
					 			{
					    			 var sdTime=applyLevService.convertToMomentObj(newValue[0]);
					 				 var edTime=applyLevService.convertToMomentObj($scope.leave.planList[attrs.index].planLeave.endDate);
					 				 
					 				 if((sdTime._d.getTime() <= edTime._d.getTime()))
					 				 {
									var tempDate = applyLevService.convertToMomentObj($scope.leave.planList[attrs.index].planLeave.endDate);
									tempDate = tempDate.add(-1,'d');
									
									var isValid=ValidateDtService.isMidStPlanValid($scope,tempDate,sDate,attrs.index);
									if(!isValid){
										innerValidator=false;
						    			 $rootScope.startPlanDateSelected = false;
									};
									
									if(innerValidator){
										AddClassService.addHoverDivCss(sdTime,edTime);
									}
									
					 			} else{
					 				$scope.leave.planList[attrs.index].planLeave.endDate=undefined;
					 				commonAppLevService.selectedPlanDates[parseInt((attrs.index)*2)+1]=undefined;
					 				};
					 			
					 				
					 			};
									
								
								};
					    	 
					}, true);
				}
			}
			
			
			
		});

	app.directive('validateEplandate',function($rootScope,commonAppLevService,applyLevService,WeekendService,AddClassService,ValidateDtService){
		
	return{
			restrict : 'A',
			link : function($scope, element, attrs) {

				$scope.$watch('[leave.planList[$index].planLeave.endDate]',function(newValue,oldValue) {
				
					
					if(!(newValue[0]==undefined)){
						var oldEDateValid=true;
						
					var newEDate=applyLevService.convertToMomentObj(newValue[0]);
					var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
					$rootScope.planDateValid=true;
						for(var key=0;key<$scope.leave.planList.length;key++){
							if($scope.leave.planList.length==1){
								var ePlanDate=applyLevService.convertToMomentObj($scope.leave.planList[key].planLeave.endDate);
								var sPlanDate=applyLevService.convertToMomentObj($scope.leave.planList[key].planLeave.startDate);
								if(!(oldValue[0]==undefined) && !(newValue[0]==undefined) && $rootScope.planDateValid)
								{
													
													var tempEDate=applyLevService.convertToMomentObj(newValue[0]);
													if(tempEDate < oldEDate)
													{
														while ( tempEDate._d.getTime() < oldEDate._d.getTime()) {
										    			 var tempTimeStamp = tempEDate._d.getTime();
										    			 
										    			 
										    			 if(!((tempTimeStamp<=ePlanDate._d.getTime()) 
																	&&(tempTimeStamp>=sPlanDate._d.getTime()))){
										    				 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
																	};
										    			 
										    			 
										    			 
										    			
																	tempEDate = tempEDate.add(1,'d');
													};
												};
									};
							};
							
							if(!(key==attrs.index)){
							var sPlanDate=applyLevService.convertToMomentObj($scope.leave.planList[key].planLeave.startDate);
							var ePlanDate=applyLevService.convertToMomentObj($scope.leave.planList[key].planLeave.endDate);
							
							
							if(sPlanDate._d.getTime()<=newEDate._d.getTime() && ePlanDate._d.getTime()>=newEDate._d.getTime() )
								{
								$rootScope.planDateValid=false;
							$scope.leave.planList[attrs.index].errorEPlanDate="You are applying plan on planned leave!!";
							element.addClass('dirty-field');
			    			// break;
								}else if($rootScope.planDateValid)
								$rootScope.planDateValid=true;
							
							
							if(!(undefined==$scope.leave.planList[attrs.index].planLeave.startDate) && $rootScope.planDateValid){
								var newSDate=applyLevService.convertToMomentObj($scope.leave.planList[attrs.index].planLeave.startDate);
								//selected start date and with its end date both are either greater than planned end date or less than planned start date then its valid
								if((newEDate._d.getTime()>ePlanDate._d.getTime() && newSDate._d.getTime()>ePlanDate._d.getTime()) 
								||(newEDate._d.getTime()<sPlanDate._d.getTime()&& newSDate._d.getTime()<sPlanDate._d.getTime()) && $rootScope.planDateValid){
									$rootScope.planDateValid=true;
								}else if($rootScope.planDateValid){
									$rootScope.planDateValid=false;
								$scope.leave.planList[attrs.index].errorEPlanDate="Date selected is not valid!!";
								element.addClass('dirty-field');
				    			// break;
								};
								
								
								/*
								if(!((newEDate._d.getTime()<=ePlanDate._d.getTime() && oldEDate._d.getTime()>=ePlanDate._d.getTime()) 
										||(newEDate._d.getTime()<=sPlanDate._d.getTime()&& oldEDate._d.getTime()>=sPlanDate._d.getTime()))){
									if(canRemoveHoverDiv)
									canRemoveHoverDiv=true;
										}else{
											canRemoveHoverDiv=false;
										};*/
								
										if(!(oldValue[0]==undefined) && !(newValue[0]==undefined) && $rootScope.planDateValid)
										{
															
															var tempEDate=applyLevService.convertToMomentObj(newValue[0]);
															if(tempEDate < oldEDate)
															{
																while ( tempEDate._d.getTime() < oldEDate._d.getTime()) {
												    			 var tempTimeStamp = tempEDate._d.getTime();
												    			 
												    			 
												    			 if(!((tempTimeStamp<=ePlanDate._d.getTime()) 
																			&&(tempTimeStamp>=sPlanDate._d.getTime()))){
												    				 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
																			};
												    			 
												    			 
												    			 
												    			
																			tempEDate = tempEDate.add(1,'d');
															};
														};
											};
								
								
							};
								
							
							
							
							
							
							
							
							if(sPlanDate._d.getTime()<=oldEDate._d.getTime() && ePlanDate._d.getTime()>=oldEDate._d.getTime())
								oldEDateValid=false;
							else{
								if(oldEDateValid)
								oldEDateValid=true;
							};
							};
						};
				
					
						if(!(newValue[0]==oldValue[0]) && oldEDateValid){
						
							$(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
							
							if(((attrs.index)*2)+1==commonAppLevService.selectedPlanDates.length-1)
			 				commonAppLevService.selectedPlanDates.splice(parseInt((attrs.index)*2)+1,1);
			 				else
			 				commonAppLevService.selectedPlanDates[parseInt((attrs.index)*2)+1]=undefined;
						
						}
					
					if($rootScope.planDateValid)
				{
					$(".day"+ newEDate._d.getTime()).addClass("hoverDivEnd");
					
		    	     $(".day"+ newEDate._d.getTime()).removeClass("hoverDiv");
		    	     commonAppLevService.selectedPlanDates[parseInt(attrs.index)*2 +1]=newEDate;
		    	     $scope.leave.planList[attrs.index].errorMsg='';
		    	     $scope.leave.planList[attrs.index].serverMsg='';
		    	     $scope.leave.planList[attrs.index].errorEPlanDate='';
		    	     element.removeClass('dirty-field');
		    	    
					};
					};
					
	
		 eDate= applyLevService.convertToMomentObj(newValue[0]);  //convert to moment object
		 
				    	 if(!(newValue[0]==undefined) && $rootScope.planDateValid)
				    	 {
				    		 var innerValidator=true; // if true then the middle selected dates are also valid dates
				    	 
				    		 if(!($scope.leave.planList[attrs.index].planLeave.startDate==undefined)/*&& 
				    				 ($scope.leave.planList[attrs.index].errorEDate=="")*/)
				 			{
				    			 var edTime=applyLevService.convertToMomentObj(newValue[0]);
				 				 var sdTime=applyLevService.convertToMomentObj($scope.leave.planList[attrs.index].planLeave.startDate);
				 				 
				 				 if((edTime._d.getTime() >= sdTime._d.getTime()))
				 				 {
								var tempDate = applyLevService.convertToMomentObj(newValue[0]);
								tempDate = tempDate.add(-1,'d');
								
								var isValid=ValidateDtService.isMidStPlanValid($scope,tempDate,sdTime,attrs.index);
								if(!isValid){
									innerValidator=false;
					    			// $rootScope.startPlanDateSelected = false;
								};
								
								if(innerValidator){
									AddClassService.addHoverDivCss(sdTime,edTime);
									
								}
								
				 			} else{
				 				$scope.leave.planList[attrs.index].planLeave.endDate=undefined;
				 				if(((attrs.index)*2)+1==commonAppLevService.selectedPlanDates.length-1)
				 					commonAppLevService.selectedPlanDates.splice(parseInt((attrs.index)*2)+1,1);
				 				else
				 				commonAppLevService.selectedPlanDates[parseInt((attrs.index)*2)+1]=undefined;
				 				
				 				$(".day"+ newEDate._d.getTime()).removeClass("hoverDivEnd");
				 				$scope.leave.planList[attrs.index].errorEPlanDate='You cannot select end date smaller than start date.';
				 				
				 				};
				 			
				 				
				 			};
								
							
							};
				    	 
				}, true);
			
				
				
				
				
				
				
			}
		};
		
		
		
	});




	
	app.directive('validateSdate',function($rootScope,commonAppLevService,applyLevService,WeekendService,AddClassService,ValidateDtService,leaveCalendarService){
	return{
			restrict : 'A',
			link : function($scope, element, attrs) {
				$scope.$watch('[leave.leaveList1[$index].newLeave.startDate,leave.leaveList1[$index].newLeave.startDuration]',function(newValue,oldValue) {
					$scope.leave.leaveList1[attrs.index].fullday=false;
					var holidayValidator=true;
					$scope.leave.leaveList1[attrs.index].selectedSdate=false;
					$scope.leave.leaveList1[attrs.index].shalfCheck=false;
					$scope.leave.leaveList1[attrs.index].sEmpty=false;
					var sDuration=newValue[1];
					if(newValue[0]==undefined){
					var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
					$(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
					};//added for flexi 
					
					if(!(newValue[0]==undefined)){
					var newSDate=applyLevService.convertToMomentObj(newValue[0]);
				
					commonAppLevService.selectedDates[parseInt(attrs.index)*2]=newSDate;
					if(leaveCalendarService.checkFlag){
						Array.prototype.insert = function (index, item) {
							  this.splice(index,0,item);
					    };
						commonAppLevService.selectedDates.insert((parseInt((attrs.index)*2+1)),undefined);
						leaveCalendarService.checkFlag=false;
						if($scope.leave.leaveList1[attrs.index].errorEDate!=""){
							$scope.leave.leaveList1[attrs.index].errorEDate='';
							 var field=angular.element($("#endDate_"+attrs.index));
							 field.removeClass('dirty-field');
						  }
					}
		        	/////////To check if already hover div is applied over the selected date or not
		if(commonAppLevService.selectedDates[(parseInt((attrs.index)*2+1))]!=undefined){	
		 if(attrs.index>0){
					  var listSize=commonAppLevService.selectedDates.length;
					
			          if(listSize==2){
					   if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
						 //do nothing
				    	}
					    else {
						  $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
						 }
			         }else if(listSize==4 ){
			    	    
					    if( newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()||
							newSDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
						     if($(".day"+ newSDate._d.getTime()).hasClass("hoverDiv") || $(".day"+ newSDate._d.getTime()).hasClass("hoverDivEnd")) {
							  $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
						      }else{
							   //do nothing
						    	}
					     }else {
						  $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
					      }
				 }else if(listSize==6 ){
					    if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()||
							newSDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()||
							newSDate._d.getTime()>(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
						     if($(".day"+ newSDate._d.getTime()).hasClass("hoverDiv")) {
							  $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
						     }else if($(".day"+ newSDate._d.getTime()).hasClass("hoverDivEnd")){
							  $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
						      }else{
							//do nothing
						      }  
					    }else {
						    $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
					     }
			 } else {
						  $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
					  }
		 }else{
			 $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
         }
		}else{
			 $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
        }
		    	    
		    	     $scope.leave.leaveList1[attrs.index].errorMsg='';
		    	     $scope.leave.leaveList1[attrs.index].serverErrMsg='';
		    	     $scope.leave.leaveList1[attrs.index].errorSDate='';
		    	     element.removeClass('dirty-field');
		    	     $rootScope.startDateSelected = true;
					};
	if(commonAppLevService.selectedDates[(parseInt((attrs.index)*2+1))]!=undefined)		
	if(!(oldValue[0]==undefined) && !(newValue[0]==undefined))
	{
						var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
						var newSDate=applyLevService.convertToMomentObj(newValue[0]);
						 var listSize=commonAppLevService.selectedDates.length;
						if(newSDate > oldSDate)
						{
						if(attrs.index==0)
						$(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
//code for phase 2-----------------
						if($(".day"+ oldSDate._d.getTime()).hasClass("hoverDivStart"))
						{
						  if(commonAppLevService.selectedDates.length>1)
						    for(var i=0; i<commonAppLevService.selectedDates.length;i++)
						    {
						    	if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))//this will allow all values in commonAppLevService.selectedDates except the current row's.
						    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldSDate.format("DD-MMM-YYYY")))//allow only if current startdate matches with start date / end date of any other row
						    		 {
						    			 if(!($scope.leave.leaveList1[attrs.index].errorSDate=="This date coincides with an already selected leave duration. Please choose some other date."))
						    			 $(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
						    			 if( $(".day"+ oldSDate._d.getTime()).hasClass("hoverDiv")){
						    				 $(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
						    				 if(listSize==4){
					    					 $(".day"+ oldSDate._d.getTime()).removeClass("hoverDiv"); 
						    				 }
						    			
						    			 }
						    			 $rootScope.startDateSelected = false;
						    		}else{
						    			if( $(".day"+ oldSDate._d.getTime()).hasClass("hoverDivEnd")){
						    				break;
						    			}else{
						    				 $(".day"+ oldSDate._d.getTime()).addClass("hoverDivStart");
							    			 break;
						    			}
						    			
						    		 };
						    	 };
						}else{
                                if(commonAppLevService.selectedDates.length>2)
							    for(var i=0; i<commonAppLevService.selectedDates.length;i++)
							    {
							    	if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))//this will allow all values in commonAppLevService.selectedDates except the current row's.
							    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldSDate.format("DD-MMM-YYYY")))//allow only if current startdate matches with start date / end date of any other row
							    		 {
							    			  $(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
							    		 }else{
							    			 $(".day"+ oldSDate._d.getTime()).addClass("hoverDivStart");
							    			 break;
							    		 };
							    	 };
						   };
//code for phase 2 ends-----------------	
		   if(listSize==2){
				 while ( oldSDate._d.getTime() < newSDate._d.getTime() ) {
				     var tempTimeStamp =oldSDate._d.getTime();
				     $(".day"+ tempTimeStamp).removeClass("hoverDiv");
				    oldSDate = oldSDate.add(1,'d');
				  }
			}				
			if(listSize==4){
		    if(attrs.index==0){
		    	if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
					$scope.leave.leaveList1[attrs.index].errorSDate="";
					$scope.leave.leaveList1[attrs.index].errorEDate="";
	    			 element.removeClass("dirty-field");
	    			  while ( oldSDate._d.getTime() < newSDate._d.getTime() ) {
						     var tempTimeStamp =newSDate._d.getTime();
						     if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
						    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }
						         newSDate = newSDate.add(-1,'d');
						  }
				}else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
					 while ( oldSDate._d.getTime() < newSDate._d.getTime() ) {
					     var tempTimeStamp =oldSDate._d.getTime();
					     if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
					    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
					     }
					     oldSDate = oldSDate.add(1,'d');
					  }
					 $scope.leave.leaveList1[attrs.index].errorEDate="";
					 var field=angular.element($("#endDate_"+attrs.index));
			    	 field.removeClass('dirty-field');
					
				}else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
					 while ( oldSDate._d.getTime() < newSDate._d.getTime() ) {
					     var tempTimeStamp =newSDate._d.getTime();
					     if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
					    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
					     }else{
					    	 break;
					     }
					     newSDate = newSDate.add(-1,'d');
					  }
					 while ( oldSDate._d.getTime() < newSDate._d.getTime() ) {
					     var tempTimeStamp =oldSDate._d.getTime();
					     if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
					    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
					     }
					     oldSDate = oldSDate.add(1,'d');
					  }
					 $scope.leave.leaveList1[attrs.index].errorEDate="";
					 var field=angular.element($("#endDate_"+attrs.index));
			    	 field.removeClass('dirty-field');
				}else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime()
						&& newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime()){
					$scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
					element.addClass("dirty-field");
					 holidayValidator=false;
	    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
					while ( newSDate._d.getTime() >= oldSDate._d.getTime()) {
			    		 var tempTimeStamp = oldSDate._d.getTime();
			    		 $(".day"+ tempTimeStamp).addClass("hoverDiv");
			    		 oldSDate = oldSDate.add(1,'d');
						};
						
				}else{
					 while ( newSDate._d.getTime() >= oldSDate._d.getTime()) {
			    		 var tempTimeStamp = newSDate._d.getTime();
			    		 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
			    		 newSDate = newSDate.add(-1,'d');
						};
					 }
		    }else{
		    	if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
					 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
	    			 element.addClass("dirty-field");
	    			 durationValidator=false;
	    			 holidayValidator=false;
	    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
	    			 var field=angular.element($("#endDate_"+attrs.index));
			    	 field.removeClass('dirty-field');
				     while ( newSDate._d.getTime() > oldSDate._d.getTime() ) {
				     var tempTimeStamp = newSDate._d.getTime();
				     if(newSDate._d.getTime()<commonAppLevService.selectedDates[0]._d.getTime())
				     $(".day"+ tempTimeStamp).removeClass("hoverDiv");
				     newSDate = newSDate.add(-1,'d');
				     
				  }
				     if((commonAppLevService.selectedDates[3])._d.getTime()>(commonAppLevService.selectedDates[1])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
				    	 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
				    	 var field=angular.element($("#endDate_"+attrs.index));
				    	 field.removeClass('dirty-field');
		    		//	 element.removeClass("dirty-field");
				     }
				}else  if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
				    	  while ( oldSDate._d.getTime() < newSDate._d.getTime() ) {
							     var tempTimeStamp =oldSDate._d.getTime();
							     if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[1])._d.getTime()){
							    	  $(".day"+ tempTimeStamp).addClass("hoverDiv");
							     }else{
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							     }
							    
				              	oldSDate = oldSDate.add(1,'d');
							  }
				    	 
				}else if(oldSDate._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()>(commonAppLevService.selectedDates[1])._d.getTime()){
					  while ( oldSDate._d.getTime() < newSDate._d.getTime() ) {
						     var tempTimeStamp =oldSDate._d.getTime();
						     if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime() ){
						    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }else{
						    	 break;
						     }
						     oldSDate = oldSDate.add(1,'d');
						  }
					  while (oldSDate._d.getTime() < newSDate._d.getTime()) {
						     var tempTimeStamp =newSDate._d.getTime();
						     if( newSDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
						    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }else{
						    	 $scope.leave.leaveList1[attrs.index].errorEDate="";
						    	 var field=angular.element($("#endDate_"+attrs.index));
						    	 field.removeClass('dirty-field');
						    	 break;
						     }
						     newSDate = newSDate.add(-1,'d');
						  }
				}else{
					 while ( newSDate._d.getTime() >= oldSDate._d.getTime()) {
			    		 var tempTimeStamp = newSDate._d.getTime();
			    		 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
			    		 newSDate = newSDate.add(-1,'d');
						};
					 }
		    }
				
		
		   }	
			 if(listSize==6){
				 if(attrs.index==0){
					 var inx=-1;
					 if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
						inx=1; 
						$scope.leave.leaveList1[attrs.index].errorEDate="";
						var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
				    	 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
							inx=0;
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    newSDate = newSDate.add(-1,'d');
							}
					  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
						  inx=0;
						  $scope.leave.leaveList1[attrs.index].errorEDate="";
						  var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = oldSDate._d.getTime();
								    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }else{
								    		  break;
								    	  }
								    oldSDate = oldSDate.add(1,'d');
							}
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    newSDate = newSDate.add(-1,'d');
							}
						  var newEDate=applyLevService.convertToMomentObj(newValue[0]);
							var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
							if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()>oldEDate._d.getTime()){
							var startTime=(commonAppLevService.selectedDates[4]);
							var endTime=(commonAppLevService.selectedDates[5]);
							AddClassService.addHoverDivCss(startTime,endTime);
							}
					  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()
							  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
						 inx=1;
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).addClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
					  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
							inx=1; 
							$scope.leave.leaveList1[attrs.index].errorEDate="";
							var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = oldSDate._d.getTime();
								    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    oldSDate = oldSDate.add(1,'d');
							}
					}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
						inx=0;
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
				  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
					  inx=0;
					  $scope.leave.leaveList1[attrs.index].errorEDate="";
					  var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
					  while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{break;}
							    oldSDate = oldSDate.add(1,'d');
						}
					  while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
				  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()
						  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
						 inx=1;
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).addClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
				}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
						  inx=0;
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
			   }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
						  inx=0;
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
			    }else{
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
						  if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() ){
							  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
							  var field=angular.element($("#endDate_"+attrs.index)); field.addClass('dirty-field');
							   durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true; 
						  }
					  }
					 if(inx>0){
						 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
		    			 element.addClass("dirty-field");
		    			 durationValidator=false;
		    			 holidayValidator=false;
		    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true; 
					 }else if(inx==0){
						 $scope.leave.leaveList1[attrs.index].errorSDate="";
						 element.removeClass("dirty-field");
					 }
		     }else{
		    	 var inx=-1;
		         $scope.rowCheck=false; 	
		   
					 if( oldSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
						 $scope.rowCheck=true;
							inx=1;
			    			 $scope.leave.leaveList1[attrs.index].errorEDate="";
			    			 var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
						 
					 }
					 else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime()){
                         inx=3;
                         $scope.rowCheck=true;
				    	 $scope.leave.leaveList1[attrs.index].errorEDate="";
				    	 var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{
							    		  break;
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
							    	if(newSDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
							    		//do nothing
							    	}else{
							    		$(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	}
							     }else{
							    		  break;
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
						 var newEDate=applyLevService.convertToMomentObj(newValue[0]);
							var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
							if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()>oldEDate._d.getTime()){
							var startTime=(commonAppLevService.selectedDates[4]);
							var endTime=(commonAppLevService.selectedDates[5]);
							AddClassService.addHoverDivCss(startTime,endTime);
							}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()
							 && newSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() ){
						inx=0;
						$scope.rowCheck=true;
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{
							    		  break;
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
	                    if(!(newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime())){
	                    	if(newSDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
	                    		inx=1;
	                    	}else{
	                    		inx=0;
	                    	}
	                    	
	   	    			 
	                    }else{
	                    	inx=1;
	                    }
						 
		    			 $scope.leave.leaveList1[attrs.index].errorEDate="";
		    			 var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
						 
						 $scope.leave.leaveList1[attrs.index].errorEDate="";
						 var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>(commonAppLevService.selectedDates[3])._d.getTime() ){
						 $scope.leave.leaveList1[attrs.index].errorEDate="";
						 var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{break;}
							    oldSDate = oldSDate.add(1,'d');
						}
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() )
					    {
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							  
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	 
							    	 oldSDate = oldSDate.add(1,'d');
					    }
		
					}
				    if(attrs.index==1){
						   	
			    		 var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
						var newSDate=applyLevService.convertToMomentObj(newValue[0]);
						
			    		 if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
								inx=1; 
								$scope.leave.leaveList1[attrs.index].errorEDate="";
								var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
								 while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = oldSDate._d.getTime();
									    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
									    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    	  }
									    oldSDate = oldSDate.add(1,'d');
								}
							 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
									inx=0;
						            while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = newSDate._d.getTime();
										    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }
										    newSDate = newSDate.add(-1,'d');
									}
							  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
								  inx=0;
						          $scope.leave.leaveList1[attrs.index].errorEDate="";
								  var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
							
								  while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = oldSDate._d.getTime();
										    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }else{
										    		  break;
										    	  }
										    oldSDate = oldSDate.add(1,'d');
									}
								  while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = newSDate._d.getTime();
										    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }
										    newSDate = newSDate.add(-1,'d');
									}
								  var newEDate=applyLevService.convertToMomentObj(newValue[0]);
									var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
									if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()>oldEDate._d.getTime()){
									var startTime=(commonAppLevService.selectedDates[0]);
									var endTime=(commonAppLevService.selectedDates[1]);
									AddClassService.addHoverDivCss(startTime,endTime);
									}
							  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()
									  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
								 inx=1;
								/* if($scope.dcheck){
									 $scope.leave.leaveList1[attrs.index].errorEDate="";
									  var field=angular.element($("#endDate_"+attrs.index)); field.removeClass('dirty-field');
									 while(newSDate._d.getTime()>(commonAppLevService.selectedDates[4])._d.getTime()){
										 var tempTimeStamp = newSDate._d.getTime();
										   $(".day"+ tempTimeStamp).addClass("hoverDiv");
										    newSDate = newSDate.add(-1,'d');
									}
								 }*/
								 while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = newSDate._d.getTime();
									   $(".day"+ tempTimeStamp).addClass("hoverDiv");
									    newSDate = newSDate.add(-1,'d');
								}
							  }else{
								  if(inx==3 || $scope.rowCheck){
									  //do nothing
								  }else{
									  while(newSDate._d.getTime()>oldSDate._d.getTime()){
											 var tempTimeStamp = newSDate._d.getTime();
											   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
											    newSDate = newSDate.add(-1,'d');
										} 
								  }
								  
								  if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
									  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
									  var field=angular.element($("#endDate_"+attrs.index)); field.addClass('dirty-field');
						    			 durationValidator=false;
						    			 holidayValidator=false;
						    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true; 
									    
								  }
							  }
			    		
			    	 }else{
			    		 if($scope.rowCheck){
			    			 //do nothing
			    		 }else{
			    			  while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = oldSDate._d.getTime();
									  
									    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    	 
									    	 oldSDate = oldSDate.add(1,'d');
							    }
							
			    		 }
			    		 var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
						  var newSDate=applyLevService.convertToMomentObj(newValue[0]);
						if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime() &&  (commonAppLevService.selectedDates[5])._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){

							$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
							 var field=angular.element($("#endDate_"+attrs.index)); field.addClass('dirty-field');
			    			 durationValidator=false;
			    			 holidayValidator=false;
			    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true; 
						}
					}
					 if(inx>0){
						 if(inx==3){
							 //do nothing 
						 }else{
							 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
		    			 element.addClass("dirty-field");
		    			 durationValidator=false;
		    			 holidayValidator=false;
		    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
		    			 }
						  
					 }else if(inx==0){
						 $scope.leave.leaveList1[attrs.index].errorSDate="";
						 element.removeClass("dirty-field");
					 }
				 }
			 }
			 if(listSize==8){
				 if(attrs.index==0){

					 var inx=-1;
					 if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
						inx=1; 
						$scope.leave.leaveList1[attrs.index].errorEDate="";
						var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
							inx=0;
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    newSDate = newSDate.add(-1,'d');
							}
					  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
						  inx=0;
						  $scope.leave.leaveList1[attrs.index].errorEDate="";
						  var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = oldSDate._d.getTime();
								    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }else{
								    		  break;
								    	  }
								    oldSDate = oldSDate.add(1,'d');
							}
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    newSDate = newSDate.add(-1,'d');
							}
					  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()
							  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
						 inx=1;
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).addClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
					  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
							inx=1; 
							$scope.leave.leaveList1[attrs.index].errorEDate="";
							var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = oldSDate._d.getTime();
								    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    oldSDate = oldSDate.add(1,'d');
							}
					}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
						inx=0;
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
				  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
					  inx=0;
					  $scope.leave.leaveList1[attrs.index].errorEDate="";
					  var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
					  while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{break;}
							    oldSDate = oldSDate.add(1,'d');
						}
					  while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
				  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
					inx=1; 
					$scope.leave.leaveList1[attrs.index].errorEDate="";
					var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
					 while(newSDate._d.getTime()>oldSDate._d.getTime()){
						 var tempTimeStamp = oldSDate._d.getTime();
						    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						    	  }
						    oldSDate = oldSDate.add(1,'d');
					}
				 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
						inx=0;
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
				  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
					  inx=0;
					  $scope.leave.leaveList1[attrs.index].errorEDate="";
					  var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
					  while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{
							    		  break;
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
					  while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
				  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()
						  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
					 inx=1;
					  while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							   $(".day"+ tempTimeStamp).addClass("hoverDiv");
							    newSDate = newSDate.add(-1,'d');
						}
				  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()
						  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
						 inx=1;
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).addClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
				}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
					   if(!(newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()))	{
							$scope.leave.leaveList1[attrs.index].errorSDate="";
			    			 element.removeClass("dirty-field");
						}else{
							inx=0;
						}
							  while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = newSDate._d.getTime();
									   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    newSDate = newSDate.add(-1,'d');
								}
				  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
					if(!(newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()))	{
						$scope.leave.leaveList1[attrs.index].errorSDate="";
		    			 element.removeClass("dirty-field");
					}else{
						inx=0;
					}
					
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
			   }else{
						  while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							}
						  if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() ){
							  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
							  var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true; 
						  }
					  }
					 if(inx>0){
						 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
		    			 element.addClass("dirty-field");
		    			 durationValidator=false;
		    			 holidayValidator=false;
		    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true; 
					 }else if(inx==0){
						 $scope.leave.leaveList1[attrs.index].errorSDate="";
						 element.removeClass("dirty-field");
					 }
		     
				 }else{
					 var inx=-1;
					 if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
						    inx=1;
			    			 $scope.leave.leaveList1[attrs.index].errorEDate="";
			    			 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
						 
					 }
					 else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime()){
						inx=3;
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{
							    		  break;
							    	  }
							    oldSDate = oldSDate.add(1,'d');
							    if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime()){
							    	 $scope.leave.leaveList1[attrs.index].errorEDate="";
							    	 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
							    }
						}
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{
							    		  break;
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()
							 && newSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() ){
						inx=0;
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{
							    		  break;
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
						 inx=1;
		    			 $scope.leave.leaveList1[attrs.index].errorEDate="";
		    			 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
						 inx=3;
						 $scope.leave.leaveList1[attrs.index].errorEDate="";
						 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()>(commonAppLevService.selectedDates[3])._d.getTime() ){
						 inx=3;
						 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
						 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }else{break;}
							    oldSDate = oldSDate.add(1,'d');
						}
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
						 inx=1;
		    			 $scope.leave.leaveList1[attrs.index].errorEDate="";
		    			 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    oldSDate = oldSDate.add(1,'d');
						}
					 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
						 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
						 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = newSDate._d.getTime();
							    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							    	  }
							    newSDate = newSDate.add(-1,'d');
						}
					 }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() ){
                         inx=3;
						 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
						 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
						 if(attrs.index==3 || attrs.index==1){
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = oldSDate._d.getTime();
								    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }else{break;}
								    oldSDate = oldSDate.add(1,'d');
							}
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    newSDate = newSDate.add(-1,'d');
							} 
						 }else if(attrs.index==2){
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = oldSDate._d.getTime();
								    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }else{break;}
								    oldSDate = oldSDate.add(1,'d');
							}
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
								    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    	  }
								    newSDate = newSDate.add(-1,'d');
							} 
						 }
						 
					 }
					/* else{
						 while(newSDate._d.getTime()>oldSDate._d.getTime()){
							 var tempTimeStamp = oldSDate._d.getTime();
							   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							   oldSDate = oldSDate.add(1,'d');
						}
					 }*/
					 if(attrs.index==1){
                        //reverse check fo index1 
						 var newSDate=applyLevService.convertToMomentObj(newValue[0]);
						 var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
			    		 if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
									inx=0;
									 while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = newSDate._d.getTime();
										    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }
										    newSDate = newSDate.add(-1,'d');
									}
							  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()
									  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
								 inx=1;
								 while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = newSDate._d.getTime();
									   $(".day"+ tempTimeStamp).addClass("hoverDiv");
									    newSDate = newSDate.add(-1,'d');
								}
							  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
									inx=1; 
									$scope.leave.leaveList1[attrs.index].errorEDate="";
									var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
									 while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = oldSDate._d.getTime();
										    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }
										    oldSDate = oldSDate.add(1,'d');
									}
								 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
										inx=0;
										 while(newSDate._d.getTime()>oldSDate._d.getTime()){
											 var tempTimeStamp = newSDate._d.getTime();
											    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
											    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
											    	  }
											    newSDate = newSDate.add(-1,'d');
										}
								  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
									  inx=0;
									  $scope.leave.leaveList1[attrs.index].errorEDate="";
									  var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
									  while(newSDate._d.getTime()>oldSDate._d.getTime()){
											 var tempTimeStamp = oldSDate._d.getTime();
											    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
											    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
											    	  }else{
											    		  break;
											    	  }
											    oldSDate = oldSDate.add(1,'d');
										}
									  while(newSDate._d.getTime()>oldSDate._d.getTime()){
											 var tempTimeStamp = newSDate._d.getTime();
											    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
											    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
											    	  }
											    newSDate = newSDate.add(-1,'d');
										}
								  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()
										  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
									 inx=1;
									 while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = newSDate._d.getTime();
										   $(".day"+ tempTimeStamp).addClass("hoverDiv");
										    newSDate = newSDate.add(-1,'d');
									}
								  }else{
									  if(inx<0){
										  while(newSDate._d.getTime()>oldSDate._d.getTime()){
												 var tempTimeStamp = newSDate._d.getTime();
												   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
												    newSDate = newSDate.add(-1,'d');
											}  
									  }
								 
								  if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
									  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
									  var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
						    			 durationValidator=false;
						    			 holidayValidator=false;
						    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true; 
									    
								  }
							  }
			    	 
					 }else if(attrs.index==2){
						 var newSDate=applyLevService.convertToMomentObj(newValue[0]);
						 var oldSDate=applyLevService.convertToMomentObj(oldValue[0]);
						 if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
								inx=1; 
								$scope.leave.leaveList1[attrs.index].errorEDate="";
								var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
								 while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = oldSDate._d.getTime();
									    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
									    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    	  }
									    oldSDate = oldSDate.add(1,'d');
								}
							 }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
									inx=0;
									 while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = newSDate._d.getTime();
										    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }
										    newSDate = newSDate.add(-1,'d');
									}
							  }else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
								  inx=0;
								  $scope.leave.leaveList1[attrs.index].errorEDate="";
								  var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
								  while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = oldSDate._d.getTime();
										    if( oldSDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }else{
										    		  break;
										    	  }
										    oldSDate = oldSDate.add(1,'d');
									}
								  while(newSDate._d.getTime()>oldSDate._d.getTime()){
										 var tempTimeStamp = newSDate._d.getTime();
										    if( newSDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
										    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										    	  }
										    newSDate = newSDate.add(-1,'d');
									}
							  }else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()
									  && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
								 inx=1;
								 while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = newSDate._d.getTime();
									   $(".day"+ tempTimeStamp).addClass("hoverDiv");
									    newSDate = newSDate.add(-1,'d');
								}
							  }else{
								  if(inx<0){
									  while(newSDate._d.getTime()>oldSDate._d.getTime()){
											 var tempTimeStamp = newSDate._d.getTime();
											   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
											    newSDate = newSDate.add(-1,'d');
										}  
								  }
				
						  }
					 }else if(attrs.index==3){
						 if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()&&
								 (commonAppLevService.selectedDates[7])._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() ){
							 while(newSDate._d.getTime()>oldSDate._d.getTime()){
								 var tempTimeStamp = newSDate._d.getTime();
								   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								    newSDate = newSDate.add(-1,'d');
							} 
						  }
						 else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
							if(inx>-1){
								//do nothing
							}else{
								 while(newSDate._d.getTime()>oldSDate._d.getTime()){
									 var tempTimeStamp = newSDate._d.getTime();
									   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    newSDate = newSDate.add(-1,'d');
						    }
							}
						
						 }else{
								  if(inx<0){
										  while(newSDate._d.getTime()>oldSDate._d.getTime()){
												 var tempTimeStamp = newSDate._d.getTime();
												   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
												    newSDate = newSDate.add(-1,'d');
											}  
									  }
					          }
						 }
					 
					 if(inx>0){
						 if(inx==3){
							//do nothing 
						 }else{
							 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
			    			 element.addClass("dirty-field");
			    			 durationValidator=false;
			    			 holidayValidator=false;
			    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true; 
						 }
					
					 }else if(inx==0){
						 $scope.leave.leaveList1[attrs.index].errorSDate="";
						 element.removeClass("dirty-field");
					 }
				 }
				
			 }
				}else if(newSDate < oldSDate){
							if(attrs.index==0)
								 $(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
							
	//code for phase 2-----------------							
							if($(".day"+ oldSDate._d.getTime()).hasClass("hoverDivStart")){
								if(commonAppLevService.selectedDates.length>1)
							    	 for(var i=0; i<commonAppLevService.selectedDates.length;i++)
							    	 {
							    		 if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))
							    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldSDate.format("DD-MMM-YYYY")))
							    		 {
							    			 if(!($scope.leave.leaveList1[attrs.index].errorSDate=="This date coincides with an already selected leave duration. Please choose some other date."))
							    			 $(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
							    			 $rootScope.startDateSelected = false;
							    		 }else{
							    			 if( $(".day"+ oldSDate._d.getTime()).hasClass("hoverDivEnd")){
								    				break;
								    			}else{
								    				 $(".day"+ oldSDate._d.getTime()).addClass("hoverDivStart");
									    			 break;
								    			}
							    			
							    		 };
							    		 
							    	 };
							}else{

								  if(commonAppLevService.selectedDates.length>2)
								    for(var i=0; i<commonAppLevService.selectedDates.length;i++)
								    {
								    	if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))//this will allow all values in commonAppLevService.selectedDates except the current row's.
								    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldSDate.format("DD-MMM-YYYY")))//allow only if current startdate matches with start date / end date of any other row
								    		 {
								    			  $(".day"+ oldSDate._d.getTime()).removeClass("hoverDivStart");
								    		 }else{
								    			 $(".day"+ oldSDate._d.getTime()).addClass("hoverDivStart");
								    			 break;
								    		 };
								    		 
								    	 };
								
								
							};/*&& !$(".day"+ newSDate._d.getTime()).hasClass("hoverDiv")*/
							   
					
			var listSize=commonAppLevService.selectedDates.length;
				if(listSize==4){
					    if(attrs.index==0){
						       var inx=-1;
										if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])){
												
												$scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
								    			 element.addClass("dirty-field");
								    			 durationValidator=false;
								    			 holidayValidator=false;
								    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
											}else if(newSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])){
												$scope.leave.leaveList1[attrs.index].errorSDate="";
												inx=1;
											}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
												inx=1;
											}else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime() 
													&& (commonAppLevService.selectedDates[1])._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime()){
												
												inx=1;
											}else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()>(commonAppLevService.selectedDates[3])._d.getTime()){
												while(newSDate._d.getTime()<oldSDate._d.getTime()){
													 var tempTimeStamp = oldSDate._d.getTime();
													   $(".day"+ tempTimeStamp).addClass("hoverDiv");
													   oldSDate = oldSDate.add(-1,'d');
												}
												inx=1;
											}
										if(inx>0){
											
											$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
											var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
							    			 durationValidator=false;
							    			 holidayValidator=false;
							    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
										}
					     }else{
						       var inx=-1;
											if(newSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
												 if((commonAppLevService.selectedDates[0])._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
												    inx=1;
												 }
											  }else if(newSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
											       inx=1;
											}else if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[1])._d.getTime() ){
												 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
								    			 element.addClass("dirty-field");
								    			 durationValidator=false;
								    			 holidayValidator=false;
								    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
											}
					             if(inx>0){
													$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
													var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
									    			 durationValidator=false;
									    			 holidayValidator=false;
									    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
												}
											 
					}
										
		}else if(listSize==6){
					   
					   if(attrs.index==0){
						   var inx=-1;
							 if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
							    inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() &&
									newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
								inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
							    inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() &&
									newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
								inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
								$scope.leave.leaveList1[attrs.index].errorSDate="";
				    			 element.removeClass("dirty-field");
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
								$scope.leave.leaveList1[attrs.index].errorSDate="";
				    			 element.removeClass("dirty-field");
							}
							if(inx>0){
								$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
								var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
							}else if(inx==0){
								$scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
							}
					   }else{
						   var inx=-1;
						 
											if(newSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() ||
													newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()>(commonAppLevService.selectedDates[3])._d.getTime() 
													){
												inx=1;
											//	$scope.editStart=false;
											}
											else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()
													|| oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
												$scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
										    	 element.addClass("dirty-field");
										    	 durationValidator=false;
								    			 holidayValidator=false;
								    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
								    			 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
								    			 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
								    		//	 $scope.editStart=false;
											}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime()
													|| oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime())	{
											   inx=1;
											}
											  if(attrs.index==1){
												   if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
													    inx=0;
													}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
														inx=1;
														$scope.leave.leaveList1[attrs.index].errorSDate="";
														element.removeClass("dirty-field");
													}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
														inx=1;
														$scope.leave.leaveList1[attrs.index].errorSDate="";
														element.removeClass("dirty-field");
														
													}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() &&
															newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
														inx=0;
													}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
													 if(newSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
														 //do nothing
													 }else{
														$scope.leave.leaveList1[attrs.index].errorEDate="";
														var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
														$scope.leave.leaveList1[attrs.index].errorSDate="";
														element.removeClass("dirty-field");
														inx=2;
														}
													}
											   }
											if(inx>0){
												if(inx==2){
													//do nothing
												}else{
													
													$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
													var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
											    	 durationValidator=false;
									    			 holidayValidator=false;
									    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
											}
										}else if(inx==0){
											$scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
									    	 element.addClass("dirty-field");
									    	 durationValidator=false;
							    			 holidayValidator=false;
							    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
										}
										}
										
				}else if(listSize==8){
					if(attrs.index==0){

						   var inx=-1;
							 if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
							    inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() &&
									newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
								inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
							    inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() &&
									newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
								inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
							    inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
								inx=1;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() &&
									newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
								inx=0;
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
								$scope.leave.leaveList1[attrs.index].errorSDate="";
				    			 element.removeClass("dirty-field");
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
								$scope.leave.leaveList1[attrs.index].errorSDate="";
				    			 element.removeClass("dirty-field");
							}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
								$scope.leave.leaveList1[attrs.index].errorSDate="";
				    			 element.removeClass("dirty-field");
							}
							if(inx>0){
								$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
								var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
							}else if(inx==0){
								$scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
							}
					   
					}else{
						var inx=-1;
						if(newSDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() ||
								newSDate._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() ||
								newSDate._d.getTime()<(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
						 
							inx=1;
						}
						else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()
								|| oldSDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()
								|| oldSDate._d.getTime()>(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
							inx=0;
			    			 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
						}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime()
								|| oldSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime()
								|| oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[4])._d.getTime())	{
						    inx=1;
						}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && newSDate._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()>(commonAppLevService.selectedDates[1])._d.getTime()){
							inx=1;
						}
						  if(attrs.index==1){
							   if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
								    inx=0;
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
									inx=1;
									$scope.leave.leaveList1[attrs.index].errorSDate="";
									element.removeClass("dirty-field");
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
									inx=1;
									$scope.leave.leaveList1[attrs.index].errorSDate="";
									element.removeClass("dirty-field");
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() &&
										newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
									inx=0;
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
								    inx=0;
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
									inx=1;
									$scope.leave.leaveList1[attrs.index].errorSDate="";
									element.removeClass("dirty-field");
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
									inx=1;
									$scope.leave.leaveList1[attrs.index].errorSDate="";
									element.removeClass("dirty-field");
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() &&
										newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
									inx=0;
								}else if(oldSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()&& (commonAppLevService.selectedDates[3])._d.getTime()>(commonAppLevService.selectedDates[5])._d.getTime()){
									inx=1;
								}
								else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime()){
									if(inx==1){
										// do nothing
									}else{
										$scope.leave.leaveList1[attrs.index].errorEDate="";
										var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
										$scope.leave.leaveList1[attrs.index].errorSDate="";
										element.removeClass("dirty-field");
										inx=2;
									}
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
								     if((commonAppLevService.selectedDates[2])._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()>(commonAppLevService.selectedDates[1])._d.getTime()){
								    	 inx=1;
								     }else{
								    	
								    	 $scope.leave.leaveList1[attrs.index].errorEDate="";
								    	 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
											$scope.leave.leaveList1[attrs.index].errorSDate="";
											element.removeClass("dirty-field");
											inx=2;
										 }
								}
						   }else if(attrs.index==2){
							   if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
								    inx=0;
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
									inx=1;
									$scope.leave.leaveList1[attrs.index].errorSDate="";
									element.removeClass("dirty-field");
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
									inx=1;
									$scope.leave.leaveList1[attrs.index].errorSDate="";
									element.removeClass("dirty-field");
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() &&
										newSDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newSDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
									inx=0;
								}else if(oldSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newSDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime()){
								    
								    	 $scope.leave.leaveList1[attrs.index].errorEDate="";
								    	 var field=angular.element($("#endDate_"+attrs.index));field.removeClass('dirty-field');
											$scope.leave.leaveList1[attrs.index].errorSDate="";
											element.removeClass("dirty-field");
										if(inx>-1){
											//do nothing
										}else{
											inx=2;
										}
											
									//	 }
								}
						   }
						 if(inx>0){
							if(inx==2){
								//do nothing
							}else{
								$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
								var field=angular.element($("#endDate_"+attrs.index));field.addClass('dirty-field');
						    	 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
						}
					}else if(inx==0){
						$scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    	 element.addClass("dirty-field");
				    	 durationValidator=false;
		    			 holidayValidator=false;
		    			 $scope.leave.leaveList1[attrs.index].selectedSdate=true;
					}
					}
									
									}
									
	//code for phase 2 ends-----------------						    	 
						};
		};
					
					 var durationValidator=true;
					 sDate= applyLevService.convertToMomentObj(newValue[0]);  //convert to moment object
					 
	//code for phase 2------------------------------------------------------					 
			    	 if(commonAppLevService.selectedDates.length>1)  //this will allow for loop to work from second row only
			    	 for(var i=0; i<commonAppLevService.selectedDates.length;i++) //loop for checking if selected start date is not already selected with valid duration
			    	 { //here attrs.index can be 1,2,3 only not 0
			    		 if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))  //this will allow all values in commonAppLevService.selectedDates except the current row's.
			    		 if((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==newValue[0]) //allow only if current startdate matches with start date / end date of any other row
			    		 {
			    			 var tempIndex=Math.floor(i/2);
			    			 
			    			 if(i%2==0) //means selected date matched with start date in other row @index tempIndex. 
			    			 { 
			    				// if already selected start date is first half then we can select only second half in current start date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.startDuration=="First Half")
			    					 if(sDuration=="Second Half")
		    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorSDate="";
			    						 element.removeClass("dirty-field");
			    						 $scope.leave.leaveList1[attrs.index].sEmpty=true;
			    						 
		    					 }else{
		    						 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			 $scope.leave.leaveList1[attrs.index].shalfCheck=true;
					    			 break;
		    					 };
			    				 
			    				 
			    				  // if already selected start date is second half then we can select only first half in current start date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.startDuration=="Second Half")
			    					 if(sDuration=="First Half")
			    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorSDate="";
			    						 element.removeClass("dirty-field");
			    						 $scope.leave.leaveList1[attrs.index].sEmpty=true;
			    					 }else{
			    						 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
						    			 element.addClass("dirty-field");
						    			 durationValidator=false;
						    			 holidayValidator=false;
						    			 $scope.leave.leaveList1[attrs.index].shalfCheck=true;
						    			 break;
			    					 };
			    				 
			    				 // if already selected start date is full day then
			    				 if(($scope.leave.leaveList1[tempIndex].newLeave.startDuration=="Full Day") )
			    					{
			    					/* if(attrs.index==0){
			    						 $scope.leave.leaveList1[attrs.index].errorSDate=" ";
			    					 }else{
			    						 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
						    			 element.addClass("dirty-field");
						    			 durationValidator=false;
						    			 holidayValidator=false;
						    			 $scope.leave.leaveList1[attrs.index].fullday=true;
						    			 break;
			    					 }*/
			    					 
			    					 };
			    			 	}
			    			 else if(i%2==1) //means selected date matched with an end date in other row @index tempIndex. 
			    			  {
			    				 // if already selected end date is first half then we can select only second half in current start date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.endDuration=="First Half")
			    					 if(sDuration=="Second Half")
		    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorSDate="";
			    						 element.removeClass("dirty-field");
			    						 $scope.leave.leaveList1[attrs.index].sEmpty=true;
			    						 
		    					
		    					 }else{
		    						 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			 $scope.leave.leaveList1[attrs.index].shalfCheck=true;
					    			
					    			 break;
		    					 };
			    				 
			    				// if already selected end date is second half then we can select only first half in current start date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.endDuration=="Second Half")
			    					 if(sDuration=="First Half")
		    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorSDate="";
			    						 element.removeClass("dirty-field");
			    						 $scope.leave.leaveList1[attrs.index].sEmpty=true;
		    					
		    					 }else{
		    						 $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			 $scope.leave.leaveList1[attrs.index].shalfCheck=true;
					    			 break;
		    					 };
			    				 
			    				// if already selected end date is full day then
			    				 if(($scope.leave.leaveList1[tempIndex].newLeave.endDuration=="Full Day"))
			    					 {
			    					/* $scope.leave.leaveList1[attrs.index].errorSDate="Leave has been applied for the selected date. Select a different date.";
					    			 element.addClass("dirty-field");
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			 $scope.leave.leaveList1[attrs.index].fullday=true;
					    			 break;*/
			    					 };
			    			 };
			    			 
			    	};
			    };
 /* ------------------------------------------code for multiple apply validation----------------------------------*/
			    
				var listSize = commonAppLevService.selectedDates.length; 
				var newSDate=applyLevService.convertToMomentObj(newValue[0]);
				if(listSize%2==1 && listSize>2){
					
				   if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime()  && newSDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime() && !($scope.leave.leaveList1[0].newLeave.endDuration=="First Half")){
						  $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
						  $(".day"+ newSDate._d.getTime()).addClass("hoverDivStart");
						  element.addClass("dirty-field");
						     durationValidator=false;
						     holidayValidator=false;
						     $scope.leave.leaveList1[attrs.index].selectedSdate=true;
					     }
				   if(listSize==5){
						 if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime()  && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && !($scope.leave.leaveList1[1].newLeave.endDuration=="First Half")){
							  $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
							    element.addClass("dirty-field");
							     durationValidator=false;
							     holidayValidator=false;
							     $scope.leave.leaveList1[attrs.index].selectedSdate=true;
						     }
				     } else  if(listSize==7){
				    	 if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime()  && newSDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && !($scope.leave.leaveList1[1].newLeave.endDuration=="First Half")){
							  $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
							     element.addClass("dirty-field");
							     durationValidator=false;
							     holidayValidator=false;
							     $scope.leave.leaveList1[attrs.index].selectedSdate=true;
						     }
						  if(newSDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime()  && newSDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && !($scope.leave.leaveList1[2].newLeave.endDuration=="First Half")){
							  $scope.leave.leaveList1[attrs.index].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
							     element.addClass("dirty-field");
							     durationValidator=false;
							     holidayValidator=false;
							     $scope.leave.leaveList1[attrs.index].selectedSdate=true;
						     }
						 }
				}else if(listSize==4){
				  var inx=-1;
				  if(attrs.index==0){
					  if((commonAppLevService.selectedDates[0])._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
							 inx=0; 
						   } 
				  }
				  if(attrs.index==1){
					  if((commonAppLevService.selectedDates[2])._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[2])._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
						 inx=1; 
					   }  
				  }
				  if(inx>-1){  
					  if($scope.leave.leaveList1[attrs.index].sEmpty)
				     {
				    	 $scope.leave.leaveList1[inx].errorSDate="";
				     }else{
					  $scope.leave.leaveList1[inx].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
					     element.addClass("dirty-field");
					     durationValidator=false;
					     holidayValidator=false;
					     $scope.leave.leaveList1[inx].selectedSdate=true;
				     }
				  }
		}else  if(listSize==6){
				  var inx=-1
				  if(attrs.index==0){
					  inx=-1;
				  }
				  if(attrs.index==1){
				  if((commonAppLevService.selectedDates[2])._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[2])._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
					 	 inx=1; 
				  }
				  }else if(attrs.index==2){
					  if((commonAppLevService.selectedDates[4])._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
							 inx=2; 
					  }else if((commonAppLevService.selectedDates[4])._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
							 inx=2; 	
						}
					 
				  }
				  if(inx>-1){
					  
					  if($scope.leave.leaveList1[attrs.index].sEmpty)
				     {
				    	 $scope.leave.leaveList1[inx].errorSDate="";
				     }else{
					  $scope.leave.leaveList1[inx].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
					     element.addClass("dirty-field");
					     durationValidator=false;
					     holidayValidator=false;
					     $scope.leave.leaveList1[inx].selectedSdate=true;
				     }
					  if((commonAppLevService.selectedDates[4])._d.getTime()==(commonAppLevService.selectedDates[3])._d.getTime()){
						  if($scope.leave.leaveList1[2].newLeave.startDuration==$scope.leave.leaveList1[1].newLeave.endDuration){
							  $scope.leave.leaveList1[inx].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
							     element.addClass("dirty-field");
							     durationValidator=false;
							     holidayValidator=false;
							     $scope.leave.leaveList1[inx].selectedSdate=true;
						  }
					  }
				  }/*else{
					  if(!(attrs.index==0) && !(attrs.index==1))
					  $scope.leave.leaveList1[attrs.index].errorEDate="";
				  }*/
			  }
				else if(listSize==8){
					 var inx=-1
					 if(attrs.index==1){
						 if((commonAppLevService.selectedDates[2])._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[2])._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
							 inx=1; 
						  } 
					 }else if(attrs.index==2){
						 if((commonAppLevService.selectedDates[4])._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
							  inx=2; 
						  }else if((commonAppLevService.selectedDates[4])._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
							  inx=2; 
						  }
					 }else if(attrs.index==3){
						 if((commonAppLevService.selectedDates[6])._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[6])._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
							  inx=3; 
						  }else if((commonAppLevService.selectedDates[6])._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[6])._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
							  inx=3; 
						  }else if((commonAppLevService.selectedDates[6])._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && (commonAppLevService.selectedDates[6])._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
							  inx=3; 
						  }
					 }
					 
					 
					  if(inx>-1){
						 if(attrs.index==0){
							 //do nothing
						 }else{
							  if($scope.leave.leaveList1[attrs.index].sEmpty)
							     {
							    	 $scope.leave.leaveList1[inx].errorSDate="";
							     }else{
								  $scope.leave.leaveList1[inx].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
								     element.addClass("dirty-field");
								     durationValidator=false;
								     holidayValidator=false;
								     $scope.leave.leaveList1[inx].selectedSdate=true;
							     }
							    if((commonAppLevService.selectedDates[6])._d.getTime() ==(commonAppLevService.selectedDates[1])._d.getTime()|| (commonAppLevService.selectedDates[6])._d.getTime()==(commonAppLevService.selectedDates[3])._d.getTime() ||  (commonAppLevService.selectedDates[5])._d.getTime()==(commonAppLevService.selectedDates[3])._d.getTime()){
							    	if($scope.leave.leaveList1[3].newLeave.startDuration==$scope.leave.leaveList1[0].newLeave.endDuration || $scope.leave.leaveList1[3].newLeave.startDuration==$scope.leave.leaveList1[1].newLeave.endDuration || $scope.leave.leaveList1[3].newLeave.startDuration==$scope.leave.leaveList1[2].newLeave.endDuration){
							    		 $scope.leave.leaveList1[inx].errorSDate="This date coincides with an already selected leave duration. Please choose some other date.";
									     element.addClass("dirty-field");
							    	}
							    }
								  
						 }
					   
					  }
				}
		
		

					 
				 
	/* ------------------------------------------code for multiple apply validation----------------------------------*/
//code for phase 2 ends-----------------		
			    var isValidDate=true;
			    	 if(!(sDate==undefined) && (durationValidator==true)){
			    		 var sdValid=  ValidateDtService.isSdValid($scope,sDate,attrs.index);
			    		 if(!sdValid){
			    			 isValidDate = false;
			    			 holidayValidator=false;
			    			 $rootScope.startDateSelected = false; 
			    		 };
			    	};
			    	
				    	 if(!(newValue[0]==undefined) && isValidDate)
				    	 {
				    		 var innerValidator=true; // if true then the middle selected dates are also valid dates
				    	 
				    		 if(!($scope.leave.leaveList1[attrs.index].newLeave.endDate==undefined)/*&& 
				    				 ($scope.leave.leaveList1[attrs.index].errorEDate=="")*/)
				 			{
				    			 var sdTime=applyLevService.convertToMomentObj(newValue[0]);
				 				 var edTime=applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.endDate);
				 			if(commonAppLevService.selectedDates[parseInt((attrs.index)*2)+1]!=undefined){
				 					 AddClassService.addHoverDivCss(sdTime,edTime); 
				 				 }
				 				 if((sdTime._d.getTime() <= edTime._d.getTime()))
				 				 {
								var tempDate = applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.endDate);
								tempDate = tempDate.add(-1,'d');
								
								var isValid=ValidateDtService.isMidStValid($scope,tempDate,sDate,attrs.index);
								if(!isValid){
									innerValidator=false;
					    			 $rootScope.startDateSelected = false;
								};
								
				 			} else{
				 				$scope.leave.leaveList1[attrs.index].newLeave.endDate=undefined;
				 				commonAppLevService.selectedDates[parseInt((attrs.index)*2)+1]=undefined;
				 				};
				 				
				 				
				 				//check if selection across years is allowed or not---------------
				 				
				 				if(angular.property($scope.leave.leaveList1[attrs.index])("additionalFieldData"))
				 					if(angular.property($scope.leave.leaveList1[attrs.index].additionalFieldData)("validationList")){
				 				var tester=angular.property($scope.leave.leaveList1[attrs.index].additionalFieldData.validationList)("APPLY_ACROSS_FINANCIAL_YEARS");
				 				if(tester){
				 					if("N"==tester.value1){
				 						if(!(sdTime.year()==edTime.year())){
				 							$scope.leave.leaveList1[attrs.index].errorMsg="Leave application across financial years is not allowed for this leave type";
				 							element.addClass("dirty-field");
				 						};
				 					};
				 				};
				 					};
				
				 				
				 			};
								
								
				 			if(!($scope.leave.leaveList1[attrs.index].newLeave.endDate==undefined)){
								var endDt=applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.endDate);
						    	 if(innerValidator && !(WeekendService.hasPendingLev(endDt) 
						    			 || WeekendService.hasApprovedLev(endDt) || WeekendService.isEdWeekend(endDt) || WeekendService.isEdHoliday(endDt) || $scope.leave.leaveList1[attrs.index].selectedEdate)){
						    		 //every thing is valid from start date to end date and middle dates along with duration
						    		 
						    		 if($scope.leave.leaveList1[attrs.index].halfCheck){
							    			//do nothing 
							    		 }else{
							    			 $scope.leave.leaveList1[attrs.index].errorEDate="";
							    		 }
						    	    $("#endDate_"+ attrs.index).removeClass("dirty-field");
						    	     
								};
							};
				    	 
				    	};
				//check for half day error validation-----
				if($scope.leave.leaveList1[attrs.index].checkHalfDay){
	        		var matchedObject=null;
	        		if(!(undefined==$scope.leave.leaveList1[attrs.index].newLeave.startDate))
	        			matchedObject=leaveCalendarService.validateDate(applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.startDate),commonAppLevService.yearlist);
	        		
	        		
	        		if(!(null==matchedObject)){
	        			if(!(undefined==matchedObject.sdd))
	        			if(("1"==matchedObject.sdd || "2"==matchedObject.sdd || "3"==matchedObject.sdd))
	        				$scope.leave.leaveList1[attrs.index].errorSDate='';
	        			element.removeClass("dirty-field");
	        			
	        		};
	        	};
				//for calendar edit 
	       /* 	if(leaveCalendarService.checkFlag){
					
					commonAppLevService.selectedDates.splice((parseInt((attrs.index)*2+1)),1);
				}*/
				
				
				}, true);
			}
		}
		
		
		
	});

app.directive('validateEdate',function($rootScope,commonAppLevService,applyLevService,WeekendService,AddClassService,ValidateDtService,leaveCalendarService){
	
return{
		restrict : 'A',
		link : function($scope, element, attrs) {
			$scope.$watch('[leave.leaveList1[$index].newLeave.endDate,leave.leaveList1[$index].newLeave.endDuration]',function(newValue,oldValue) {
			$scope.leave.leaveList1[attrs.index].selectedEdate=false;
			 $scope.leave.leaveList1[attrs.index].doubleCheck=false;
			 $scope.leave.leaveList1[attrs.index].halfCheck=false;
             var holidayValidator=true;
             var eDuration=newValue[1];
             if(newValue[0]==undefined)
             {
            	 var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
            	 var listSize=commonAppLevService.selectedDates.length;
            	 if(listSize<3){
            		 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");  
            	 }else{
            		 if(leaveCalendarService.endDateEqual){
                		 //do nothing
                	 }else{
                		 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd"); 
                	 } 
            	 }
            	
           //if block added to reset end date in main calendar if start date > end date. on 24-Dec-2015
            	 if(!($scope.leave.leaveList1[attrs.index].newLeave.startDate==undefined)){
            		 $rootScope.$emit("test890",
                   			{
                   				endDate : newValue[0]
                   			});
            	 };
             };  //added for flexi 
             
           if(!(newValue[0]==undefined))
           {
				var newEDate=applyLevService.convertToMomentObj(newValue[0]);
				////////////////////end date check
		   if(attrs.index>0){
					  var listSize=commonAppLevService.selectedDates.length;
			      if(listSize==3){
					 if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0]).format("DD-MMM-YYYY") && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1]).format("DD-MMM-YYYY")){
						 //do nothing
				    } else {
						 $(".day"+ newEDate._d.getTime()).addClass("hoverDivEnd");
					 }
			        } else if(listSize==5){
					if( newEDate._d.getTime()>=(commonAppLevService.selectedDates[0]).format("DD-MMM-YYYY") && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1]).format("DD-MMM-YYYY")||
							newEDate._d.getTime()>=(commonAppLevService.selectedDates[2]).format("DD-MMM-YYYY") && newEDate._d.getTime()<=(commonAppLevService.selectedDates[3]).format("DD-MMM-YYYY")){
						 //do nothing  
					}else {
						 $(".day"+ newEDate._d.getTime()).addClass("hoverDivEnd");
					}
				 }else if(listSize==7){
					if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0]).format("DD-MMM-YYYY") && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1]).format("DD-MMM-YYYY")||
							newEDate._d.getTime()>=(commonAppLevService.selectedDates[2]).format("DD-MMM-YYYY") && newEDate._d.getTime()<=(commonAppLevService.selectedDates[3]).format("DD-MMM-YYYY")||
							newEDate._d.getTime()>=(commonAppLevService.selectedDates[4]).format("DD-MMM-YYYY") && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5]).format("DD-MMM-YYYY")){
						 //do nothing  
					}else {
						 $(".day"+ newEDate._d.getTime()).addClass("hoverDivEnd");
                       }
				 }else {
				  $(".day"+ newEDate._d.getTime()).addClass("hoverDivEnd");
	               }
			}else{
					   $(".day"+ newEDate._d.getTime()).addClass("hoverDivEnd");
		       }
			
	    	     commonAppLevService.selectedDates[parseInt((attrs.index)*2)+1]=newEDate;
	    	     $scope.leave.leaveList1[attrs.index].errorMsg='';
	    	     $scope.leave.leaveList1[attrs.index].serverErrMsg='';
	    	     $scope.leave.leaveList1[attrs.index].errorEDate='';
	    	     element.removeClass('dirty-field');
	    	 };
	   if(commonAppLevService.selectedDates[(parseInt((attrs.index)*2+1))]!=undefined)	     
	   if(!(oldValue[0]==undefined) &&!(newValue[0]==undefined)) 
	   {
		var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
		var newEDate=applyLevService.convertToMomentObj(newValue[0]);
		var listSize=commonAppLevService.selectedDates.length;
   if(newEDate < oldEDate ){ //new end date is smaller than old end date remove end date class and mid dates css
			if(attrs.index==0){
				 if(listSize<3){
            		 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");  
            	 }else{
            		 if(leaveCalendarService.endDateEqual){
                		 //do nothing
                	 }else{
                		 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd"); 
                	 } 
            	 }
			
			}
			
			
//code for phase 2-----------------			
			var tempDate = applyLevService.convertToMomentObj(newValue[0]);
			if($(".day"+ oldEDate._d.getTime()).hasClass("hoverDivEnd")){
				if(commonAppLevService.selectedDates.length>1)
			    	 for(var i=0 ; i<commonAppLevService.selectedDates.length ; i++)
			    	 {
			    		 if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))
			    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldEDate.format("DD-MMM-YYYY")))
			    		 {
			    			 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
			    			 if($(".day"+ oldEDate._d.getTime()).hasClass("hoverDiv")){
			    				 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
			    				 if(listSize==4){
			    					 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDiv"); 
				    				 }
			    			 }
			    		 }else{
			    			 if( $(".day"+ oldEDate._d.getTime()).hasClass("hoverDivStart")){
			    				 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
			    				 break;
			    			 }else{
			    				 $(".day"+ oldEDate._d.getTime()).addClass("hoverDivEnd");
				    			 break; 
			    			 }
			    			
			    		 };;
			    	};
			}else{

				  if(commonAppLevService.selectedDates.length>2)
				    for(var i=0; i<commonAppLevService.selectedDates.length;i++)
				    {
				    	if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))//this will allow all values in commonAppLevService.selectedDates except the current row's.
				    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldEDate.format("DD-MMM-YYYY")))//allow only if current startdate matches with start date / end date of any other row
				    		 {
				    			  $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
				    		 }else{
				    			 if(attrs.index==0){//do noting}
				    			 }else{
				    				 $(".day"+ oldEDate._d.getTime()).addClass("hoverDivEnd");
					    			 break;
				    			}
				    		 };
				    		 
				    	 };
			    };
				
			
//code for phase 2 ends-----------------
      if(listSize==2){
			    		 
			    		 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
							    var tempTimeStamp = newEDate._d.getTime();
								 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
								 newEDate = newEDate.add(1,'d');
			};
	   }
      else if(listSize==4){
			 if(attrs.index==0){
							 if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
								 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
								 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = oldEDate._d.getTime();
									    if(oldEDate._d.getTime()>commonAppLevService.selectedDates[3]._d.getTime())
										 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    oldEDate = oldEDate.add(-1,'d');
									}
							 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldEDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime()){
								 $scope.leave.leaveList1[attrs.index].errorEDate="";
								 element.removeClass("dirty-field");
								 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = newEDate._d.getTime();
									    if(newEDate._d.getTime()< (commonAppLevService.selectedDates[2])._d.getTime())
										 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    newEDate = newEDate.add(1,'d');
									}
							 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
								 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = oldEDate._d.getTime();
									    if(oldEDate._d.getTime()> (commonAppLevService.selectedDates[3])._d.getTime()){
									    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    }else{
									    	break;
									    }
										 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    oldEDate = oldEDate.add(-1,'d');
									}
								 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = newEDate._d.getTime();
									    if(newEDate._d.getTime()< (commonAppLevService.selectedDates[2])._d.getTime())
										 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									    newEDate = newEDate.add(1,'d');
									}
							 }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime()
							  ){
								 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
								  while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = oldEDate._d.getTime();
										 $(".day"+ tempTimeStamp).addClass("hoverDiv");
										 oldEDate = oldEDate.add(-1,'d');
									};
							 }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()==commonAppLevService.selectedDates[2]._d.getTime()){

								 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
							 }
							 else{
								  while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = newEDate._d.getTime();
										 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										 newEDate = newEDate.add(1,'d');
									};
									if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
										$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
						    			 element.addClass("dirty-field");
									}
								 }
			 }else{
							 if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
								 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = newEDate._d.getTime();
									    if(newEDate._d.getTime()>commonAppLevService.selectedDates[1]._d.getTime())
										 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										 newEDate = newEDate.add(1,'d');
									}
							 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
						    	  while ( oldEDate._d.getTime() > newEDate._d.getTime() ) {
									     var tempTimeStamp =oldEDate._d.getTime();
									     if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[0])._d.getTime()){
									    	  $(".day"+ tempTimeStamp).addClass("hoverDiv");
									     }else{
									    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									     }
									    
						              	oldEDate = oldEDate.add(-1,'d');
									  }
							}else if((commonAppLevService.selectedDates[2])._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && oldEDate._d.getTime()>(commonAppLevService.selectedDates[1])._d.getTime()){
								  while ( oldEDate._d.getTime() > newEDate._d.getTime() ) {
									     var tempTimeStamp =oldEDate._d.getTime();
									     if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime() ){
									    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									     }else{
									    	 break;
									     }
									    oldEDate = oldEDate.add(-1,'d');
									  }
								  while ( oldEDate._d.getTime() > newEDate._d.getTime() ) {
									     var tempTimeStamp =newEDate._d.getTime();
									     if( newEDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
									    	  $(".day"+ tempTimeStamp).removeClass("hoverDiv");
									     }else{
									    	 break;
									     }
									     newEDate = newEDate.add(1,'d');
									  }
							}else{
								  while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
									    var tempTimeStamp = newEDate._d.getTime();
										 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
										 newEDate = newEDate.add(1,'d');
									};
								 }
			 }
						
		 }
        else if(listSize==6){
        	if(attrs.index==0){
        		  var inx=-1;
        		   if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
        		    inx=1;
        		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
					    var tempTimeStamp = oldEDate._d.getTime();
					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
					    	if(oldEDate._d.getTime()<(commonAppLevService.selectedDates[5])._d.getTime() && oldEDate._d.getTime()>(commonAppLevService.selectedDates[4])._d.getTime()){
    					    		//do noting
    					    	}else{
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");	
    					    	}
					     }
					    oldEDate = oldEDate.add(-1,'d');
					 };	 
        		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
        		    	inx=0;
           			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
 					    var tempTimeStamp = newEDate._d.getTime();
 					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
 					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
 					     }
 					   newEDate = newEDate.add(1,'d');
 					 };	
        		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
        		    	inx=0;
        		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
     					    var tempTimeStamp = oldEDate._d.getTime();
     					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
     					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
     					     }else{break;}
     					    oldEDate = oldEDate.add(-1,'d');
     					 };	
        		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
      					    var tempTimeStamp = newEDate._d.getTime();
      					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
      					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
      					     }
      					   newEDate = newEDate.add(1,'d');
      					 };	
      					var newEDate=applyLevService.convertToMomentObj(newValue[0]);
						var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
						if(newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && (commonAppLevService.selectedDates[5])._d.getTime()<oldEDate._d.getTime()){
						var startTime=(commonAppLevService.selectedDates[4]);
						var endTime=(commonAppLevService.selectedDates[5]);
						AddClassService.addHoverDivCss(startTime,endTime);
						}
        		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime()){
        		    	inx =1;
        		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       			                 oldEDate = oldEDate.add(-1,'d');
        		    	 }
        		    	 var newEDate=applyLevService.convertToMomentObj(newValue[0]);
 						var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
 						if(newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime() && (commonAppLevService.selectedDates[5])._d.getTime()<oldEDate._d.getTime()){
 						var startTime=(commonAppLevService.selectedDates[4]);
 						var endTime=(commonAppLevService.selectedDates[5]);
 						AddClassService.addHoverDivCss(startTime,endTime);
 						}
        		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
            		    inx=1;
            		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = oldEDate._d.getTime();
    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					    oldEDate = oldEDate.add(-1,'d');
    					 };	 
        		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
        		    	inx=0;
              			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = newEDate._d.getTime();
    					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					   newEDate = newEDate.add(1,'d');
    					 };	
           		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
        		    	inx=0;
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = oldEDate._d.getTime();
    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }else{break;}
    					    oldEDate = oldEDate.add(-1,'d');
    					 };	
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
     					    var tempTimeStamp = newEDate._d.getTime();
     					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
     					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
     					     }
     					   newEDate = newEDate.add(1,'d');
     					 };	
       		       }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<(commonAppLevService.selectedDates[4])._d.getTime()){
    		    	  inx =1;
   		    	      while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
  					    var tempTimeStamp = oldEDate._d.getTime();
  					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
  			                 oldEDate = oldEDate.add(-1,'d');
   		    	    }
       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && 
       		    		newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
       		    	inx =1;
       		    }else{
        		    	while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = newEDate._d.getTime();
							 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							 newEDate = newEDate.add(1,'d');
							 
	         	};
        		    }
        		    if(inx>0){
        			   $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
          			 element.addClass("dirty-field");
          			 durationValidator=false;
          			 holidayValidator=false;
          			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
        		    }else if(inx==0){
        			   $scope.leave.leaveList1[attrs.index].errorEDate="";
            			 element.removeClass("dirty-field");
        		     }
        		
        	}else{
        		if(attrs.index==1){ 
        		//reverse check
        			var inx=-1;
        			if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
        			
        				inx=1;
            		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = oldEDate._d.getTime();
    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					    oldEDate = oldEDate.add(-1,'d');
    					 };
        			}else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
        			
        				inx=0;
              			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = newEDate._d.getTime();
    					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					   newEDate = newEDate.add(1,'d');
    					 };	
           		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
           		    	
           		    	inx=0;
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = oldEDate._d.getTime();
    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }else{break;}
    					    oldEDate = oldEDate.add(-1,'d');
    					 };	
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
     					    var tempTimeStamp = newEDate._d.getTime();
     					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
     					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
     					     }
     					   newEDate = newEDate.add(1,'d');
     					 };	
     					 var newEDate=applyLevService.convertToMomentObj(newValue[0]);
  						var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
  						if(newEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()<oldEDate._d.getTime()){
  						var startTime=(commonAppLevService.selectedDates[0]);
  						var endTime=(commonAppLevService.selectedDates[1]);
  						AddClassService.addHoverDivCss(startTime,endTime);
  						}
       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && (commonAppLevService.selectedDates[2])._d.getTime()<(commonAppLevService.selectedDates[4])._d.getTime()){
       		    	inx =1;
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
      					    var tempTimeStamp = oldEDate._d.getTime();
      					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
      			                 oldEDate = oldEDate.add(-1,'d');
       		    	 }
       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && 
       		    		newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
       		    	inx =1;
       		    	while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
  					    var tempTimeStamp = oldEDate._d.getTime();
  					   $(".day"+ tempTimeStamp).addClass("hoverDiv");
  			                 oldEDate = oldEDate.add(-1,'d');
   		    	 }
       		    }
        			   if(inx>0){
        				   $scope.leave.leaveList1[attrs.index].errorSDate="";
                 			 element.removeClass("dirty-field");
            			   $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
              			 element.addClass("dirty-field");
              			 durationValidator=false;
              			 holidayValidator=false;
              			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
            		    }else if(inx==0){
            		    	$scope.leave.leaveList1[attrs.index].errorSDate="";
                  			 element.removeClass("dirty-field");
            			   $scope.leave.leaveList1[attrs.index].errorEDate="";
                			 element.removeClass("dirty-field");
            		     }
        			
        		}
        	   if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
       				 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
           			 element.addClass("dirty-field");
           			 durationValidator=false;
           			 holidayValidator=false;
           			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
       					    	if(oldEDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime() && oldEDate._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime()){
       					    		//do noting
       					    	}else{
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");	
       					    	}
       					    	
       					     }
       					    oldEDate = oldEDate.add(-1,'d');
       					};	 
       			 }
       			 else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime()){
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					     }else{
       					    	 break;
       					     }
       					    oldEDate = oldEDate.add(-1,'d');
       					};
       					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       						    var tempTimeStamp = newEDate._d.getTime();
       						    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
       						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       						     }else{
       						    	 break;
       						     }
       						    newEDate = newEDate.add(1,'d');
       						};	
       						var newEDate=applyLevService.convertToMomentObj(newValue[0]);
       						var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
       						if(newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()<oldEDate._d.getTime()){
       						var startTime=(commonAppLevService.selectedDates[2]);
       						var endTime=(commonAppLevService.selectedDates[3]);
       						AddClassService.addHoverDivCss(startTime,endTime);
       						}
       			 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime()){
       				 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
       				 element.removeClass("dirty-field");
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = newEDate._d.getTime();
       					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					     }else{
       					    	 break;
       					     }
       					    newEDate = newEDate.add(1,'d');
       					};	
       			 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
       				if(!(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime())){
       					if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
       						 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
       		    			 element.addClass("dirty-field");
       		    			 durationValidator=false;
       		    			 holidayValidator=false;
       		    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
       					}else if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
       						 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
       		    			 element.addClass("dirty-field");
       		    			 durationValidator=false;
       		    			 holidayValidator=false;
       		    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
       					}else{
       						$scope.leave.leaveList1[attrs.index].errorEDate=" ";
       					}
       					
       				}else{
       					 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
       	    			 element.addClass("dirty-field");
       	    			 durationValidator=false;
       	    			 holidayValidator=false;
       	    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
       				}
       			
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					     }
       					    oldEDate = oldEDate.add(-1,'d');
       					};
       			 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime()){
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					     }else{
       					    	 break;
       					     }
       					    oldEDate = oldEDate.add(-1,'d');
       					};
       					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       						    var tempTimeStamp = newEDate._d.getTime();
       						    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
       						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       						     }
       						    newEDate = newEDate.add(1,'d');
       						};	
       			 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() ){
       				 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
       				 element.removeClass("dirty-field");
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = newEDate._d.getTime();
       					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					     }
       					    newEDate = newEDate.add(1,'d');
       					};	
       			 }else if(oldEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate<=(commonAppLevService.selectedDates[2])._d.getTime()){
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					    
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					    
       					    	 oldEDate = oldEDate.add(-1,'d');
       					};	
       			 }else if(oldEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && newEDate<=(commonAppLevService.selectedDates[0])._d.getTime()){
       				 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					    
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					    
       					    	 oldEDate = oldEDate.add(-1,'d');
       					};	
       			 }else{
       				 if(!(inx==0)){
       					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
        					    var tempTimeStamp = oldEDate._d.getTime();
        					    
        					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
        					    
        					    	 oldEDate = oldEDate.add(-1,'d');
        					};	 
       				 }
       				
       			 }
        		
       		    
        	}
				
						   
		}else if(listSize==8){
			if(attrs.index==0){

      		  var inx=-1;
      		   if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
      		    inx=1;
      		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
					    var tempTimeStamp = oldEDate._d.getTime();
					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
					     }
					    oldEDate = oldEDate.add(-1,'d');
					 };	 
      		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
      		    	inx=0;
         			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
					    var tempTimeStamp = newEDate._d.getTime();
					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
					     }
					   newEDate = newEDate.add(1,'d');
					 };	
      		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
      		    	inx=0;
      		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
   					    var tempTimeStamp = oldEDate._d.getTime();
   					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
   					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
   					     }else{break;}
   					    oldEDate = oldEDate.add(-1,'d');
   					 };	
      		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = newEDate._d.getTime();
    					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					   newEDate = newEDate.add(1,'d');
    					 };	
    				var oldEDate=applyLevService.convertToMomentObj(oldValue[0]);
    				if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<(commonAppLevService.selectedDates[4])._d.getTime()){
    					var eTime=(commonAppLevService.selectedDates[5]);
    					var sTime=(commonAppLevService.selectedDates[4]);
    					AddClassService.addHoverDivCss(sTime,eTime);
    				}
      		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime()){
      		    	inx =1;
      		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
     					    var tempTimeStamp = oldEDate._d.getTime();
     					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
     			                 oldEDate = oldEDate.add(-1,'d');
      		    	 }
      		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
          		    inx=1;
          		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
  					    var tempTimeStamp = oldEDate._d.getTime();
  					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
  					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
  					     }
  					    oldEDate = oldEDate.add(-1,'d');
  					 };	 
      		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
      		    	inx=0;
            			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
  					    var tempTimeStamp = newEDate._d.getTime();
  					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
  					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
  					     }
  					   newEDate = newEDate.add(1,'d');
  					 };	
         		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
      		    	inx=0;
     		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
  					    var tempTimeStamp = oldEDate._d.getTime();
  					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
  					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
  					     }else{break;}
  					    oldEDate = oldEDate.add(-1,'d');
  					 };	
     		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
   					    var tempTimeStamp = newEDate._d.getTime();
   					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
   					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
   					     }
   					   newEDate = newEDate.add(1,'d');
   					 };	
     		       }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<(commonAppLevService.selectedDates[4])._d.getTime()){
  		    	  inx =1;
 		    	      while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
					    var tempTimeStamp = oldEDate._d.getTime();
					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
			                 oldEDate = oldEDate.add(-1,'d');
 		    	    }
     		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && 
     		    		newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
     		    	inx =1;
     		    }if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
          		    inx=1;
          		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = oldEDate._d.getTime();
    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					    oldEDate = oldEDate.add(-1,'d');
    					 };	 
          		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
          		    	inx=0;
             			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = newEDate._d.getTime();
    					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					   newEDate = newEDate.add(1,'d');
    					 };	
          		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
          		    	inx=0;
          		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
       					    var tempTimeStamp = oldEDate._d.getTime();
       					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
       					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
       					     }else{break;}
       					    oldEDate = oldEDate.add(-1,'d');
       					 };	
          		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
        					    var tempTimeStamp = newEDate._d.getTime();
        					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
        					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
        					     }
        					   newEDate = newEDate.add(1,'d');
        					 };	
          		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && (commonAppLevService.selectedDates[0])._d.getTime()<(commonAppLevService.selectedDates[6])._d.getTime()){
          		    	inx =1;
          		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
         					    var tempTimeStamp = oldEDate._d.getTime();
         					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
         			                 oldEDate = oldEDate.add(-1,'d');
          		    	 }
          		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() &&
          		    		newEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
          		      inx=1;
          		    	while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = newEDate._d.getTime();
							 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							 newEDate = newEDate.add(1,'d');
							 
	         	};
          		    }else{
      		    	while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = newEDate._d.getTime();
							 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							 newEDate = newEDate.add(1,'d');
							 
	         	};
      		    }
      		    if(inx>0){
      			   $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
        			 element.addClass("dirty-field");
        			 durationValidator=false;
        			 holidayValidator=false;
        			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
      		    }else if(inx==0){
      			   $scope.leave.leaveList1[attrs.index].errorEDate="";
          			 element.removeClass("dirty-field");
      		     }
      		
      	
			}else{
				if(attrs.index==1){
					 
	        		//reverse check
	        			var inx=-1;
	        			if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
	        			
	        				inx=1;
	            		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	    					    var tempTimeStamp = oldEDate._d.getTime();
	    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
	    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	    					     }
	    					    oldEDate = oldEDate.add(-1,'d');
	    					 };
	        			}else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
	        			
	        				inx=0;
	              			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	    					    var tempTimeStamp = newEDate._d.getTime();
	    					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
	    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	    					     }
	    					   newEDate = newEDate.add(1,'d');
	    					 };	
	           		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
	           		    	
	           		    	inx=0;
	       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	    					    var tempTimeStamp = oldEDate._d.getTime();
	    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
	    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	    					     }else{break;}
	    					    oldEDate = oldEDate.add(-1,'d');
	    					 };	
	       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	     					    var tempTimeStamp = newEDate._d.getTime();
	     					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
	     					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	     					     }
	     					   newEDate = newEDate.add(1,'d');
	     					 };	
	       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && (commonAppLevService.selectedDates[2])._d.getTime()<(commonAppLevService.selectedDates[4])._d.getTime()){
	       		    	inx =1;
	       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	      					    var tempTimeStamp = oldEDate._d.getTime();
	      					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	      			                 oldEDate = oldEDate.add(-1,'d');
	       		    	 }
	       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && 
	       		    		newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime()){
	       		    	inx =1;
	       		    	while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	  					    var tempTimeStamp = oldEDate._d.getTime();
	  					   $(".day"+ tempTimeStamp).addClass("hoverDiv");
	  			                 oldEDate = oldEDate.add(-1,'d');
	   		    	 }
	       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
		        			
	        				inx=1;
	            		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	    					    var tempTimeStamp = oldEDate._d.getTime();
	    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
	    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	    					     }
	    					    oldEDate = oldEDate.add(-1,'d');
	    					 };
	        			}else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
	        			
	        				inx=0;
	              			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	    					    var tempTimeStamp = newEDate._d.getTime();
	    					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
	    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	    					     }
	    					   newEDate = newEDate.add(1,'d');
	    					 };	
	           		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
	           		    	
	           		    	inx=0;
	       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	    					    var tempTimeStamp = oldEDate._d.getTime();
	    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
	    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	    					     }else{break;}
	    					    oldEDate = oldEDate.add(-1,'d');
	    					 };	
	       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	     					    var tempTimeStamp = newEDate._d.getTime();
	     					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
	     					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	     					     }
	     					   newEDate = newEDate.add(1,'d');
	     					 };	
	       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && (commonAppLevService.selectedDates[2])._d.getTime()<(commonAppLevService.selectedDates[6])._d.getTime()){
	       		    	inx =1;
	       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	      					    var tempTimeStamp = oldEDate._d.getTime();
	      					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
	      			                 oldEDate = oldEDate.add(-1,'d');
	       		    	 }
	       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && 
	       		    		newEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
	       		    	inx =1;
	       		    	while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	  					    var tempTimeStamp = oldEDate._d.getTime();
	  					   $(".day"+ tempTimeStamp).addClass("hoverDiv");
	  			                 oldEDate = oldEDate.add(-1,'d');
	   		    	 }
	       		    }
	        			   if(inx>0){
	        				   $scope.leave.leaveList1[attrs.index].errorSDate="";
	                 			 element.removeClass("dirty-field");
	            			   $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
	              			 element.addClass("dirty-field");
	              			 durationValidator=false;
	              			 holidayValidator=false;
	              			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
	            		    }else if(inx==0){
	            		    	$scope.leave.leaveList1[attrs.index].errorSDate="";
	                  			 element.removeClass("dirty-field");
	            			   $scope.leave.leaveList1[attrs.index].errorEDate="";
	                			 element.removeClass("dirty-field");
	            		     }
	        			
	        		
				}else if(attrs.index==2){
					var inx=-1;
					if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
	        			
        				inx=1;
            		    while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = oldEDate._d.getTime();
    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					    oldEDate = oldEDate.add(-1,'d');
    					 };
        			}else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
        			
        				inx=0;
              			 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = newEDate._d.getTime();
    					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }
    					   newEDate = newEDate.add(1,'d');
    					 };	
           		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[6])._d.getTime()){
           		    	
           		    	inx=0;
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
    					    var tempTimeStamp = oldEDate._d.getTime();
    					    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[7])._d.getTime()){
    					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
    					     }else{break;}
    					    oldEDate = oldEDate.add(-1,'d');
    					 };	
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
     					    var tempTimeStamp = newEDate._d.getTime();
     					    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[6])._d.getTime()){
     					    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
     					     }
     					   newEDate = newEDate.add(1,'d');
     					 };	
       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[7])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()<(commonAppLevService.selectedDates[6])._d.getTime()){
       		    	inx =1;
       		    	 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
      					    var tempTimeStamp = oldEDate._d.getTime();
      					   $(".day"+ tempTimeStamp).removeClass("hoverDiv");
      			                 oldEDate = oldEDate.add(-1,'d');
       		    	 }
       		    }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime() && 
       		    		newEDate._d.getTime()>=(commonAppLevService.selectedDates[6])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[7])._d.getTime()){
       		    	inx =1;
       		    	while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
  					    var tempTimeStamp = oldEDate._d.getTime();
  					   $(".day"+ tempTimeStamp).addClass("hoverDiv");
  			                 oldEDate = oldEDate.add(-1,'d');
   		    	 }
       		    }
        			   if(inx>0){
        				   $scope.leave.leaveList1[attrs.index].errorSDate="";
                 			 element.removeClass("dirty-field");
            			   $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
              			 element.addClass("dirty-field");
              			 durationValidator=false;
              			 holidayValidator=false;
              			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
            		    }else if(inx==0){
            		    	$scope.leave.leaveList1[attrs.index].errorSDate="";
                  			 element.removeClass("dirty-field");
            			   $scope.leave.leaveList1[attrs.index].errorEDate="";
                			 element.removeClass("dirty-field");
            		     }
				}
				
				var newEDate=applyLevService.convertToMomentObj(newValue[0]);
				 if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
					 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
          			 element.addClass("dirty-field");
          			 durationValidator=false;
          			 holidayValidator=false;
          			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }
						    oldEDate = oldEDate.add(-1,'d');
						};	 
				 }
				 else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime()){
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[1])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }else{
						    	 break;
						     }
						    oldEDate = oldEDate.add(-1,'d');
						};
						 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
							    var tempTimeStamp = newEDate._d.getTime();
							    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							     }else{
							    	 break;
							     }
							    newEDate = newEDate.add(1,'d');
							};	
				 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime()){
					 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
					 element.removeClass("dirty-field");
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = newEDate._d.getTime();
						    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[0])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }else{
						    	 break;
						     }
						    newEDate = newEDate.add(1,'d');
						};	
				 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
					 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
          			 element.addClass("dirty-field");
          			 durationValidator=false;
          			 holidayValidator=false;
          			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }
						    oldEDate = oldEDate.add(-1,'d');
						};
				 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[3])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }else{
						    	 break;
						     }
						    oldEDate = oldEDate.add(-1,'d');
						};
						 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
							    var tempTimeStamp = newEDate._d.getTime();
							    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							     }
							    newEDate = newEDate.add(1,'d');
							};	
				 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() ){
					 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
					 element.removeClass("dirty-field");
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = newEDate._d.getTime();
						    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[2])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }
						    newEDate = newEDate.add(1,'d');
						};	
				 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && newEDate._d.getTime()<(commonAppLevService.selectedDates[5])._d.getTime()){
					 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
	    			 element.addClass("dirty-field");
	    			 durationValidator=false;
	    			 holidayValidator=false;
	    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }
						    oldEDate = oldEDate.add(-1,'d');
						};	 
				 }else  if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
					 $scope.leave.leaveList1[attrs.index].errorEDate=" ";
					 element.removeClass("dirty-field");
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = newEDate._d.getTime();
						    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }else{
						    	 break;
						     }
						    newEDate = newEDate.add(1,'d');
						};	
				 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[5])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[4])._d.getTime()){
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						    if( oldEDate._d.getTime() > (commonAppLevService.selectedDates[5])._d.getTime()){
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						     }else{
						    	 break;
						     }
						    oldEDate = oldEDate.add(-1,'d');
						};
						 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
							    var tempTimeStamp = newEDate._d.getTime();
							    if( newEDate._d.getTime() < (commonAppLevService.selectedDates[4])._d.getTime()){
							    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
							     }
							    newEDate = newEDate.add(1,'d');
							};	
				 }else if(oldEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && oldEDate._d.getTime()<=(commonAppLevService.selectedDates[3]) &&
						 newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[3]) ||
						 oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() &&
						  newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
				    
					 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
	    			 element.addClass("dirty-field");
	    			 durationValidator=false;
	    			 holidayValidator=false;
	    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
	  					    var tempTimeStamp = oldEDate._d.getTime();
	  					   $(".day"+ tempTimeStamp).addClass("hoverDiv");
	  			                 oldEDate = oldEDate.add(-1,'d');
	   		    	 }	
				 }else if(oldEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime()){
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						  
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						   
						    	 oldEDate = oldEDate.add(-1,'d');
						};	
				 }else if(oldEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime() && newEDate._d.getTime()<=(commonAppLevService.selectedDates[0])._d.getTime()
						){
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						  
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						   
						    	 oldEDate = oldEDate.add(-1,'d');
						};	
				 }else{
					 while ( newEDate._d.getTime() < oldEDate._d.getTime() ) {
						    var tempTimeStamp = oldEDate._d.getTime();
						  
						    	 $(".day"+ tempTimeStamp).removeClass("hoverDiv");
						   
						    	 oldEDate = oldEDate.add(-1,'d');
						};	
				 }
		
			}
					
					 }
	    }
	else if(oldEDate < newEDate)
			{
				if(attrs.index==0)
					 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
//code for phase 2 -----------------					
				if($(".day"+ oldEDate._d.getTime()).hasClass("hoverDivEnd") &&  !$(".day"+ newEDate._d.getTime()).hasClass("hoverDiv")) {
				  if(commonAppLevService.selectedDates.length>1)
				    	 for(var i=0; i<commonAppLevService.selectedDates.length;i++)
				    	 {
				    		 if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))
				    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldEDate.format("DD-MMM-YYYY")))
				    		 {
				    			 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
				    		 }else{
				    			 $(".day"+ oldEDate._d.getTime()).addClass("hoverDivEnd");
				    			 break;
				    		 };;
				    		 
				    	 };
				}else{

					  if(commonAppLevService.selectedDates.length>2)
					    for(var i=0; i<commonAppLevService.selectedDates.length;i++)
					    {
					    	if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))//this will allow all values in commonAppLevService.selectedDates except the current row's.
					    		 if(!((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==oldEDate.format("DD-MMM-YYYY")))//allow only if current startdate matches with start date / end date of any other row
					    		 {
					    			  $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
					    		 }else{
					    			
					    				 $(".day"+ oldEDate._d.getTime()).addClass("hoverDivEnd");
						    			 break;
					    		 };
					    		 
					    	 };
					    	 for(var i=0; i<commonAppLevService.selectedDates.length;i++)
							 {
							  if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))
					    	  if(newEDate.format("DD-MMM-YYYY")==(commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")){
			    				 $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd"); 
			    				 break;
			    			    }
							 }
					
				};
				
			
				  if($(".day"+ oldEDate._d.getTime()).hasClass("hoverDivEnd") && $(".day"+ newEDate._d.getTime()).hasClass("hoverDiv")){
					  $(".day"+ oldEDate._d.getTime()).removeClass("hoverDivEnd");
				  }
	      if(listSize==4){
					  if(attrs.index==0){
						  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && commonAppLevService.selectedDates[0]._d.getTime()<commonAppLevService.selectedDates[2]._d.getTime()){
							    inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime()
								  ){
							  inx=1;
						  }
						  if(inx>0){
							  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true; 
						  }
					  }
				  }
	if(listSize==6){
					
				 if(attrs.index==0){
						  var inx=-1;
						        if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && commonAppLevService.selectedDates[2]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
							    inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && commonAppLevService.selectedDates[2]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime()){
							inx=1;  
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
							  inx=1; 
						  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime()){
							  inx=1;
						  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
							  inx=1;
						  }
						  if(inx>0){
							   $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;  
						  }else if(inx==0){
							  $scope.leave.leaveList1[attrs.index].errorEDate="";
				    			 element.removeClass("dirty-field");
						  }
						
				 }else{
					 var inx=-1;
						  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[0]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[1]._d.getTime()
								  || oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						  }
						  if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[1]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[1]._d.getTime() ){
							  inx=1;
						  }
						  if( oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						 }
						  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[0]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[1]._d.getTime() ||
								  oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime()){
							 if(oldEDate._d.getTime()==commonAppLevService.selectedDates[2]._d.getTime() &&  newEDate._d.getTime()==commonAppLevService.selectedDates[3]._d.getTime()){
								 $scope.leave.leaveList1[attrs.index].errorEDate="";
								 element.removeClass("dirty-field");
							 }else{
								 inx=1;
							 }
							  
						  }
						  if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() &&
								  newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<commonAppLevService.selectedDates[3]._d.getTime()){
							  inx=1;
						  }
						  if(attrs.index==1){
							  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()){
								  inx=1;
							  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()){
								  inx=1;
							  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
								  inx=1;
							  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime()){
								  inx=1;
							  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
								  inx=1;
							  }
						  }
					
						  if(inx>0){
							  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
				    			 element.addClass("dirty-field");
				    			 durationValidator=false;
				    			 holidayValidator=false;
				    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
						  }
						
			  }
					 
	 }else if(listSize==8){
			
		   if(attrs.index==0){
				  var inx=-1;
				        if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && commonAppLevService.selectedDates[2]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
					    inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() && commonAppLevService.selectedDates[2]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime()){
					inx=1;  
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
					  inx=1; 
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime() && commonAppLevService.selectedDates[6]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime() && commonAppLevService.selectedDates[6]._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime()){
					  inx=1; 
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }
				  if(inx>0){
					   $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
		    			 element.addClass("dirty-field");
		    			 durationValidator=false;
		    			 holidayValidator=false;
		    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;  
				  }else if(inx==0){
					  $scope.leave.leaveList1[attrs.index].errorEDate="";
		    			 element.removeClass("dirty-field");
				  }
				
		 }else{
			 var inx=-1;
			  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[0]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[1]._d.getTime()
					  || oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<commonAppLevService.selectedDates[3]._d.getTime()
					  || oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()<commonAppLevService.selectedDates[5]._d.getTime()){
				  inx=1;
			  }
			  if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[0]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[1]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[1]._d.getTime() ||
					  oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() && newEDate._d.getTime()>commonAppLevService.selectedDates[3]._d.getTime() ||
					  oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>commonAppLevService.selectedDates[5]._d.getTime()){
				  inx=1;
			  }
			  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[0]._d.getTime() &&  newEDate._d.getTime()>=commonAppLevService.selectedDates[1]._d.getTime() ||
					  oldEDate._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() &&  newEDate._d.getTime()>commonAppLevService.selectedDates[3]._d.getTime() ||
					  oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() &&  newEDate._d.getTime()>commonAppLevService.selectedDates[5]._d.getTime()){
				  inx=1;
			  }
			  if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[3]._d.getTime() &&
					  newEDate._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()<commonAppLevService.selectedDates[3]._d.getTime() ||
					  oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() &&
					  newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()<commonAppLevService.selectedDates[5]._d.getTime()){
				  inx=1;
			  }
			  if(attrs.index==1){
				  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && commonAppLevService.selectedDates[4]._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[5]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime() && commonAppLevService.selectedDates[6]._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && commonAppLevService.selectedDates[6]._d.getTime()>=commonAppLevService.selectedDates[2]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }
			  }else if(attrs.index==2){
				  if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime() && commonAppLevService.selectedDates[6]._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && commonAppLevService.selectedDates[6]._d.getTime()>=commonAppLevService.selectedDates[4]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()<=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && newEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }else if(oldEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime() && oldEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[6]._d.getTime()&& newEDate._d.getTime()<=commonAppLevService.selectedDates[7]._d.getTime()){
					  inx=1;
				  }
			  }
			  if(inx>0){
				  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
	    			 element.addClass("dirty-field");
	    			 durationValidator=false;
	    			 holidayValidator=false;
	    			 $scope.leave.leaveList1[attrs.index].selectedEdate=true;
			  }
		 }
				
	  }
//code for phase 2 ends-----------------					    	 
			}; 
	};
	             var durationValidator=true;
	            eDate = applyLevService.convertToMomentObj(newValue[0]);
				 if(commonAppLevService.selectedDates.length>1)
		    	 for(var i=0; i<commonAppLevService.selectedDates.length-1;i++){ //here attrs.index can be 1,2,3 only not 0
			    		 if (!((attrs.index*2)==i  || ((attrs.index*2)+1)==i))  //this will allow all values in commonAppLevService.selectedDates except the current row's.
			    		 if((commonAppLevService.selectedDates[i]).format("DD-MMM-YYYY")==newValue[0]) //allow only if current end date matches with start date / end date of any other row
			    		 {
			    			 var tempIndex=Math.floor(i/2);
			    			 
			    			 if(i%2==0) //means selected date matched with start date in other row @index tempIndex. 
			    			 { 
			    				// if already selected start date is first half then we can select only second half in current end date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.startDuration=="First Half")
			    					 if(eDuration=="Second Half")
		    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorEDate="";
			    						 $scope.leave.leaveList1[attrs.index].doubleCheck=true;
			    						 element.removeClass("dirty-field");
		    					 }else{
		    						 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			 $scope.leave.leaveList1[attrs.index].halfCheck=true;
					    			 break;
		    					 }
			    				 
			    				 
			    				  // if already selected start date is second half then we can select only first half in current end date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.startDuration=="Second Half")
			    					 if(eDuration=="First Half")
			    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorEDate="";
			    						 element.removeClass("dirty-field");
			    						 $scope.leave.leaveList1[attrs.index].doubleCheck=true;
			    					 }else{
			    						 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
						    			 element.addClass("dirty-field");
						    			 $scope.leave.leaveList1[attrs.index].halfCheck=true;
						    			 durationValidator=false;
						    			 holidayValidator=false;
						    			 break;
			    					 };
			    				 
			    				 // if already selected start date is full day then
			    				 if(($scope.leave.leaveList1[tempIndex].newLeave.startDuration=="Full Day") )
			    					{
			    		
			    					 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			 break;
			    					 }
			    			 }
			    			 else if(i%2==1) //means selected date matched with an end date in other row @index tempIndex. 
			    			 {
			    				 // if already selected end date is first half then we can select only second half in current end date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.endDuration=="First Half")
			    					 if(eDuration=="Second Half")
		    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorEDate="";
			    						 element.removeClass("dirty-field");
			    						 $scope.leave.leaveList1[attrs.index].doubleCheck=true;
		    					
		    					 }else{
		    						 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			
					    			 $scope.leave.leaveList1[attrs.index].halfCheck=true;
					    			 break;
		    					 }
			    				 
			    				// if already selected end date is second half then we can select only first half in current end date
			    				 if($scope.leave.leaveList1[tempIndex].newLeave.endDuration=="Second Half")
			    					 if(eDuration=="First Half")
		    					 {
			    						 $scope.leave.leaveList1[attrs.index].errorEDate="";
			    						 element.removeClass("dirty-field");
			    						 $scope.leave.leaveList1[attrs.index].doubleCheck=true;
		    					
		    					 }else{
		    						 $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 $scope.leave.leaveList1[attrs.index].halfCheck=true;
					    			 durationValidator=false;
					    			 holidayValidator=false;
					    			 break;
		    					 };
			    				 
			    				// if already selected end date is of full day
			    				 if(($scope.leave.leaveList1[tempIndex].newLeave.endDuration=="Full Day"))
			    					 {
			    					/* $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					    			 element.addClass("dirty-field");
					    			 holidayValidator=false;
					    			 durationValidator=false;
					    			 break;*/
			    					 }
			    					
			    					
			    			 };
			    			 
			    	};
			    };
 /* ------------------------------------------code for multiple apply validation----------------------------------*/
			var listSize = commonAppLevService.selectedDates.length; 
			var newEDate=applyLevService.convertToMomentObj(newValue[0]);
		    var selectedEdate=false;
			if(commonAppLevService.selectedDates[(parseInt((attrs.index)*2+1))]!=undefined)	
		    if(listSize==4 && !(attrs.index==0)){
			  if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime()  && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime() && !($scope.leave.leaveList1[0].newLeave.endDuration=="First Half")){
				  if( $scope.leave.leaveList1[attrs.index].doubleCheck){
					  $scope.leave.leaveList1[attrs.index].errorEDate="";
						 element.removeClass("dirty-field");
				  }else{
					  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					     element.addClass("dirty-field");
					     durationValidator=false;
					     holidayValidator=false;
					     $scope.leave.leaveList1[attrs.index].selectedEdate=true;
				  }
			       
			       
			     }
			    if(commonAppLevService.selectedDates[2]._d.getTime()<=commonAppLevService.selectedDates[0]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[1]._d.getTime() && !($scope.leave.leaveList1[0].newLeave.endDuration=="First Half")){
					 if( $scope.leave.leaveList1[attrs.index].doubleCheck){
						$scope.leave.leaveList1[attrs.index].errorEDate="";
					}else{
						$scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
						 element.addClass("dirty-field");
						 durationValidator=false;
				         holidayValidator=false;
				         $scope.leave.leaveList1[attrs.index].selectedEdate=true;	
				     }
			    	
				     }
			
		      }/*else{
		         if(commonAppLevService.selectedDates[0]._d.getTime()!=undefined &&  commonAppLevService.selectedDates[1]._d.getTime()!=undefined && 
		        		 commonAppLevService.selectedDates[2]._d.getTime()!=undefined &&  commonAppLevService.selectedDates[3]._d.getTime()!=undefined ){
		        	 if(commonAppLevService.selectedDates[0]._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && commonAppLevService.selectedDates[1]._d.getTime()._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime() ){
			    		  $scope.leave.leaveList1[attrs.index].errorEDate="Leave has been applied for the selected duration. Select a different date.";
							 element.addClass("dirty-field");
							 durationValidator=false;
					         holidayValidator=false;
					         $scope.leave.leaveList1[attrs.index].selectedEdate=true;	
			    	  }
		         }
		      }*/
		  
		    else if(listSize==6 && !(attrs.index==0) ){

		    
				  if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime()  && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
					  if( $scope.leave.leaveList1[attrs.index].doubleCheck){
						  $scope.leave.leaveList1[attrs.index].errorEDate="";
							 element.removeClass("dirty-field");
					  }else{
					  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					     element.addClass("dirty-field");
					     durationValidator=false;
					     holidayValidator=false;
					     $scope.leave.leaveList1[attrs.index].selectedEdate=true;
					  }
				     }
				  var inx = -1;
				if(attrs.index==1){
					 if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime()  && newEDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
						  
						  if( $scope.leave.leaveList1[attrs.index].doubleCheck || (commonAppLevService.selectedDates[2])._d.getTime() ==(commonAppLevService.selectedDates[3])._d.getTime()){
							  $scope.leave.leaveList1[attrs.index].errorEDate="";
						  }else{
							  if(commonAppLevService.selectedDates[4]._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && commonAppLevService.selectedDates[5]._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime()){
								inx=2;  
							  }else{
								  inx = 1;
							  }
				            }
						 
					     }
					 if((commonAppLevService.selectedDates[2])._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[1])._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime()){
						 if( $scope.leave.leaveList1[attrs.index].doubleCheck){
							  $scope.leave.leaveList1[attrs.index].errorEDate="";
						  }else{
							  inx=1;  
						  } 
					 }
					 if((commonAppLevService.selectedDates[1])._d.getTime()==(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()>(commonAppLevService.selectedDates[2])._d.getTime()){
						 $scope.leave.leaveList1[attrs.index].errorEDate="";
					 }
				}
				   if(attrs.index==2) {
					 if(commonAppLevService.selectedDates[4]._d.getTime()<=commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>commonAppLevService.selectedDates[3]._d.getTime() && !($scope.leave.leaveList1[1].newLeave.endDuration=="First Half")){
						inx=2;
						 }else if(commonAppLevService.selectedDates[4]._d.getTime()<commonAppLevService.selectedDates[0]._d.getTime() && newEDate._d.getTime()>commonAppLevService.selectedDates[1]._d.getTime()){
					 inx=2;
					  }
					  if(commonAppLevService.selectedDates[5]._d.getTime()==(commonAppLevService.selectedDates[1])._d.getTime() || commonAppLevService.selectedDates[5]._d.getTime()==(commonAppLevService.selectedDates[0])._d.getTime()){
						 if($scope.leave.leaveList1[2].newLeave.endDuration==$scope.leave.leaveList1[1].newLeave.startDuration || $scope.leave.leaveList1[2].newLeave.endDuration==$scope.leave.leaveList1[0].newLeave.startDuration){
							 inx=2;
						 }
						 
					 }
					 if((commonAppLevService.selectedDates[1])._d.getTime()==(commonAppLevService.selectedDates[4])._d.getTime() && (commonAppLevService.selectedDates[5])._d.getTime()>(commonAppLevService.selectedDates[4])._d.getTime()
							 || (commonAppLevService.selectedDates[3])._d.getTime()==(commonAppLevService.selectedDates[4])._d.getTime() && (commonAppLevService.selectedDates[5])._d.getTime()>(commonAppLevService.selectedDates[4])._d.getTime()){
						 $scope.leave.leaveList1[attrs.index].errorEDate="";
						 element.removeClass("dirty-field");
					 }
					 if((commonAppLevService.selectedDates[2])._d.getTime()==(commonAppLevService.selectedDates[5])._d.getTime()){
					  if($scope.leave.leaveList1[attrs.index].doubleCheck){
						  $scope.leave.leaveList1[attrs.index].errorEDate="";
					  }else{
						  inx=2;  
					  }
						
					 }
				 } 
				 
				  if(inx>-1) {
				     $scope.leave.leaveList1[inx].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
				     element.addClass("dirty-field");
				     durationValidator=false;
				     holidayValidator=false;
				     $scope.leave.leaveList1[inx].selectedEdate=true;
				  }
		 }else if(listSize==8  && !(attrs.index==0) ){
				  if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[0])._d.getTime()  && newEDate._d.getTime()<=(commonAppLevService.selectedDates[1])._d.getTime()){
					  if( $scope.leave.leaveList1[attrs.index].doubleCheck){
						  $scope.leave.leaveList1[attrs.index].errorEDate="";
							 element.removeClass("dirty-field");
					  }else{
					  $scope.leave.leaveList1[attrs.index].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					     element.addClass("dirty-field");
					     durationValidator=false;
					     holidayValidator=false;
					     $scope.leave.leaveList1[attrs.index].selectedEdate=true;
					  }
					    
				     }
				  
				  var inx=-1;
				  if(attrs.index==1){
				  if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime()  && newEDate._d.getTime()<(commonAppLevService.selectedDates[3])._d.getTime()){
					  if( $scope.leave.leaveList1[attrs.index].doubleCheck || (commonAppLevService.selectedDates[2])._d.getTime()==(commonAppLevService.selectedDates[3])._d.getTime() ){
						  $scope.leave.leaveList1[attrs.index].errorEDate="";
							 element.removeClass("dirty-field");
					  }else if((commonAppLevService.selectedDates[4])._d.getTime()<=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[5])._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime() ){
						  $scope.leave.leaveList1[attrs.index].errorEDate="";
							 element.removeClass("dirty-field");
					  }else{
						  inx=1;
					  
					  }
					    
				
				     }else if((commonAppLevService.selectedDates[2])._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[3])._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime()){
				    	 inx=1;
				     }
				  }
				  if(attrs.index==2){
					  if(newEDate._d.getTime()>=(commonAppLevService.selectedDates[4])._d.getTime()  && newEDate._d.getTime()<(commonAppLevService.selectedDates[5])._d.getTime() && ($scope.leave.leaveList1[2].newLeave.endDuration!="First Half")){
						  if( $scope.leave.leaveList1[attrs.index].doubleCheck || (commonAppLevService.selectedDates[4])._d.getTime()==(commonAppLevService.selectedDates[5])._d.getTime() ){
							  $scope.leave.leaveList1[attrs.index].errorEDate="";
								 element.removeClass("dirty-field");
						  }else if(!((commonAppLevService.selectedDates[4])._d.getTime()>=(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[4])._d.getTime()<=(commonAppLevService.selectedDates[3])._d.getTime())){
							  $scope.leave.leaveList1[attrs.index].errorEDate="";
							  element.removeClass("dirty-field");
						  }else{
							  inx=2;
						  
						  }
						  
					     }else if((commonAppLevService.selectedDates[4])._d.getTime()<(commonAppLevService.selectedDates[0])._d.getTime() && (commonAppLevService.selectedDates[5])._d.getTime()>=(commonAppLevService.selectedDates[1])._d.getTime()){
						  inx=2;
					  }else if((commonAppLevService.selectedDates[4])._d.getTime()<(commonAppLevService.selectedDates[2])._d.getTime() && (commonAppLevService.selectedDates[5])._d.getTime()>=(commonAppLevService.selectedDates[3])._d.getTime()){
						  inx=2;
					  }else if(commonAppLevService.selectedDates[5]._d.getTime()==(commonAppLevService.selectedDates[1])._d.getTime() || commonAppLevService.selectedDates[5]._d.getTime()==(commonAppLevService.selectedDates[0])._d.getTime()){
							 if($scope.leave.leaveList1[2].newLeave.endDuration==$scope.leave.leaveList1[1].newLeave.startDuration || $scope.leave.leaveList1[2].newLeave.endDuration==$scope.leave.leaveList1[0].newLeave.startDuration){
								 inx=2;
							 }
							 
						  }
				  }
				  if(attrs.index==3){
				  if(commonAppLevService.selectedDates[6]._d.getTime()<commonAppLevService.selectedDates[0]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[1]._d.getTime()){
					 inx=3;
					    }else if(commonAppLevService.selectedDates[6]._d.getTime()<commonAppLevService.selectedDates[2]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[3]._d.getTime()){
					  inx=3;
					 
				     }else if(commonAppLevService.selectedDates[6]._d.getTime()<commonAppLevService.selectedDates[4]._d.getTime() && newEDate._d.getTime()>=commonAppLevService.selectedDates[5]._d.getTime()  && !($scope.leave.leaveList1[2].newLeave.endDuration=="First Half")){
					  inx=3;
					  }
				     else  if(commonAppLevService.selectedDates[7]._d.getTime()==(commonAppLevService.selectedDates[1])._d.getTime() || commonAppLevService.selectedDates[7]._d.getTime()==(commonAppLevService.selectedDates[0])._d.getTime()  || commonAppLevService.selectedDates[7]._d.getTime()==(commonAppLevService.selectedDates[2])._d.getTime()){
						 if($scope.leave.leaveList1[3].newLeave.endDuration==$scope.leave.leaveList1[1].newLeave.startDuration || $scope.leave.leaveList1[3].newLeave.endDuration==$scope.leave.leaveList1[0].newLeave.startDuration || $scope.leave.leaveList1[3].newLeave.endDuration==$scope.leave.leaveList1[2].newLeave.startDuration){
							 inx=3;
						 }
						 
					  }
				  }
				  if(inx>-1) {
					     $scope.leave.leaveList1[inx].errorEDate="This date coincides with an already selected leave duration. Please choose some other date.";
					     element.addClass("dirty-field");
					     durationValidator=false;
					     holidayValidator=false;
					     $scope.leave.leaveList1[inx].selectedEdate=true;
					  }
				  
				  }	
			 
/* ------------------------------------------code for multiple apply validation end hereeeeee----------------------------------*/
			    var isValidDate=true;
				 if(!(eDate==undefined) && (durationValidator==true) ){
		    		 //if( ($scope.leave.leaveList1[attrs.index].errorSDate=="")){
					 
					 var edValid=  ValidateDtService.isEdValid($scope,eDate,attrs.index);
					 if(!edValid){
						 isValidDate = false;
		    			 holidayValidator=false;
					 };
			    	
		    			/* if($(".day"+ eDate._d.getTime()).hasClass("hoverDiv")){
		    				 $scope.leave.leaveList1[attrs.index].errorEDate="You are trying to apply leave on a selected date!";	
		    				 validator=false;
		    				 holidayValidator=false;
		    				 element.addClass("dirty-field");
				    	} commented for testing purpose only*/
		    		// }	 
				};
		    	 
		 if(!(newValue[0]==undefined) && isValidDate)
			   {
			    		 var innerValidator=true;
			    if(!($scope.leave.leaveList1[attrs.index].newLeave.startDate==undefined)
						/*&& ($scope.leave.leaveList1[attrs.index].errorSDate=="")*/)
					{
						
					var sdTime = applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.startDate);
					var edTime = applyLevService.convertToMomentObj(newValue[0]);
					AddClassService.addHoverDivCss(sdTime,edTime);
	 				 if((sdTime._d.getTime() <= edTime._d.getTime()))
	 				 {
	 					var tempDate=applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.startDate);
					    tempDate = tempDate.add(1,'d');
					   var isValid= ValidateDtService.isMidEtValid($scope,tempDate,eDate,attrs.index);
					   if(!isValid){
						 innerValidator=false;
					   };
					   
	 				 }else{
	 					$scope.leave.leaveList1[attrs.index].errorEDate="The end date of your leave is earlier than the start date of your leave. Change the end date of your leave.";
	    				 element.addClass("dirty-field");
	    				 innerValidator=false;
	    				 
	 				};
	 				
	 				//check if selection across years is allowed or not---------------
	 				if(angular.property($scope.leave.leaveList1[attrs.index])("additionalFieldData"))
	 					if(angular.property($scope.leave.leaveList1[attrs.index].additionalFieldData)("validationList")){
	 				var tester=angular.property($scope.leave.leaveList1[attrs.index].additionalFieldData.validationList)("APPLY_ACROSS_FINANCIAL_YEARS");
	 				if(tester){
	 					if("N"==tester.value1){
	 						if(!(sdTime.year()==edTime.year())){
	 							$scope.leave.leaveList1[attrs.index].errorMsg="Leave application across financial years is not allowed for this leave type";
	 							element.addClass("dirty-field");
	 						};
	 					};
	 				};
	 					};
	 				
	 				
				};
				
				if(!($scope.leave.leaveList1[attrs.index].newLeave.startDate==undefined)){
					var strtDt=applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.startDate);
			    	 if(innerValidator && !(WeekendService.hasPendingLev(strtDt) 
			    			 || WeekendService.hasApprovedLev(strtDt) || WeekendService.isSdWeekend(strtDt) || WeekendService.isSdHoliday(strtDt) || $scope.leave.leaveList1[attrs.index].selectedSdate)){
			    		 if($scope.leave.leaveList1[attrs.index].shalfCheck ||  $scope.leave.leaveList1[attrs.index].fullday){
			    			//do nothing 
			    		 }else{
			    			 $scope.leave.leaveList1[attrs.index].errorSDate="";
			    			 $("#startDate_"+ attrs.index).removeClass("dirty-field");
			    		 }
			    		
			    	    
		    	     
			    	 };
			    };
			 };
			    	 
			    	 
			    	 
			    	 
			    	//check for half day error validation-----
			    	 if($scope.leave.leaveList1[attrs.index].checkHalfDay){
			        		var matchedObject=null;
			        		if(!(undefined==$scope.leave.leaveList1[attrs.index].newLeave.endDate))
			        			matchedObject=leaveCalendarService.validateDate(applyLevService.convertToMomentObj($scope.leave.leaveList1[attrs.index].newLeave.endDate),commonAppLevService.yearlist);
			        		
			        		if(!(null==matchedObject)){
			        			if(!(undefined==matchedObject.edd))
			        				if("1"==matchedObject.edd || "2"==matchedObject.edd ||  "3"==matchedObject.edd)
			        					$scope.leave.leaveList1[attrs.index].errorEDate='';
			        			element.removeClass("dirty-field");
			        		};
			        	};	 
			    	 
			        	if($scope.leave.leaveList1[attrs.index].errorEDate=="" &&  $scope.leave.leaveList1[attrs.index].errorSDate==""){
			        	 var field=angular.element($("#ErrRow_"+attrs.index));
							    	 field.removeClass('dirty-field');
						}else{
							 var field=angular.element($("#ErrRow_"+attrs.index));
					    	 field.addClass('dirty-field');
						}
			}, true);
			
			
		}
	}
	
	
	
});



app.directive('allowOnlyNumbers', function () {  
    return {  
        restrict: 'A',  
        link: function (scope, elm, attrs, ctrl) {  
            elm.on('keypress', function (event) {var specialKeys = new Array();
	     specialKeys.push(8); //Backspace
	     specialKeys.push(9); //Tab
	     specialKeys.push(46); //Delete
	     specialKeys.push(36); //Home
	     specialKeys.push(35); //End
	     specialKeys.push(37); //Left
	     specialKeys.push(39); //Right
	     
	     var keyCode = event.keyCode == 0 ? event.charCode : event.keyCode;
	     var ret = ((keyCode >= 48 && keyCode <= 57) || (specialKeys.indexOf(event.keyCode) != -1 && event.charCode != event.keyCode));
	     
	     
	   //  document.getElementById("error").style.display = ret ? "none" : "inline";
	     return ret;});  
        }  
    }  
}); 

app.directive('validateField', function (commonAppLevService) {  
    return {  
        restrict: 'A',  
        scope:{
        	'isNull' : "=?"
        },
        link: function (scope, elm, attrs, ctrl) {
        	scope.$watch(function() {
				return scope["isNull"];
			},
			function(data) {
				if (null === data || undefined === data || "" === data)
					commonAppLevService.isValidField=false;
				    else
				    	commonAppLevService.isValidField=true;
			});
        	}  
    };  
});





});